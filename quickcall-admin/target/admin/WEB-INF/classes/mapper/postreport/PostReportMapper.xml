<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PostReport">
	<resultMap id="BannerResultMap" type="com.calf.module.postreport.entity.PostReport">
		<id column="post_report_id" property="postReportId"/>
    <result column="complainant_id" property="complainantId"/>
    <result column="complaint_num" property="complaintNum"/>
    <result column="article_post_id" property="articlePostId"/>
    <result column="handel_person" property="handelPerson"/>
    <result column="handel_time" property="handelTime"/>
    <result column="handel_result" property="handelResult"/>
    <result column="complaint_time" property="complaintTime"/>
    <result column="complaint_reason" property="complaintReason"/>
    <result column="state" property="state"/>
    <result column="create_man" property="createMan"/>
    <result column="modify_time" property="modifyTime"/>
    <result column="modify_man" property="modifyMan"/>
    <result column="create_time" property="createTime"/>
	</resultMap>

	<sql id="Base_Column_List">
	    post_report_id, complainant_id, complaint_num,complaint_reason, article_post_id, handel_person,  DATE_FORMAT(
            handel_time,
            '%Y-%c-%d %H:%i:%s'
          ) as handel_time, 
    handel_result, complaint_time, state, create_man, modify_time, modify_man, create_time
	</sql>
	
	<sql id="queryContion">
	   	<if test="null != state and state != ''"> and state = #{state} </if>
	</sql>

	<select id="get" parameterType="map" resultMap="BannerResultMap">
		select
		<include refid="Base_Column_List" />
		from post_report
		post_report_id = #{postReportId}
	</select>

	<select id="queryCount" parameterType="map" resultType="int">
		select count(*) from post_report where 1=1
			<include refid="queryContion" />
		
	</select>
	<select id="query" parameterType="map" resultMap="BannerResultMap">
			select
		<include refid="Base_Column_List" />
		from
		post_report where 1=1
			<include refid="queryContion" />
		  order by create_time desc
		limit ${iDisplayStart},${iDisplayLength}
	</select>
	
    <select id="queryAll" parameterType="map" resultMap="BannerResultMap">
		select
		<include refid="Base_Column_List" />
		from
		post_report where 1=1
	<if test="null != createTime and createTime != '' "> and create_time = #{createTime} </if>
		order by create_time desc
	</select>
	
	<insert id="insert" parameterType="map">
		 insert into post_report (post_report_id, complainant_id, complaint_num, 
      article_post_id, handel_person, handel_time, 
      handel_result, complaint_time, state, 
      create_man, modify_time, modify_man, 
      create_time, complaint_reason)
    values (#{postReportId}, #{complainantId}, #{complaintNum}, 
      #{articlePostId}, #{handelPerson}, #{handelTime}, 
      #{handelResult}, #{complaintTime}, #{state}, 
      #{createMan}, #{modifyTime}, #{modifyMan}, 
      #{createTime}, #{complaintReason})
	</insert>

	<delete id="delete" parameterType="map">
		DELETE FROM post_report
		WHERE post_report_id = #{arg0}
	</delete>

	<select id="getZoneProductById" parameterType="map" resultMap="BannerResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM post_report
		WHERE post_report_id = #{arg0}
	</select>

 	<update id="update" parameterType="map">
	 update post_report
    <set >
      <if test="complainantId != null and complainantId!=''" >
        complainant_id = #{complainantId},
      </if>
      <if test="complaintNum != null and complaintNum != ''" >
        complaint_num = #{complaintNum},
      </if>
      <if test="articlePostId != null and articlePostId != ''" >
        article_post_id = #{articlePostId},
      </if>
      <if test="handelPerson != null and handelPerson != ''" >
        handel_person = #{handelPerson},
      </if>
      <if test="handelTime != null and handelTime != ''" >
        handel_time = #{handelTime},
      </if>
      <if test="handelResult != null and handelResult != ''" >
        handel_result = #{handelResult},
      </if>
      <if test="complaintTime != null and complaintTime != ''" >
        complaint_time = #{complaintTime},
      </if>
      <if test="state != null and state != ''" >
        state = #{state},
      </if>
      <if test="createMan != null and createMan != ''" >
        create_man = #{createMan},
      </if>
      <if test="modifyTime != null and modifyTime != ''" >
        modify_time = #{modifyTime},
      </if>
      <if test="modifyMan != null and modifyMan != ''" >
        modify_man = #{modifyMan},
      </if>
      <if test="createTime != null and createTime != ''" >
        create_time = #{createTime},
      </if>
      <if test="complaintReason != null and complaintReason != ''" >
        complaint_reason = #{complaintReason},
      </if>
    </set>
    where post_report_id = #{postReportId}
	</update> 
	
	<!--   <update id="update" parameterType="map" >
    update post_report
    set complainant_id = #{complainantId,jdbcType=VARCHAR},
      complaint_num = #{complaintNum,jdbcType=VARCHAR},
      article_post_id = #{articlePostId,jdbcType=VARCHAR},
      handel_person = #{handelPerson,jdbcType=VARCHAR},
      handel_time = #{handelTime,jdbcType=VARCHAR},
      handel_result = #{handelResult,jdbcType=VARCHAR},
      complaint_time = #{complaintTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_man= #{createMan,jdbcType=VARCHAR},
      modify_time= #{modifyTime,jdbcType=VARCHAR},
      modify_man= #{modifyMan,jdbcType=VARCHAR},
      create_time= #{createTime,jdbcType=VARCHAR},
      complaint_reason= #{complaintReason,jdbcType=VARCHAR}
       WHERE post_report_id = #{postReportId}
  </update>  -->
</mapper>
