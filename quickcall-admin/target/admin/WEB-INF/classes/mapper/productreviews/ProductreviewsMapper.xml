<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Productreviews">
	<resultMap id="BannerResultMap" type="com.calf.module.opinionfeedback.entity.OpinionFeedback">
	<id column="opinion_feedback_id" property="opinionFeedbackId"/>
    <result column="feedback_person" property="feedbackPerson"/>
    <result column="mobile" property="mobile"/>
    <result column="feedback_time" property="feedbackTime"/>
    <result column="handel_person" property="handelPerson"/>
    <result column="feedback_reason" property="feedbackReason"/>
    <result column="handel_time" property="handelTime"/>
    <result column="handel_result" property="handelResult"/>
    <result column="state" property="state"/>
    <result column="create_man" property="createMan"/>
    <result column="modify_time" property="modifyTime"/>
    <result column="modify_man" property="modifyMan"/>
    <result column="create_time" property="createTime"/>
    <result column="grade" property="grade"/>
    <result column="feedback_type" property="feedbackType"/>
    <result column="feedback_label" property="feedbackLabel"/>
    <result column="feedback_product_id" property="feedbackProductId"/>
     <association property="product" column="feedback_product_id" javaType="Product">
		<id property="productId" column="product_id"/>  
		<result property="productName" column="product_name"/>  
    </association> 
    <association property="account" column="feedback_person" javaType="Account">
		<id property="accountId" column="account_id"/>  
		<result property="nickname" column="nickname"/>  
		<result property="userAvatar" column="user_avatar"/>  
		<result property="phoneNum" column="phone_num"/>  
    </association> 
	</resultMap>

	<sql id="Base_Column_List">
	  opinion_feedback_id, feedback_person, mobile, feedback_reason,feedback_time, handel_person,  DATE_FORMAT(
            handel_time,
            '%Y-%c-%d %H:%i:%s'
          ) as handel_time, 
    handel_result, state, create_man, modify_time, modify_man, create_time,feedback_product_id
	</sql>
	
	<sql id="queryContion">
	<if test="null != state and state != ''"> and t1.state = #{state} </if>
	<if test="null != productName and productName != ''">and (t2.product_name like concat('%',#{productName},'%'))  </if>
	<if test="null != productId and productId != ''">and t1.feedback_product_id =#{productId}  </if>
	<if test="null != feedbackType and feedbackType != ''">and t1.feedback_type =#{feedbackType}  </if>
	<if test="null != feedbackLabel and feedbackLabel != ''">and t1.feedback_label like concat('%',#{feedbackLabel},'%') </if>
	<if test="null != states and states != ''"> and t1.state = 3 or t1.state = 4  </if>
	<if test="null != startTime and startTime != ''"> and  t1.create_time <![CDATA[ >= ]]> #{startTime} </if>
	<if test="null != endTime and endTime != ''"> and  t1.create_time <![CDATA[ < ]]> #{endTime}</if>
    <if test="null != phoneNum and phoneNum != ''"> and  t3.phone_num=#{phoneNum}</if>
	</sql>

	<select id="get" parameterType="map" resultMap="BannerResultMap">
		select
		<include refid="Base_Column_List" />
		from opinion_feedback
		opinion_feedback_id = #{opinionFeedbackId}
	</select>

	<select id="queryCount" parameterType="map" resultType="int">
		 SELECT count(0)
		FROM
		opinion_feedback t1 LEFT JOIN product t2 ON t1.`feedback_product_id`=t2.`product_id`
		 inner JOIN account t3 on t1.feedback_person=t3.account_id where 1=1
			<include refid="queryContion" />
		
	</select>
	<select id="query" parameterType="map" resultMap="BannerResultMap">
	SELECT t1.*,t3.phone_num phone_num,  t3.nickname AS nickname ,t3.user_avatar AS user_avatar,IFNULL(t2.product_name,"") AS product_name
		FROM
		opinion_feedback t1 LEFT JOIN product t2 ON t1.`feedback_product_id`=t2.`product_id`
		 inner JOIN account t3 on t1.feedback_person=t3.account_id where 1=1
			<include refid="queryContion" />
		  ORDER BY t1.feedback_type  ASC,t1.create_time DESC
		limit ${iDisplayStart},${iDisplayLength}
	</select>
	
	<select id="queryByProductId" parameterType="map" resultMap="BannerResultMap">
	 SELECT  opinion_feedback_id,feedback_reason FROM
		opinion_feedback  where state =1 and feedback_product_id=#{feedbackProductId}
		  order by create_time desc
		
	</select>
	
    <select id="queryAll" parameterType="map" resultMap="BannerResultMap">
		select
		<include refid="Base_Column_List" />
		from
		opinion_feedback where 1=1
		<if test="null != createTime and createTime != '' "> and create_time = #{createTime} </if>
		order by create_time desc
	</select>
	
	<insert id="insert" parameterType="map">
		 insert into opinion_feedback (opinion_feedback_id, feedback_person, 
      mobile, feedback_time, handel_person, 
      handel_time, handel_result, state, 
      create_man, modify_time, modify_man, 
      create_time, feedback_reason)
    values (#{opinionFeedbackId}, #{feedbackPerson}, 
      #{mobile}, #{feedbackTime}, #{handelPerson}, 
      #{handelTime}, #{handelResult}, #{state}, 
      #{createMan}, #{modifyTime}, #{modifyMan}, 
      #{createTime}, #{feedbackReason})
	</insert>
	
	<insert id="insertProduct" parameterType="map">
	INSERT into opinion_feedback(opinion_feedback_id,feedback_person,
	mobile,feedback_time,create_time,feedback_product_id,grade,
	feedback_label,feedback_reason,state,modify_time)
	 VALUES(#{opinionFeedbackId},#{feedbackPerson},#{mobile},
	 #{feedbackTime},#{feedbackTime},#{feedbackProductId},#{grade},
     #{feedbackLabel},#{feedbackReason},#{state},#{modifyTime})
	
	</insert>

	<delete id="delete" parameterType="map">
		DELETE FROM opinion_feedback
		WHERE opinion_feedback_id = #{arg0}
	</delete>

	<select id="getZoneProductById" parameterType="map" resultMap="BannerResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM opinion_feedback
		WHERE opinion_feedback_id = #{arg0}
	</select>

	<update id="update" parameterType="map">
		  update opinion_feedback
    <set >
      <if test="feedbackPerson != null and feedbackPerson != ''" >
        feedback_person = #{feedbackPerson},
      </if>
      <if test="mobile != null and mobile != ''" >
        mobile = #{mobile},
      </if>
      <if test="feedbackTime != null and feedbackTime != ''" >
        feedback_time = #{feedbackTime},
      </if>
      <if test="handelPerson != null and handelPerson != ''" >
        handel_person = #{handelPerson},
      </if>
      <if test="handelTime != null and handelTime != ''" >
        handel_time = #{handelTime},
      </if>
      <if test="handelResult != null and handelResult != ''" >
        handel_result = #{handelResult},
      </if>
      <if test="state != null and state != ''" >
        state = #{state},
      </if>
      <if test="createMan != null and createMan != ''" >
        create_man = #{createMan},
      </if>
      <if test="modifyTime != null and modifyTime != ''" >
        modify_time = #{modifyTime},
      </if>
      <if test="modifyMan != null and modifyMan != ''" >
        modify_man = #{modifyMan},
      </if>
      <if test="createTime != null and createTime != ''" >
        create_time = #{createTime},
      </if>
      <if test="feedbackReason != null and feedbackReason != ''" >
        feedback_reason = #{feedbackReason},
      </if>
    </set>
    where opinion_feedback_id = #{opinionFeedbackId}
	</update>
</mapper>
