<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Product">
 <resultMap id="BaseResultMap" type="com.calf.module.product.entity.Product" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
   <id column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="product_category_id" property="productCategoryId" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="DOUBLE" />
    <result column="product_url" property="productUrl" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img" property="productImg" jdbcType="VARCHAR" />
    <result column="is_recommend" property="isRecommend" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="vice_name" property="viceName" jdbcType="VARCHAR" />
    <result column="small_label_font" property="smallLabelFont" jdbcType="VARCHAR" />
    <result column="small_label_img" property="smallLabelImg" jdbcType="VARCHAR" />
    <result column="audit_desc" property="auditDesc" jdbcType="VARCHAR" />
    <result column="product_label" property="productLabel" jdbcType="VARCHAR" />
    <result column="apply_con" property="applyCon" jdbcType="VARCHAR" />
    <result column="apply_process" property="applyProcess" jdbcType="VARCHAR" />
    <result column="apply_num" property="applyNum" jdbcType="INTEGER" />
    <result column="day_repayment" property="dayRepayment" jdbcType="DOUBLE" />
    <result column="all_accrual" property="allAccrual" jdbcType="DOUBLE" />
    <result column="loan_range_min" property="loanRangeMin" jdbcType="DOUBLE" />
    <result column="loan_range_max" property="loanRangeMax" jdbcType="DOUBLE" />
    <result column="time_limit_mint" property="timeLimitMint" jdbcType="VARCHAR" />
    <result column="time_limit_max" property="timeLimitMax" jdbcType="VARCHAR" />
    <result column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="loan_time" jdbcType="DOUBLE" property="loanTime" />
    <result column="success_rate" jdbcType="DOUBLE" property="successRate" />
    <result column="time_limit_type" property="timeLimitType" jdbcType="INTEGER" /> 
     <result column="day_rate" property="dayRate" jdbcType="DOUBLE" />
     <result column="service_rate" property="serviceRate" jdbcType="DOUBLE" />
     <result column="rate_type" property="rateType" jdbcType="INTEGER" /> 
     <result column="recommend_num" property="recommendNum" jdbcType="INTEGER" /> 
     <result column="no_recommend_num" property="noRecommendNum" jdbcType="INTEGER" /> 
     <result column="recommend_reason" property="recommendReason" jdbcType="VARCHAR" /> 
     <result column="product_joice" property="productJoice" jdbcType="VARCHAR" /> 
     <result column="recommend_reason_color" property="recommendReasonColor" jdbcType="VARCHAR" /> 
     <result column="zone_id" property="zoneId" jdbcType="VARCHAR" /> 
     <result column="share_title" property="shareTitle" jdbcType="VARCHAR" /> 
     <result column="share_content" property="shareContent" jdbcType="VARCHAR" /> 
     <result column="link_url_h" property="linkUrlH" jdbcType="VARCHAR" />
     <result column="zone_product_sort.sort" property="zoneProductsort" jdbcType="INTEGER" />
       <result column="the_rate_of" property="theRateOf" jdbcType="INTEGER" />
       <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
       <result column="backup_sort" property="backupSort" jdbcType="VARCHAR" />
       <result column="backup_product_url" property="backupProductUrl" jdbcType="VARCHAR" />
       <result column="show_flag" property="showFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
    product_id, product_category_id, supplier_id, create_time, create_man, modify_time, the_rate_of,
    modify_man, sort, state, product_url, product_name, product_img, is_recommend, remark, 
    vice_name, small_label_font, small_label_img, audit_desc, product_label, apply_con, 
    apply_process, apply_num, day_repayment, all_accrual, loan_range_min, loan_range_max, 
    time_limit_mint, time_limit_max, article_id, loan_time, success_rate,time_limit_type,
    day_rate,service_rate,rate_type,recommend_num,no_recommend_num,recommend_reason,product_joice,recommend_reason_color,zone_id,share_title,share_content,link_url_h,order_time,backup_sort,backup_product_url,show_flag
  </sql>
  
  <select id="get" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		WHERE product_id = #{arg0}
	</select>
	 <select id="queryByName" parameterType="map" resultType="int">
		select count(product_id) from product where 1=1
		<if test="productName !=null"> and product_name =#{productName}</if>
	</select>
	
  <select id="queryCount" parameterType="map" resultType="int">
		select count(product_id) from product where 1=1
		<if test="productId !=null"> and product_id =#{productId}</if>
		<if test="productCategoryId !=null"> and  product_category_id = #{productCategoryId} </if>
		<if test="productName !=null"> and (product_name like concat('%',#{productName},'%'))</if>
		<if test="productLabel !=null"> and (product_label like concat('%',#{productLabel},'%'))</if>
		<if test="isRecommend !=null"> and is_recommend = #{isRecommend} </if>
		<if test="state !=null"> and state = #{state}</if>
		<if test="zoneId !=null and zoneId!=''">and zone_id like concat("%",#{zoneId},"%")</if>
		<if test="notZoneId!=null and notZoneId!=''">and (zone_id is null or zone_id='') or zone_id not like concat("%",#{notZoneId},"%")  </if>
		<if test="productCategoryId!=null and productCategoryId!=''">and product_category_id like concat("%",#{productCategoryId},"%")  </if>
	</select>

	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product where 1=1
		<if test="productId !=null"> and product_id =#{productId}</if>
		<if test="productCategoryId !=null"> and  product_category_id = #{productCategoryId} </if>
		<if test="productName !=null"> and (product_name like concat('%',#{productName},'%'))</if>
		<if test="productLabel !=null"> and (product_label like concat('%',#{productLabel},'%'))</if>
		<if test="isRecommend !=null"> and is_recommend = #{isRecommend} </if>
		<if test="state !=null"> and state = #{state}</if>
		<if test="zoneId !=null and zoneId!=''">and zone_id like concat("%",#{zoneId},"%")</if>
		<if test="notZoneId!=null and notZoneId!=''"> and ((zone_id is null or zone_id='') or zone_id not like concat("%",#{notZoneId},"%"))  </if>
		<if test="orderStr !=null"> order by  ${orderStr} </if>
        <if test="iDisplayStart !=null and iDisplayLength !=null">
		limit ${iDisplayStart},${iDisplayLength}
        </if>
	</select>


	<select id="queryAll" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product where 1=1
		<if test="productId !=null"> and product_id =#{productId}</if>
		<if test="productCategoryId !=null"> and  product_category_id = #{productCategoryId} </if>
		<if test="productName !=null"> and (product_name like concat('%',#{productName},'%'))</if>
		<if test="productLabel !=null"> and (product_label like concat('%',#{productLabel},'%'))</if>
		<if test="isRecommend !=null"> and is_recommend = #{isRecommend} </if>
		<if test="state !=null"> and state = #{state}</if>
		<if test="orderStr !=null"> order by  ${orderStr} </if>
	</select>
	<select id="queryList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product_label where 1=1
	</select>
	
	<delete id="delete" parameterType="map">
		DELETE FROM product_label WHERE
		product_label_id = #{arg0}
	</delete>
	
	 <insert id="insert" parameterType="com.calf.module.product.entity.Product" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
       insert into product (product_id, product_category_id, supplier_id, 
      create_time, create_man, modify_time, 
      modify_man, sort, state, 
      product_url, product_name, product_img, 
      is_recommend, remark, vice_name, 
      small_label_font, small_label_img, audit_desc, 
      product_label, apply_con, apply_process, 
      apply_num, day_repayment, all_accrual, 
      loan_range_min, loan_range_max, time_limit_mint, 
      time_limit_max, article_id,loan_time,success_rate,time_limit_type,day_rate,service_rate,rate_type,recommend_num,no_recommend_num,recommend_reason,product_joice,recommend_reason_color,zone_id,share_title,share_content,link_url_h,the_rate_of,order_time
      ,backup_sort,backup_product_url,show_flag)
    values (#{productId,jdbcType=VARCHAR}, #{productCategoryId,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createMan,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifyMan,jdbcType=VARCHAR}, #{sort,jdbcType=DOUBLE}, #{state,jdbcType=DOUBLE}, 
      #{productUrl,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productImg,jdbcType=VARCHAR}, 
      #{isRecommend,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{viceName,jdbcType=VARCHAR}, 
      #{smallLabelFont,jdbcType=VARCHAR}, #{smallLabelImg,jdbcType=VARCHAR}, #{auditDesc,jdbcType=VARCHAR}, 
      #{productLabel,jdbcType=VARCHAR}, #{applyCon,jdbcType=VARCHAR}, #{applyProcess,jdbcType=VARCHAR}, 
      #{applyNum,jdbcType=INTEGER}, #{dayRepayment,jdbcType=DOUBLE}, #{allAccrual,jdbcType=DOUBLE}, 
      #{loanRangeMin,jdbcType=DOUBLE}, #{loanRangeMax,jdbcType=DOUBLE}, #{timeLimitMint,jdbcType=VARCHAR}, 
      #{timeLimitMax,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR} ,#{loanTime,jdbcType=DOUBLE}, #{successRate,jdbcType=DOUBLE},
      #{timeLimitType,jdbcType=INTEGER},#{dayRate,jdbcType=DOUBLE},  #{serviceRate,jdbcType=DOUBLE},#{rateType,jdbcType=INTEGER},
      #{recommendNum,jdbcType=INTEGER},#{noRecommendNum,jdbcType=INTEGER},#{recommendReason,jdbcType=VARCHAR},#{productJoice,jdbcType=VARCHAR},#{recommendReasonColor,jdbcType=VARCHAR},#{zoneId,jdbcType=VARCHAR},#{shareTitle,jdbcType=VARCHAR},#{shareContent,jdbcType=VARCHAR}
      ,#{linkUrlH,jdbcType=VARCHAR},#{theRateOf},#{orderTime},#{backupSort},#{backupProductUrl},#{showFlag})
  </insert>
  
   <update id="update" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 24 22:18:21 CST 2017.
    -->
    update product
    <set >
        product_id = #{productId,jdbcType=VARCHAR},
        product_category_id = #{productCategoryId,jdbcType=VARCHAR},
        supplier_id = #{supplierId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_man = #{createMan,jdbcType=VARCHAR},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        modify_man = #{modifyMan,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=DOUBLE},
        state = #{state,jdbcType=DOUBLE},
        product_url = #{productUrl,jdbcType=VARCHAR},
        product_name = #{productName,jdbcType=VARCHAR},
        product_img = #{productImg,jdbcType=VARCHAR},
        is_recommend = #{isRecommend,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        vice_name = #{viceName,jdbcType=VARCHAR},
        small_label_font = #{smallLabelFont,jdbcType=VARCHAR},
        small_label_img = #{smallLabelImg,jdbcType=VARCHAR},
        audit_desc = #{auditDesc,jdbcType=VARCHAR},
        product_label = #{productLabel,jdbcType=VARCHAR},
        apply_con = #{applyCon,jdbcType=VARCHAR},
        apply_process = #{applyProcess,jdbcType=VARCHAR},
        apply_num = #{applyNum,jdbcType=INTEGER},
        day_repayment = #{dayRepayment,jdbcType=DOUBLE},
        all_accrual = #{allAccrual,jdbcType=DOUBLE},
        loan_range_min = #{loanRangeMin,jdbcType=DOUBLE},
        loan_range_max = #{loanRangeMax,jdbcType=DOUBLE},
        time_limit_mint = #{timeLimitMint,jdbcType=VARCHAR},
        time_limit_max = #{timeLimitMax,jdbcType=VARCHAR},
        article_id = #{articleId,jdbcType=VARCHAR},
        loan_time = #{loanTime,jdbcType=DOUBLE},
        success_rate = #{successRate,jdbcType=DOUBLE},
        time_limit_type = #{timeLimitType,jdbcType=INTEGER},
        day_rate = #{dayRate,jdbcType=DOUBLE},
        service_rate = #{serviceRate,jdbcType=DOUBLE},
        rate_type = #{rateType,jdbcType=INTEGER},
        recommend_num = #{recommendNum,jdbcType=INTEGER},
        no_recommend_num = #{noRecommendNum,jdbcType=INTEGER},
        recommend_reason = #{recommendReason,jdbcType=VARCHAR},
        product_joice = #{productJoice,jdbcType=VARCHAR},
        recommend_reason_color = #{recommendReasonColor,jdbcType=VARCHAR},
        zone_id = #{zoneId,jdbcType=VARCHAR},
        share_title = #{shareTitle,jdbcType=VARCHAR},
        share_content = #{shareContent,jdbcType=VARCHAR},
        link_url_h=#{linkUrlH,jdbcType=VARCHAR} ,
        the_rate_of=#{theRateOf},
        order_time = #{orderTime},
        backup_product_url=#{backupProductUrl},
        backup_sort=#{backupSort},
        show_flag=#{showFlag}
               
    </set>
     WHERE product_id = #{productId}
  </update>
  
 <update id="updateZone" parameterType="map">
           UPDATE  product SET  product.`zone_id` = CASE  when LENGTH(IFNULL(product.`zone_id`,''))>0  then  CONCAT(product.`zone_id`,',',#{zoneId,jdbcType=VARCHAR})
 else #{zoneId,jdbcType=VARCHAR}  end WHERE product_id IN 
          <foreach collection="list" item="lt" separator="," open="(" close=")">
                 #{lt}
           </foreach>
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 18:40:52 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </select>
  <select id="selectByProductName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_name = #{productName,jdbcType=VARCHAR}
  </select>
  <select id="selectByProductId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </select>
  
  <select id="countInnerYear" resultType="com.calf.module.product.vo.ProductInfoResult">
	   SELECT
		COUNT(product_id) AS count,
		DATE_FORMAT(order_time, '%m-%d') AS dateStr,
		DATE_FORMAT(order_time, '%k:%i') AS hourStr,
		DATE_FORMAT(order_time, '%k') AS hourNum,
		order_time AS orderTime,
		  (DATEDIFF(order_time,NOW()) + 1 ) AS diffDay,
		  (YEAR(order_time) - YEAR(NOW()) ) AS  diffYear
		FROM
			product
		WHERE
			state = 3
		AND order_time BETWEEN #{startTime,jdbcType=TIMESTAMP}
		AND #{endTime,jdbcType=TIMESTAMP}
		GROUP BY
			MONTH (order_time),
			DAY (order_time),
			HOUR (order_time)
		ORDER BY
			order_time
  </select>
  
  
    <insert id="insertAPpointInfo" parameterType="com.calf.module.product.entity.ProductAppointOnline" >
	    insert into product_appoint_online (id, product_id, order_time, 
	      season_type, status, remark, 
	      create_man, modify_man, create_time, 
	      modify_time)
	    values (#{id,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
	      #{seasonType,jdbcType=BIGINT}, #{status,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
	      #{createMan,jdbcType=VARCHAR}, #{modifyMan,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
	      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  
  
  
    <select id="countAppoint" resultType="java.lang.String">
	   SELECT
			id
		FROM
			product_appoint_online
		WHERE
			product_id = #{productId,jdbcType=VARCHAR}
		AND  status  = #{status,jdbcType=BIGINT}
   </select>
   
   
    <update id="updateAppoint" parameterType="map">
	    UPDATE 
	    	product_appoint_online
		SET 
		 	season_type = #{seasonType,jdbcType=BIGINT},
			order_time = #{orderTime,jdbcType=TIMESTAMP},
		    modify_man = #{modifyMan,jdbcType=VARCHAR} ,
		    modify_time = #{modifyTime,jdbcType=TIMESTAMP}
		WHERE
			id = #{id,jdbcType=VARCHAR}
  </update>
  
    <update id="updateAppointStatus" parameterType="map">
	    UPDATE 
	    	product_appoint_online
		SET 
			status = #{status,jdbcType=BIGINT},
			modify_man = #{modifyMan,jdbcType=VARCHAR} ,
		    modify_time = #{modifyTime,jdbcType=TIMESTAMP}
		WHERE
			product_id = #{productId,jdbcType=VARCHAR}
		AND  status  = #{oldStatus,jdbcType=BIGINT}
  </update>
   
   
   
   <sql id="COUNT_PRODUCT_SPREAD_SQL_CONTENT">
			bp.product_id   AS  productId,
			bp.product_name  AS  prodName,
			bp.company_name   AS  companyName,
			bp.id   AS  companyId,
			prod.order_time  AS  orderTime,
			pl.online_time  AS  onlineTime,
			pl.offline_time  AS  offlineTime,
			pext.offline_time  AS  orderOffTime,
			bpt.tally_date  AS  tallyDate,
			prod.product_url  AS  productUrl,
			bpt.sumCpa  AS  sumCpa,
			bpt.registerCount  AS  registerCount,
			pset.payAmount AS tallyAmount,
			bp.owner  AS  owner,
			pext.product_status AS  state,
			pext.audit_status  AS  auditStatus,
			pext.audit_reason  AS  auditReson,
		    pext.spread_type  AS  spreadType,
		    prod.is_recommend AS  recommentFlag,
		    prod.sort  AS   sort,
		    prod.create_time  AS  createTime,
		    prod.modify_time  AS  modifyTime,
		    prod.modify_man  AS  modifyMan,
		    pext.back_flag as  backFlag,
		    prod.show_flag as showFlag,
		    pext.back_url as  backUrl,
		    pext.back_account as  backAccount,
		    pext.back_pwd  as backPwd,
		    pext.offline_reason  as  offlineReason
		    
   </sql>
   
   
<sql id="COUNT_PRODUCT_SPREAD_SQL_BODY">
				buss_product  bp
			LEFT JOIN  (SELECT  pxt.prod_id  ,pxt.audit_status ,pxt.product_status ,pxt.audit_reason  ,pxt.offline_time,pxt.back_flag ,pxt.back_url ,pxt.back_account  ,pxt.back_pwd,bpmodel.id  AS  spread_type_id ,pxt.offline_reason ,bpmodel.model_content AS  spread_type  FROM  product_ext  pxt LEFT JOIN  buss_product_model  bpmodel  ON  pxt.spread_type  =  bpmodel.id )  pext   ON  bp.product_id =  pext.prod_id
			LEFT JOIN  product prod  ON  prod.product_id   =  bp.product_id  
			LEFT JOIN (SELECT   pinner.prod_id , pinner.online_time  ,  pinner.offline_time   FROM   (SELECT  prod_id , online_time  ,  offline_time   FROM  product_lifecycle   ORDER BY  create_time  DESC  )  pinner  GROUP BY  pinner.prod_id  ) pl ON bp.product_id  =  pl.prod_id
			LEFT JOIN (SELECT  ppp.prod_id ,ROUND(SUM(ppp.cpa)/count(ppp.tally_date),2)  AS  sumCpa ,sum(ppp.regist_count) as  registerCount ,SUM(ppp.tally_amount) AS  tallyAmount ,ppp.tally_date  AS  tally_date  FROM  (SELECT prod_id ,cpa ,regist_count ,tally_amount ,tally_date   FROM  buss_product_tally   ORDER BY  tally_date  DESC )  ppp  GROUP BY  prod_id )   bpt  ON  bp.product_id =  bpt.prod_id
			LEFT JOIN  (SELECT  sum(pay_amount) AS  payAmount ,prod_id   FROM  buss_product_settle  GROUP BY  prod_id )  pset   ON  bp.product_id = pset.prod_id
		WHERE  prod.product_id  IS  NOT  NULL
   </sql>
   
   <sql id="COUNT_PRODUCT_SPREAD_SQL_CONDITION">
		<if test="showFlag !=null"> 
				AND  prod.show_flag = #{showFlag,jdbcType=INTEGER}
		</if>
		<if test="createMan !=null"> 
				AND  prod.create_man = #{createMan,jdbcType=VARCHAR}
		</if>
		<if test="auditStatus !=null"> 
				AND  pext.audit_status = #{auditStatus,jdbcType=INTEGER}
		</if>
		<if test="paramId !=null"> 
				AND  bp.id = #{paramId,jdbcType=VARCHAR}
		</if>
		<if test="prodName !=null"> 
				AND  prod.product_name  LIKE  CONCAT('%', #{prodName,jdbcType=VARCHAR}, '%')
		</if>
		<if test="companyName !=null"> 
				AND  bp.company_name  LIKE  CONCAT('%', #{companyName,jdbcType=VARCHAR}, '%')
		</if>
		<if test="spreadType != null">
			AND  pext.spread_type_id  = #{spreadType,jdbcType=VARCHAR}
		</if>
		<if test="productStatus != null">
			AND  prod.state = #{productStatus,jdbcType=INTEGER}
		</if>
		<if test="state != null">
			AND  pext.product_status = #{state,jdbcType=INTEGER}
		</if>
		<if test="onlineTime != null">
			AND  DATE_FORMAT(pl.online_time,'%Y-%m-%d') =  #{onlineTime,jdbcType=VARCHAR}
		</if>
		<if test="offlineTime != null">
			AND  DATE_FORMAT(pl.offline_time,'%Y-%m-%d') =  #{offlineTime,jdbcType=VARCHAR}
		</if>
		<if test="tallyTime != null">
			AND  DATE_FORMAT(bpt.tally_date,'%Y-%m-%d') =  #{tallyTime,jdbcType=VARCHAR}
		</if>
		<if test="recommendFlag != null">
		    AND   prod.is_recommend  =  #{recommendFlag,jdbcType=VARCHAR}
		</if>
		<if test="modifyTimeDesc != null">
		    ORDER BY  prod.modify_time  DESC 
		</if>
		<if test="modifyTimeAsc != null">
		    ORDER BY  prod.modify_time  ASC
		</if>
		<if test="createTimeDesc != null">
		    ORDER BY  prod.create_time  DESC 
		</if>
		<if test="createTimeAsc != null">
		    ORDER BY  prod.create_time  ASC
		</if>
		<if test="sortDesc != null">
		    ORDER BY  sort  ASC 
		</if>
		<if test="sortAsc != null">
		    ORDER BY  sort  DESC
		</if>
   </sql>
   
   
   
   
   
   
   <select id="countProductSpread" resultType="com.calf.module.bussiness.vo.ProductSpreadInfo">
	  SELECT
	 <include refid="COUNT_PRODUCT_SPREAD_SQL_CONTENT" />
	 FROM
	 <include refid="COUNT_PRODUCT_SPREAD_SQL_BODY" />
	 <include refid="COUNT_PRODUCT_SPREAD_SQL_CONDITION" />
	 LIMIT ${iDisplayStart},${iDisplayLength}
   </select>
   
   
   
   <select id="countProductSpreadNum" resultType="int">
		SELECT
			count(bp.product_id)
		 FROM
		 <include refid="COUNT_PRODUCT_SPREAD_SQL_BODY" />
		 <include refid="COUNT_PRODUCT_SPREAD_SQL_CONDITION" />
   </select>
   
   <select id="countProductSpreadExport" resultType="com.calf.module.bussiness.vo.ProductSpreadInfo">
	 	SELECT
		 <include refid="COUNT_PRODUCT_SPREAD_SQL_CONTENT" />
		 FROM
		 <include refid="COUNT_PRODUCT_SPREAD_SQL_BODY" />
		 <include refid="COUNT_PRODUCT_SPREAD_SQL_CONDITION" />
   </select>
   
   
   
   
   <select id="countProductTally" resultType="com.calf.module.bussiness.vo.ProductLineInfoResult">
		SELECT
			pl.prod_id AS productId,
			bp.product_name AS productName,
			bp.company_name  AS  companyName,
			pl.online_time AS onlineTime,
			pl.offline_time AS offlineTime,
			tmp.first_online_time AS firstOnlineTime,
      		bp.id  AS  companyId
		FROM
			product_lifecycle pl
		LEFT JOIN (
			SELECT
				MIN(online_time) AS first_online_time,
				prod_id
			FROM
				product_lifecycle
			WHERE
				online_time IS NOT NULL
			GROUP BY
				prod_id
		) tmp ON pl.prod_id = tmp.prod_id
		LEFT JOIN product prod ON pl.prod_id = prod.product_id
        LEFT JOIN buss_product  bp  ON   pl.prod_id = bp.product_id
		WHERE
			online_time IS NOT NULL
			<if test="createMan != null">
				AND  prod.create_man = #{createMan}
			</if>
		ORDER BY
			online_time
   </select>
   
   
   <select id="queryProductLineInfo"   parameterType="map"   resultType="com.calf.module.bussiness.vo.ProductTallyInfo">
		SELECT
			prod_id AS productId,
			DATE_FORMAT(tally_date,'%Y-%m-%d') AS  tallyDate
		FROM
			buss_product_tally
		
		WHERE  1 = 1
		
		<if test="idListStr != null">
			AND  prod_id IN 
		   <foreach collection="idListStr"  item="item" open="(" separator="," close=")">
	                #{item}       
	       </foreach> 
       </if>
       ORDER BY
			prod_id,
			tally_date
   </select>
   
   
   <select id="queryProductNameList"      resultType="com.calf.module.bussiness.vo.ProductIdNameInfo">
			SELECT
				productInfo.product_id AS productId,
				productInfo.product_name AS productName,
                productInfo.company_name AS  companyName
        
			FROM
				(
					SELECT
						product_id,
						product_name,
                        company_name,
						owner
					FROM
						buss_product
					WHERE
						product_id NOT IN (
							SELECT
								product_id
							FROM
								product
						)
				)  productInfo
				where  productInfo.owner = #{currUser}
			ORDER BY
				CONVERT (productInfo.product_name USING gbk) ASC
   </select>
   <select id="queryProductNameListExt"      resultType="com.calf.module.bussiness.vo.ProductIdNameInfo">
			
					SELECT
						product_id AS productId,
						product_name AS productName,
						company_name AS  companyName
					FROM
						buss_product
					WHERE
						product_id = #{productId}
					
				
   </select>
   
   
   <select id="queryProductAndCompany"      resultType="java.lang.String">
			
					SELECT
						product_id 
					FROM
						buss_product
					WHERE
						id = #{productId}
					
				
   </select>
   
   
   <select id="queryProductAndCompanyExt"      resultType="com.calf.module.bussiness.vo.ProductIdNameInfo">
			
					SELECT
						product_id AS productId,
						product_name AS productName,
						company_name  AS  companyName
					FROM
						buss_product
					WHERE
						id = #{companyId}
						and  owner = #{currUser}
					
				
   </select>
   
   
   
   
   
   <select id="queryProductNameByProductId"   parameterType="map"   resultType="java.lang.String">
		SELECT
			product_name
		FROM
			buss_product
		WHERE
			product_id = #{productName}
   </select>
   
   
   	<update id="autoUpdateStatus" >
		update 
			product
		set 
			state = #{productStatus}
		where 
			product_id   =  #{productId}
	</update>
   	
   	<update id="updatePoductPart" >
		
   	UPDATE 
		product
	SET 
		recommend_reason = #{recommendReason},
		recommend_reason_color = #{recommendReasonColor},
		is_recommend = #{isRecommend},
		sort = #{sort},
		backup_sort = #{backSort},
		<!-- backup_product_url = #{backProdUrl}, -->
		order_time  = #{orderTime},
		zone_id = #{zoneId},
		show_flag = #{showFlag},
		modify_time = NOW(),
		modify_man =#{modifyMan}
	WHERE
		product_id =  #{productId}
	
		<!-- update 
			product
		set 
			is_recommend = #{isRecommend},
			sort = #{sort},
			modify_time = NOW(),
			modify_man =#{modifyMan}
		where 
			product_id   =  #{productId} -->
	</update>
	
	
	
   	<update id="updatePoductName" >
		update 
			product
		set 
			product_name = #{productName},
			modify_time = NOW(),
			modify_man =#{modifyMan}
		where 
			product_id   =  #{productId}
	</update>
   	<update id="updatePoductModifyTime" >
		update 
			product
		set 
			modify_time = NOW(),
			modify_man =#{modifyMan}
		where 
			product_id   =  #{productId}
	</update>
   
   
   
   
   
	<update id="batchUpdateProductPart" parameterType="map">
		<foreach collection="list" item="prod" >
		        UPDATE 
		        	product
				SET 
				 sort = #{prod.sort},
				 is_recommend = #{prod.isRecommend},
				 modify_man = #{prod.currUser},
				 modify_time = #{prod.currTime}
				WHERE
					product_id = #{prod.productId}
				AND 
					state = 1      ;
		</foreach>
	</update>
	
	<!-- 查询更新记录数 -->
	<select id="queryUpdateProductCount"      resultType="java.lang.Integer">
		SELECT  count(1)  FROM  product  WHERE  state = 1    AND   product_id      in 
		<foreach collection="list" item="prod"  open="("  close=")"  separator=",">
		        #{prod.productId}
		</foreach>	
				
   </select>
  
</mapper>