<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Account">
    <resultMap id="resultMap" type="Account">
        <id property="accountId" column="account_id"/>
        <id property="useId" column="use_id"/>
        <id property="phoneNum" column="phone_num"/>
        <id property="tokenCode" column="token_code"/>
        <id property="password" column="password"/>
        <id property="salt" column="salt"/>
        <id property="viewCode" column="view_code"/>
        <id property="verifyCode" column="verify_code"/>
        <id property="pushToken" column="push_token"/>
        <id property="nickname" column="nickname"/>
        <id property="lng" column="lng"/>
        <id property="lat" column="lat"/>
        <id property="source" column="source"/>
        <id property="userAvatar" column="user_avatar"/>
        <id property="loginCounts" column="login_counts"/>
        <id property="loginErrorCounts" column="login_error_counts"/>
        <id property="lastLoginTime" column="last_login_time"/>
        <id property="loginState" column="login_state"/>
        <id property="gesturePass" column="gesture_pass"/>
        <id property="inviter" column="inviter"/>
        <id property="state" column="state"/>
        <id property="stepStatus" column="step_status"/>
        <id property="deviceId" column="device_id"/>
        <id property="phoneType" column="phone_type"/>
        <id property="createTime" column="create_time"/>
        <id property="createMan" column="create_man"/>
        <id property="modifyTime" column="modify_time"/>
        <id property="modifyMan" column="modify_man"/>
        <id property="remark" column="remark"/>
          <id property="appChannelName" column="app_channel_name"/>
        <id property="accountType" column="account_type"/>
        <id property="gtClientId" column="gt_client_id"/>
        <id property="lastGtClientId" column="last_gt_client_id"/>
        
    </resultMap>

    <sql id="Base_Column_List">
          account_id,
          use_id,
          phone_num,
          token_code,
          salt,
          password,
          view_code,
          verify_code,
          push_token,
          nickname,
          lng,
          lat,
          source,
          user_avatar,
          login_counts,
          login_error_counts,
          last_login_time,
          login_state,
          gesture_pass,
          inviter,
          state,
          step_status,
          device_id,
          phone_type,
          create_time,
          create_man,
          modify_time,
          modify_man,
          remark,
          app_channel_name,
          account_type,
          gt_client_id,
          last_gt_client_id
    </sql>

    <select id="get" parameterType="map" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from account where phone_num = #{arg0}
    </select>
    
    <select id="like" parameterType="map" resultMap="resultMap">
        select
        account_id,
          use_id,
          phone_num,
          token_code,
          salt,
          view_code,
          verify_code,
          push_token,
          nickname,
          lng,
          lat,
          source,
          user_avatar,
          login_counts,
          login_error_counts,
          DATE_FORMAT(
            last_login_time,
            '%Y-%c-%d %H:%i:%s'
          ) as last_login_time,
          login_state,
          gesture_pass,
          inviter,
          state,
          step_status,
          device_id,
          phone_type,
            DATE_FORMAT(
            create_time,
            '%Y-%c-%d %H:%i:%s'
          ) as create_time,
          create_man,
              DATE_FORMAT(
            modify_time,
            '%Y-%c-%d %H:%i:%s'
          ) AS modify_time,
          modify_man,
          remark,
          app_channel_name,
        INSERT(phone_num,4,4,'****') as likePhoneNum
        from account where INSERT(phone_num,4,4,'****') = #{arg0}
    </select>
    
    

 <select id="getAccountId" parameterType="map" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from account where account_id = #{arg0}
    </select>
    <select id="queryCount" parameterType="map" resultType="int">
        select count(account_id) from account where 1=1
        <if test="phoneNum !=null">and phone_num like concat(#{phoneNum},'%')</if>
        <if test="nickname !=null">and nickname like concat('%',#{nickname},'%')</if>
        <if test="state !=null">and state = #{state}</if>
        <if test="sCreateTime!=null and sCreateTime!=''"> and create_time &gt;= #{sCreateTime}</if>
        <if test="eCreateTime!=null and eCreateTime!=''"> and create_time &lt;= #{eCreateTime}</if>
        <if test="sDate!=null and sDate!=''"> and create_time &gt;= #{sDate}</if>
        <if test="eDate!=null and eDate!=''"> and create_time &lt;= #{eDate}</if>
        <if test="accountType!=null and accountType!=''"> and app_channel_name = 'system'</if>
    </select>
    <select id="query" parameterType="map" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from
        account where 1=1
        <if test="phoneNum !=null">and phone_num like concat(#{phoneNum},'%')</if>
        <if test="nickname !=null">and nickname like concat('%',#{nickname},'%')</if>
        <if test="state !=null">and state = #{state}</if>
        <if test="sCreateTime!=null and sCreateTime!=''"> and create_time &gt;= #{sCreateTime}</if>
        <if test="sCreateTime!=null and sCreateTime!=''"> and create_time &lt;= #{eCreateTime}</if>
        <if test="sDate!=null and sDate!=''"> and create_time &gt;= #{sDate}</if>
        <if test="eDate!=null and eDate!=''"> and create_time &lt;= #{eDate}</if>
        <if test="accountType!=null and accountType!=''"> and app_channel_name = 'system'</if>
        <if test="appChannelName!=null and appChannelName!=''"> and app_channel_name like concat('%',#{appChannelName},'%')</if>
        order by create_time desc
        <if test="iDisplayStart!=null and iDisplayLength!=''">
        limit ${iDisplayStart},${iDisplayLength}
        </if>
    </select>

    <select id="queryByNickName" parameterType="map" resultMap="resultMap">
        select
        account_id
        from
        account where 1=1
        and nickname =#{nickname}
    </select>

    <select id="queryAll" parameterType="map" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from
        account where 1=1
        <if test="phoneNum !=null and phoneNum != '' ">and phone_num like concat('%',#{phoneNum},'%')</if>
        <if test="nickname !=null and nickname != '' ">and nickname like concat('%',#{nickname},'%')</if>
        <if test="state !=null and state != '' ">and state = #{state}</if>
         <if test="sCreateTime!=null and sCreateTime!=''"> and create_time &gt;= #{sCreateTime}</if>
        <if test="sCreateTime!=null and sCreateTime!=''"> and create_time &gt;= #{sCreateTime}</if>
        <if test="sDate!=null and sDate!=''"> and create_time &gt;= #{sDate}</if>
        <if test="eDate!=null and eDate!=''"> and create_time &lt;= #{eDate}</if>
        <if test="accountType!=null and accountType!=''"> and app_channel_name = 'system'</if>
        <if test="appChannelName!=null and appChannelName!=''"> and app_channel_name like concat('%',#{appChannelName},'%')</if>
        order by create_time desc
    </select>

    <delete id="delete" parameterType="map">
        DELETE FROM account
        WHERE
        account_id = #{arg0}
    </delete>

    <update id="update" parameterType="map">
        UPDATE account
        <set>
            <if test="useId != null">
                use_id = #{useId},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum},
            </if>
            <if test="tokenCode != null">
                token_code = #{tokenCode},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="salt != null">
                salt = #{salt},
            </if>
            <if test="viewCode != null">
                view_code = #{viewCode},
            </if>
            <if test="verifyCode != null">
                verify_code = #{verifyCode},
            </if>
            <if test="pushToken != null">
                push_token = #{pushToken},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="lng != null">
                lng = #{lng},
            </if>
            <if test="lat != null">
                lat = #{lat},
            </if>
            <if test="source != null">
                source = #{source},
            </if>
            <if test="userAvatar != null">
                user_avatar = #{userAvatar},
            </if>
            <if test="loginCounts != null">
                login_counts = #{loginCounts},
            </if>
            <if test="loginErrorCounts != null">
                login_error_counts = #{loginErrorCounts},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="loginState != null">
                login_state = #{loginState},
            </if>
            <if test="gesturePass != null">
                gesture_pass = #{gesturePass},
            </if>
            <if test="inviter != null">
                inviter = #{inviter},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="stepStatus != null">
                step_status = #{stepStatus},
            </if>
            <if test="deviceId != null">
                device_id = #{deviceId},
            </if>
            <if test="phoneType != null">
                phone_type = #{phoneType},
            </if>
            <if test="createTime != null and createTime != ''">
                create_time = #{createTime},
            </if>
            <if test="createMan != null">
                create_man = #{createMan},
            </if>
            <if test="modifyTime != null and modifyTime != ''">
                modify_time = #{modifyTime},
            </if>
            <if test="modifyMan != null">
                modify_man = #{modifyMan},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>

        </set>
        WHERE account_id = #{accountId}
    </update>
<insert id="insert" parameterType="com.calf.module.loan.entity.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 25 10:48:00 CST 2017.
    -->
    insert into account (account_id, use_id, phone_num, 
      token_code, password, salt, 
      view_code, verify_code, push_token, 
      nickname, lng, lat, 
      source, user_avatar, login_counts, 
      login_error_counts, last_login_time, login_state, 
      gesture_pass, inviter, state, 
      step_status, device_id, phone_type, 
      create_time, create_man, modify_time, 
      modify_man, remark, app_channel_name
      )
    values (#{accountId,jdbcType=VARCHAR}, #{useId,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, 
      #{tokenCode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{viewCode,jdbcType=INTEGER}, #{verifyCode,jdbcType=VARCHAR}, #{pushToken,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{source,jdbcType=INTEGER}, #{userAvatar,jdbcType=VARCHAR}, #{loginCounts,jdbcType=INTEGER}, 
      #{loginErrorCounts,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginState,jdbcType=INTEGER}, 
      #{gesturePass,jdbcType=VARCHAR}, #{inviter,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{stepStatus,jdbcType=TINYINT}, #{deviceId,jdbcType=VARCHAR}, #{phoneType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createMan,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifyMan,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{appChannelName,jdbcType=VARCHAR}
      )
  </insert>

    <select id="querySumCount" parameterType="map" resultType="int">
        select count(account_id) from account where 1=1
        <if test="createTime != null">
            and   TO_DAYS(create_time) =TO_DAYS(NOW())
        </if>
    </select>
    
     <select id="querySumAmt" parameterType="map" resultType="Double">
        select sum(total_money) from yingshou 
    </select>
    
     <select id="queryYsSumAmt" parameterType="map" resultType="Double">
        select total_money from yingshou order by ys_time desc limit 1
    </select>
    
  
   
    <select id="queryAccountsByPhoneNums" parameterType="map" resultMap="resultMap">
      select 
       <include refid="Base_Column_List"/>
       from account where 1=1
       <if test="phoneNums != null">
			AND	phone_num in 
				<foreach collection="phoneNums" open="(" separator="," close=")" item="phoneNum">
				(#{phoneNum})
			    </foreach>
			</if>
    </select>
    
      <select id="queryAllGtAccounts"  resultMap="resultMap">
      select 
       <include refid="Base_Column_List"/>
       from account where 1=1
     and  last_gt_client_id is not null and  last_gt_client_id !='';
    </select>
    
    
    <!--按小时查询注册、登录、激活数的总页数  -->
     <select id="queryLoginAndRegAndActiveByHourCount"  resultType="int" parameterType="map">
       select count(*) from 
          (select  date(mdi.create_time) as createDate,hour(mdi.create_time) as createHour,mdi.app_channel_name as appChannelName,app_name as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount
         from mj_device_info mdi join account on mdi.account_id = account.account_id
         <where> 
              <if test = "startTime == null or startTime == ''">
             	<![CDATA[   mdi.create_time >= current_date() ]]>  
             </if>
     
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  mdi.create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  mdi.app_channel_name  regexp trim(both ',' from  #{appChannelName})  
             </if>
             <if test = "appName != null and appName != '' ">
             	and  mdi.app_name =  #{appName}  
             </if>
         </where>
            group by appChannelName,appName,createDate,createHour ) as new_account_device_info 
     </select>
     
    
    <!--按小时查询注册、登录、激活数  -->
     <select id="queryLoginAndRegAndActiveByHour"  resultType="map" parameterType="map">
        select  '合计' as createDate,'--' as createHour,'--' as appChannelName,'--' as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount from mj_device_info mdi join account on mdi.account_id = account.account_id
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[   mdi.create_time >= current_date() ]]>  
             </if>
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  mdi.create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             	and  mdi.app_channel_name  regexp trim(both ',' from  #{appChannelName})
             </if>
            <if test = "appName != null and appName != '' ">
             	and  mdi.app_name =  #{appName}  
             </if>
         </where>   
           union all  
         ( select  date(mdi.create_time) as createDate,hour(mdi.create_time) as createHour,mdi.app_channel_name as appChannelName,app_name as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount from mj_device_info mdi join account on mdi.account_id = account.account_id
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[   mdi.create_time >= current_date() ]]>  
             </if>
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  mdi.create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             	and  mdi.app_channel_name  regexp trim(both ',' from  #{appChannelName})
             </if>
            <if test = "appName != null and appName != '' ">
             	and  mdi.app_name =  #{appName}  
             </if>
         </where>
           group by appChannelName,appName,createDate,createHour
           <if test = "orderByParam != null and orderByParam != ''">
              order by ${orderByParam} ${orderByType}, createHour desc
           </if>
           <if test="exportflag==null">
             LIMIT #{iDisplayStart},#{iDisplayLength}
             </if> )
     </select>
     
     
     
     <!--按小时查询注册、登录、激活数的总页数  -->
     <select id="queryLoginAndRegAndActiveByDateCount"  resultType="int" parameterType="map">
      select count(*) from    
	      (select  date(mdi.create_time) as createDate,mdi.app_channel_name as appChannelName,app_name as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount
	         from mj_device_info mdi join account on mdi.account_id = account.account_id
	         <where> 
	            <if test = "startTime == null or startTime == ''">
             	    <![CDATA[   mdi.create_time >= current_date() ]]>  
                </if>
	             <if test = "startTime != null and startTime != ''">
	             	<![CDATA[ and  mdi.create_time >= #{startTime} ]]>  
	             </if>
	            <if test = "endTime != null and endTime != ''">
	             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
	             </if>
	             <if test = "appChannelName != null and appChannelName != ''">
	             		and  mdi.app_channel_name  regexp   trim(both ',' from  #{appChannelName})
	             </if>
	             <if test = "appName != null and appName != '' ">
	             	and  mdi.app_name =  #{appName}  
	             </if>
	         </where>
	           group by appChannelName,appName,createDate ) as new_account_device_info
     </select>
     
      <!--按天查询注册、登录、激活数  -->
     <select id="queryLoginAndRegAndActiveByDate"  resultType="map" parameterType="map">
      select  '合计' as createDate,'--' as appChannelName,'--' as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount from mj_device_info mdi join account on mdi.account_id = account.account_id
         <where> 
            <if test = "startTime == null or startTime == ''">
             	<![CDATA[   mdi.create_time >= current_date() ]]>  
             </if>
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[  and mdi.create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             	and  mdi.app_channel_name  regexp trim(both ',' from  #{appChannelName})
             </if>
            <if test = "appName != null and appName != '' ">
             	and  mdi.app_name =  #{appName}  
             </if>
         </where>   
           union all 
          ( select  date(mdi.create_time) as createDate,mdi.app_channel_name as appChannelName,app_name as appName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount from mj_device_info mdi join account on mdi.account_id = account.account_id
         <where> 
            <if test = "startTime == null or startTime == ''">
             	<![CDATA[   mdi.create_time >= current_date() ]]>  
             </if>
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  mdi.create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  mdi.create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  mdi.app_channel_name  regexp  trim(both ',' from  #{appChannelName})
             </if>
            <if test = "appName != null and appName != ''  ">
             	and  mdi.app_name =  #{appName}  
             </if>
         </where>
           group by appChannelName,appName,createDate 
           <if test = "orderByParam != null and orderByParam != ''">
               order by ${orderByParam} ${orderByType}
           </if>
            <if test="exportflag==null">
             LIMIT #{iDisplayStart},#{iDisplayLength}
             </if> )
     </select>
    <!--查询所有渠道  -->
    <select id="queryAppChannelName"  resultMap="resultMap" parameterType="map">
       select app_channel_name as appChannelName from account  where app_channel_name != '' and app_channel_name is not null  group by  app_channel_name  
    </select>
      
    
      <!--实时获取注册、登录、申请人数、申请商户数总页数-->
     <select id="queryLoginAndRegAndApplyNumByCurrentCount"  resultType="int" parameterType="map">
     select count(*) from
     ( SELECT hour(create_time) as createDate,app_channel_name as  appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
              create_time >= current_date()
             <if test = "appChannelName != null and appChannelName != ''">
             	 and  app_channel_name  regexp  #{appChannelName}
             </if>
         </where>
          group by appChannelName,createDate ) new_account 
     </select>
     
     
     
       <!--实时获取注册、登录、申请人数、申请商户数-->
     <select id="queryLoginAndRegAndApplyNumByCurrent"  resultType="map" parameterType="map">
      select  '合计' as createDate,'--' as appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
             create_time >= current_date()
             <if test = "appChannelName != null and appChannelName != ''">
             	 and  app_channel_name  regexp  #{appChannelName}
             </if>
         </where>   
           union all
          ( SELECT hour(create_time) as createDate,app_channel_name as appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
              create_time >= current_date()
             <if test = "appChannelName != null and appChannelName != ''">
             	 and  app_channel_name  regexp  #{appChannelName}
             </if>
         </where>
           group by appChannelName,createDate 
           <if test = "orderByParam != null and orderByParam != ''  and orderByParam !='null' ">
               order by ${orderByParam} ${orderByType} 
           </if>
            <if test="exportflag==null">
             LIMIT #{iDisplayStart},#{iDisplayLength}
             </if> )
     </select>
    
     
     <!--当日获取注册、登录、申请人数、申请商户数总页数-->
     <select id="queryLoginAndRegAndApplyNumByDateCount"  resultType="int" parameterType="map">
     select count(*) from
     ( SELECT date(create_time) as createDate,app_channel_name as  appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[  and create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             	 and  app_channel_name  regexp #{appChannelName}
             </if>
         </where>
          group by appChannelName,createDate) new_account 
     </select>
     
     
     
      <!--当日获取注册、登录、申请人数、申请商户数-->
     <select id="queryLoginAndRegAndApplyNumByDate"  resultType="map" parameterType="map">
      select  '合计' as createDate,'--' as appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  app_channel_name regexp #{appChannelName}
             </if>
         </where>   
           union all 
          ( SELECT date(create_time) as createDate,app_channel_name as  appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(today_click_pro_flag) as applyPersonNum,sum(today_apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  app_channel_name regexp #{appChannelName}
             </if>
         </where>
           group by app_channel_name,createDate
          <if test = "orderByParam != null and orderByParam != ''  and orderByParam !='null' ">
               order by ${orderByParam} ${orderByType} 
           </if>
            <if test="exportflag==null">
             LIMIT #{iDisplayStart},#{iDisplayLength}
             </if> )
     </select>
    
    
    
    <!--市场成效获取注册、登录、申请人数、申请商户数总页数-->
     <select id="queryLoginAndRegAndApplyNumByTotalCount"  resultType="int" parameterType="map">
     select count(*) from
     ( SELECT date(create_time) as createDate,app_channel_name as  appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(click_pro_flag) as applyPersonNum,sum(apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[  and create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             	 and  app_channel_name regexp #{appChannelName}
             </if>
         </where>
          group by appChannelName,createDate ) new_account 
     </select>
     
     
     
      <!--市场成效获取注册、登录、申请人数、申请商户数-->
     <select id="queryLoginAndRegAndApplyNumByTotal"  resultType="map" parameterType="map">
      select  '合计' as createDate,'--' as appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(click_pro_flag) as applyPersonNum,sum(apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[  and create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  app_channel_name regexp #{appChannelName}
             </if>
         </where>   
           union all 
          ( SELECT date(create_time) as createDate,app_channel_name as  appChannelName,count(1) as regCount,count(if(login_counts>0,1,null)) as loginCount,sum(click_pro_flag) as applyPersonNum,sum(apply_pro_count) as applyProductNum from account
         <where> 
             <if test = "startTime == null or startTime == ''">
             	<![CDATA[ create_time >= current_date()]]>  
             </if>
      
             <if test = "startTime != null and startTime != ''">
             	<![CDATA[ and  create_time >= #{startTime} ]]>  
             </if>
            <if test = "endTime != null and endTime != ''">
             	 <![CDATA[ and  create_time < #{endTime} ]]>  
             </if>
             <if test = "appChannelName != null and appChannelName != ''">
             		and  app_channel_name regexp #{appChannelName}
             </if>
         </where>
           group by appChannelName,createDate
          <if test = "orderByParam != null and orderByParam != ''  and orderByParam !='null' ">
               order by ${orderByParam} ${orderByType} 
           </if>
            <if test="exportflag==null">
             LIMIT #{iDisplayStart},#{iDisplayLength}
             </if> )
     </select>
    
</mapper>
