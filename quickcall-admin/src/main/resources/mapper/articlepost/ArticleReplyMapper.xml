<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ArticleReply" >
  <resultMap id="BaseResultMap" type="com.calf.module.community.entity.ArticleReply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="content_title" property="content" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="VARCHAR" />
    <result column="state_type" property="stateType" jdbcType="INTEGER" />
    <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
    <result property="zoneId" column="zone_id"  jdbcType="VARCHAR"  />
	<result property="zoneName" column="zone_name"  jdbcType="VARCHAR"  />
	<result property="nikeName" column="nickname"  jdbcType="VARCHAR"  />
    <result property="articlePostTitle" column="article_post_title"  jdbcType="VARCHAR"  />
    <result property="phoneNum" column="phone_num"  jdbcType="VARCHAR"  />
    
  </resultMap>
  
  <!-- <sql id="Base_Column_List">
  	article_reply.`id`,
	article_reply.content_title,article_reply.content,article_reply.account_id,article_reply.create_man,article_reply.create_time,article_reply.modify_man, 
	article_reply.modify_time, article_reply.state,article_reply.post_id,article_reply.parent_id,article_reply.state_type,article_reply.user_avatar
  </sql> -->
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    id, content_title,content, account_id, create_man, create_time, modify_man, modify_time, state,post_id,parent_id,state_type,user_avatar
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.calf.module.community.entity.ArticleReply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.calf.module.community.entity.ArticleReply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    delete from article_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <sql id="queryCondition">
        <if test="state !=null"> and article_reply.state = #{state}</if>
		<if test="postId !=null"> and article_reply.post_id = #{postId}</if>
		<if test="accountId!=null and accountId!=''"> and article_reply.account_id = #{accountId}</if> 
	    <if test="nickName!=null and nikeName!=''"> and account.nickname like concat('%',#{nickName},'%')</if><!-- 昵称 -->
        <if test="replyContent!=null and replyContent!=''"> and article_reply.content like concat('%',#{replyContent},'%')</if> <!--评论内容-->
        <if test="sDate != null">
            and article_reply.create_time &gt;= #{sDate}
        </if>
        <if test="eDate != null">
            and article_reply.create_time &lt;= #{eDate}
        </if>
  </sql>
   
<!--   <select id="query" parameterType="map"  resultMap="BaseResultMap">
   
 SELECT account.`account_id`,account.`nickname`,article_reply.`id`,zone_product.`zone_name`,article_post.article_post_title,
	article_reply.content_title,article_reply.content,article_reply.account_id,article_reply.create_man,article_reply.create_time,article_reply.modify_man, 
	article_reply.modify_time, article_reply.state,article_reply.post_id,article_reply.parent_id,article_reply.state_type,article_reply.user_avatar
	FROM article_reply 
	LEFT JOIN account ON  article_reply.`account_id` = account.`account_id`
	LEFT JOIN article_post ON article_post.`article_post_id` = article_reply.`post_id`
	LEFT JOIN zone_product ON zone_product.`zone_id` = article_post.`prefecture_id` 
	where 1=1
    <include refid="queryCondition"></include>
		order by article_reply.create_time DESC
	LIMIT ${iDisplayStart},${iDisplayLength}
	</select>  -->
	
	 <select id="query" parameterType="map"  resultMap="BaseResultMap">
   
	SELECT 
	 id, content_title,content, article_reply.account_id, article_reply.create_man, article_reply.create_time, article_reply.modify_man,
	  article_reply.modify_time, article_reply.state,post_id,parent_id,state_type,account.user_avatar,account.nickname,account.phone_num as phone_num
	FROM article_reply 
	inner join account on article_reply.account_id=account.account_id
	where 1=1
    <include refid="queryCondition"></include>
		order by article_reply.create_time DESC
	LIMIT ${iDisplayStart},${iDisplayLength}
	</select>

  <select id="newQuery" parameterType="map"  resultMap="BaseResultMap">

    SELECT
    id, content_title,content, article_reply.account_id, article_reply.create_man, article_reply.create_time, article_reply.modify_man,
    article_reply.modify_time, article_reply.state,post_id,parent_id,state_type
    FROM article_reply
    where 1=1
    <if test="state !=null"> and article_reply.state = #{state}</if>
    <if test="postId !=null"> and article_reply.post_id = #{postId}</if>
    <if test="accountId!=null and accountId!=''"> and article_reply.account_id = #{accountId}</if>
    <if test="replyContent!=null and replyContent!=''"> and article_reply.content like concat('%',#{replyContent},'%')</if> <!--评论内容-->
    <if test="sDate != null">
      and article_reply.create_time &gt;= #{sDate}
    </if>
    <if test="eDate != null">
      and article_reply.create_time &lt;= #{eDate}
    </if>
    <if test="accountIds != null and accountIds!=''">
      and account_id in
      <foreach collection="accountIds" index="index" item="accountId" open="(" separator="," close=")">
        #{accountId}
      </foreach>
    </if>
    order by article_reply.create_time DESC
    LIMIT ${iDisplayStart},${iDisplayLength}
  </select>
	
    <select id="queryZoneByArticlePost" resultMap="BaseResultMap">
	     SELECT zone_product.zone_name,zone_product.zone_id FROM zone_product WHERE zone_product.`state` = 1 AND zone_product.`home_type` =2 
	</select>
  
  
 <!--  <select id="queryCount" parameterType="map" resultType="int">
   SELECT count(article_reply.id)
	FROM article_reply 
	LEFT JOIN account ON  article_reply.`account_id` = account.`account_id`
	LEFT JOIN article_post ON article_post.`article_post_id` = article_reply.`post_id`
	LEFT JOIN zone_product ON zone_product.`zone_id` = article_post.`prefecture_id` where 1=1
	<include refid="queryCondition"></include>
  </select> -->
  
   <select id="queryCount" parameterType="map" resultType="int">
   SELECT count(article_reply.id)
	FROM article_reply 
	inner join account on article_reply.account_id=account.account_id
	where 1=1
	<include refid="queryCondition"></include>
  </select>

  <select id="newQueryCount" parameterType="map" resultType="int">
    SELECT count(article_reply.id)
    FROM article_reply
    where 1=1
    <if test="state !=null"> and article_reply.state = #{state}</if>
    <if test="postId !=null"> and article_reply.post_id = #{postId}</if>
    <if test="accountId!=null and accountId!=''"> and article_reply.account_id = #{accountId}</if>
    <if test="replyContent!=null and replyContent!=''"> and article_reply.content like concat('%',#{replyContent},'%')</if> <!--评论内容-->
    <if test="sDate != null">
      and article_reply.create_time &gt;= #{sDate}
    </if>
    <if test="eDate != null">
      and article_reply.create_time &lt;= #{eDate}
    </if>
    <if test="accountIds != null and accountIds!=''">
      and account_id in
      <foreach collection="accountIds" index="index" item="accountId" open="(" separator="," close=")">
        #{accountId}
      </foreach>
    </if>
  </select>
  
   <select id="get" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from article_reply
		WHERE id = #{arg0}
	</select>
	
   <select id="getByParentId" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from article_reply
		WHERE parent_id = #{parentId}
	</select>
	
	  <select id="getByPostId" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from article_reply
		WHERE post_id = #{postId}
	</select>
	
	
	<select id="queryByIds" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from article_reply
		WHERE id in
		<foreach item="id" collection="ids" open="(" separator="," close=")">
		#{id}</foreach>
	</select>
  
  
  <insert id="insert" parameterType="com.calf.module.community.entity.ArticleReply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    insert into article_reply (id, content, account_id, 
      create_man, create_time, modify_man,
      modify_time, state,post_id,parent_id)
    values (#{id}, #{content}, #{accountId}, 
      #{createMan}, #{createTime}, #{modifyMan}, 
      #{modifyTime}, #{state},#{postId},#{parentId})
  </insert>
  <insert id="insertSelective" parameterType="com.calf.module.community.entity.ArticleReply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    insert into article_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="createMan != null" >
        create_man,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyMan != null" >
        modify_man,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyMan != null" >
        #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.calf.module.community.entity.ArticleReply" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    select count(*) from article_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    update article_reply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.createMan != null" >
        create_man = #{record.createMan,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyMan != null" >
        modify_man = #{record.modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="update" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 20:19:22 CST 2017.
    -->
    update article_reply
      set id = #{id,jdbcType=VARCHAR},
      <if test="content != null" >
      	content = #{content,jdbcType=VARCHAR},
      </if>      
      account_id = #{accountId,jdbcType=VARCHAR},
      create_man = #{createMan,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_man = #{modifyMan,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
      WHERE 1 = 1
      <if test="id != null" >
        and id = #{id}
      </if>
      <if test="postId != null" >
      	and post_id = #{postId}
      </if>
      
  </update>
  
  <delete id="batchDel" parameterType="map">
		delete from article_comment where
		article_comment_id in
		<foreach item="articleCommentId" collection="articleCommentIds" open="(" separator="," close=")">
		#{articleCommentId}</foreach>
	</delete>
  <select id="queryByNickName" resultType="map" parameterType="map">
    SELECT account_id from account
    WHERE 1 = 1
    <if test="nickname != null and nickname != ''">
      AND nickname = #{nickname}
    </if>
    <if test="phoneNum != null and phoneNum != ''">
      AND phone_num = #{phoneNum}
    </if>
  </select>
</mapper>