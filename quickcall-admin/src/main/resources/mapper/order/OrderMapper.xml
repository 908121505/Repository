<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Order" >
  <resultMap id="BaseResultMap" type="com.calf.module.order.entity.Order" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="trade_id" property="tradeId" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="order_describe" property="orderDescribe" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="order_amounts" property="orderAmounts" jdbcType="DECIMAL" />
    <result column="payment_type" property="paymentType" jdbcType="TINYINT" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="consign_time" property="consignTime" jdbcType="TIMESTAMP" />
    <result column="buyer_is_evaluate" property="buyerIsEvaluate" jdbcType="TINYINT" />
    <result column="buyer_message" property="buyerMessage" jdbcType="VARCHAR" />
    <result column="buyer_evaluate" property="buyerEvaluate" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="compulsion_reason" property="compulsionReason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, trade_id, product_id, buyer_id, seller_id, order_describe, order_num, order_amounts, 
    payment_type, confirm_time, start_time, end_time, order_time, finish_time, order_status, 
    refund_reason, payment_time, consign_time, buyer_is_evaluate, buyer_message, buyer_evaluate, 
    create_time, modify_time, create_man, modify_man, remark, compulsion_reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.calf.module.order.entity.Order" >
    insert into orders (order_id, trade_id, product_id, 
      buyer_id, seller_id, order_describe, 
      order_num, order_amounts, payment_type, 
      confirm_time, start_time, end_time, 
      order_time, finish_time, order_status, 
      refund_reason, payment_time, consign_time, 
      buyer_is_evaluate, buyer_message, buyer_evaluate, 
      create_time, modify_time, create_man, 
      modify_man, remark)
    values (#{orderId,jdbcType=BIGINT}, #{tradeId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{buyerId,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT}, #{orderDescribe,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{orderAmounts,jdbcType=DECIMAL}, #{paymentType,jdbcType=TINYINT}, 
      #{confirmTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=TINYINT}, 
      #{refundReason,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, #{consignTime,jdbcType=TIMESTAMP}, 
      #{buyerIsEvaluate,jdbcType=TINYINT}, #{buyerMessage,jdbcType=VARCHAR}, #{buyerEvaluate,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createMan,jdbcType=VARCHAR}, 
      #{modifyMan,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.calf.module.order.entity.Order" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="orderDescribe != null" >
        order_describe,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="orderAmounts != null" >
        order_amounts,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="confirmTime != null" >
        confirm_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="consignTime != null" >
        consign_time,
      </if>
      <if test="buyerIsEvaluate != null" >
        buyer_is_evaluate,
      </if>
      <if test="buyerMessage != null" >
        buyer_message,
      </if>
      <if test="buyerEvaluate != null" >
        buyer_evaluate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createMan != null" >
        create_man,
      </if>
      <if test="modifyMan != null" >
        modify_man,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="tradeId != null" >
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="orderDescribe != null" >
        #{orderDescribe,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmounts != null" >
        #{orderAmounts,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="confirmTime != null" >
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consignTime != null" >
        #{consignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerIsEvaluate != null" >
        #{buyerIsEvaluate,jdbcType=TINYINT},
      </if>
      <if test="buyerMessage != null" >
        #{buyerMessage,jdbcType=VARCHAR},
      </if>
      <if test="buyerEvaluate != null" >
        #{buyerEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.calf.module.order.entity.Order" >
    update orders
    <set >
      <if test="tradeId != null" >
        trade_id = #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="orderDescribe != null" >
        order_describe = #{orderDescribe,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmounts != null" >
        order_amounts = #{orderAmounts,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="confirmTime != null" >
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consignTime != null" >
        consign_time = #{consignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerIsEvaluate != null" >
        buyer_is_evaluate = #{buyerIsEvaluate,jdbcType=TINYINT},
      </if>
      <if test="buyerMessage != null" >
        buyer_message = #{buyerMessage,jdbcType=VARCHAR},
      </if>
      <if test="buyerEvaluate != null" >
        buyer_evaluate = #{buyerEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        create_man = #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        modify_man = #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.calf.module.order.entity.Order" >
    update orders
    set trade_id = #{tradeId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=BIGINT},
      seller_id = #{sellerId,jdbcType=BIGINT},
      order_describe = #{orderDescribe,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      order_amounts = #{orderAmounts,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=TINYINT},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=TINYINT},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      consign_time = #{consignTime,jdbcType=TIMESTAMP},
      buyer_is_evaluate = #{buyerIsEvaluate,jdbcType=TINYINT},
      buyer_message = #{buyerMessage,jdbcType=VARCHAR},
      buyer_evaluate = #{buyerEvaluate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_man = #{createMan,jdbcType=VARCHAR},
      modify_man = #{modifyMan,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <!-- 查询内容 -->
  <sql id="SELECT_SQL_BODY">
			orders od
		LEFT JOIN customer cust ON od.customer_id = cust.customer_id
		LEFT JOIN customer sust ON od.service_id = sust.customer_id
		LEFT JOIN customer_skill  p  ON od.customer_skill_id = p.customer_skill_id
  </sql>
  <!-- 查询内容 -->
  <sql id="SELECT_SQL_CONTENT">
		order_id AS orderId,
		sust.nick_name AS servNickName,
		cust.nick_name AS custNickName,
		p.skill_name AS orderType,
		p.skill_price AS price,
		order_num AS orderNum,
		order_amounts AS orderAmounts,
		end_time AS confirmTime,
		start_time AS startTime,
		end_time AS endTime,
		order_time AS orderTime,
		end_time AS finishTime,
		order_status AS orderStatus
  </sql>
  <!-- 查询内容 -->
  <sql id="SELECT_SQL_CONDITION">
	<if test="orderId != null" >
        AND  order_id =   #{orderId}
    </if>
	<if test="servNickName != null" >
        AND  sust.nick_name LIKE  concat('%',#{servNickName},'%') 
    </if>
	<if test="custNickName != null" >
        AND  cust.nick_name LIKE  concat('%',#{custNickName},'%') 
    </if>
	<if test="orderType != null" >
        AND  p.name LIKE  concat('%',#{orderType},'%') 
    </if>
  </sql>

  <select id="queryOrderDetail" resultType="com.calf.module.order.vo.OrderVO" parameterType="map" >
    select
        order_id AS orderId,
		revice.customer_id AS receivedOrderId,
        revice.nick_name AS receiveOrderUserNickName,
		place.customer_id AS placeOrderId,
		place.nick_name AS placeOrderUserNickName,
		skill.skill_name AS serviceType,
		od.start_time AS startTime,
		od.end_time AS endTime,
		od.service_price AS unitPrice,
		ext.skill_ext_discont AS discountType,
		od.order_amounts AS orderAmount,
		od.order_status AS orderStatus,
		od.create_time AS orderCreateTime,
		od.remark_reason AS remarkReason,
		od.order_num AS orderNum
    from
        orders od
		LEFT JOIN customer place ON od.customer_id = place.customer_id
		LEFT JOIN customer revice ON od.service_id = revice.customer_id
		LEFT JOIN customer_skill  skill  ON od.customer_skill_id = skill.customer_skill_id
		LEFT JOIN skill_item_ext ext ON skill.skill_item_ext_id = ext.id
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
 
   <select id="queryPageList" resultType="com.calf.module.order.vo.OrderVO" parameterType="map" >
    select
     order_id AS orderId,
     revice.app_id AS receivedOrderId,
     revice.phone AS servicePhone,
     revice.nick_name AS receiveOrderUserNickName,
     place.app_id AS placeOrderId,
     place.phone AS customerPhone,
     place.nick_name AS placeOrderUserNickName,
     skill.skill_name AS serviceType,
     od.start_time AS startTime,
     od.end_time AS endTime,
     od.service_price AS unitPrice,
     ext.skill_ext_discont AS discountType,
     od.order_amounts AS orderAmount,
     od.order_status AS orderStatus,
     od.create_time AS orderCreateTime
    from
        orders od
		LEFT JOIN customer place ON od.customer_id = place.customer_id
		LEFT JOIN customer revice ON od.service_id = revice.customer_id
		LEFT JOIN customer_skill  skill  ON od.customer_skill_id = skill.customer_skill_id
        LEFT JOIN skill_item_ext ext ON skill.skill_item_ext_id = ext.id
    where 1= 1
     <if test="orderId != null" >
       AND  od.order_id =   #{orderId}
     </if>
     <if test="placeOrderId != null" >
       AND  place.app_id = #{placeOrderId}
     </if>
     <if test="placeOrderUserNickName != null" >
       AND  place.nick_name LIKE  concat('%',#{placeOrderUserNickName},'%')
     </if>
     <if test="customerPhone != null" >
       AND  place.phone = #{customerPhone}
     </if>
     <if test="placeOrderUserNickName != null" >
       AND  place.nick_name LIKE  concat('%',#{placeOrderUserNickName},'%')
     </if>
     <if test="receivedOrderId != null" >
       AND  revice.app_id = #{receivedOrderId}
     </if>
     <if test="receiveOrderUserNickName != null" >
       AND  revice.nick_name LIKE  concat('%',#{receiveOrderUserNickName},'%')
     </if>
     <if test="servicePhone != null" >
       AND  revice.phone   = #{servicePhone}
     </if>
     <if test="startTime != null" >
       AND  od.create_time &gt;= #{startTime}
     </if>
     <if test="endTime != null" >
       AND  od.create_time &lt;= #{endTime}
     </if>
     <if test="serviceType != null" >
       AND  skill.skill_item_id = #{serviceType}
     </if>
     <!-- <if test="orderStatus != null" >
       AND order_status in (#{orderStatus})
     </if> -->
     <if test="orderStatus != null and orderStatus.size()>0" >
       AND
       <foreach collection="orderStatus" item="item" open="(" separator="or" close=")">
         order_status = #{item}
       </foreach> 
     </if>
     <if test="discountTypeMin != null" >
       AND ext.skill_ext_discont &gt;= #{discountTypeMin}
     </if>
     <if test="discountTypeMax != null" >
       AND ext.skill_ext_discont &lt; #{discountTypeMax}
     </if>
      order by od.create_time desc,od.order_id desc LIMIT ${iDisplayStart},${iDisplayLength}
  </select>

  <select id="selectCount" resultType="java.lang.Integer" parameterType="map" >
    select
    count(1)
    from
    orders od
    LEFT JOIN customer place ON od.customer_id = place.customer_id
    LEFT JOIN customer revice ON od.service_id = revice.customer_id
    LEFT JOIN customer_skill  skill  ON od.customer_skill_id = skill.customer_skill_id
    LEFT JOIN skill_item_ext ext ON skill.skill_item_ext_id = ext.id
    where 1= 1
    <if test="orderId != null" >
      AND  order_id =   #{orderId}
    </if>
    <if test="placeOrderId != null" >
      AND  place.app_id = #{placeOrderId}
    </if>
    <if test="placeOrderUserNickName != null" >
      AND  place.nick_name LIKE  concat('%',#{placeOrderUserNickName},'%')
    </if>
    <if test="customerPhone != null" >
       AND  place.phone = #{customerPhone}
     </if>
    <if test="receivedOrderId != null" >
      AND  revice.app_id = #{receivedOrderId}
    </if>
    <if test="receiveOrderUserNickName != null" >
      AND  revice.nick_name LIKE  concat('%',#{receiveOrderUserNickName},'%')
    </if>
     <if test="servicePhone != null" >
       AND  revice.phone   = #{servicePhone}
     </if>
    <if test="startTime != null" >
      AND  od.create_time &gt;= #{startTime}
    </if>
    <if test="endTime != null" >
      AND  od.create_time &lt;= #{endTime}
    </if>
    <if test="serviceType != null" >
      AND  skill.skill_item_id = #{serviceType}
    </if>
    <!-- <if test="orderStatus != null" >
      AND order_status in (#{orderStatus})
    </if> -->
    <if test="orderStatus != null and orderStatus.size()>0" >
       AND
       <foreach collection="orderStatus" item="item" open="(" separator="or" close=")">
         order_status = #{item}
       </foreach> 
     </if>
    <if test="discountTypeMin != null" >
      AND ext.skill_ext_discont &gt;= #{discountTypeMin}
    </if>
    <if test="discountTypeMax != null" >
      AND ext.skill_ext_discont &lt; #{discountTypeMax}
    </if>
  </select>


  <select id="selectPageList" resultType="com.calf.module.order.vo.OrderVO" parameterType="map" >
    select
    <include refid="SELECT_SQL_CONTENT" />
    from
    <include refid="SELECT_SQL_BODY" />
    where 1= 1
    <include refid="SELECT_SQL_CONDITION" />
    LIMIT ${iDisplayStart},${iDisplayLength}
  </select>


   <select id="slectCount" resultType="java.lang.Integer" parameterType="map" >
    select 
    count(1)
    from 
    <include refid="SELECT_SQL_BODY" />
    where 1= 1
    <include refid="SELECT_SQL_CONDITION" />
  </select>
  
  
  
  <!-- 查询未支付即将支付过期的订单ID列表 -->
	<select id="queryPayOverTimeOrderIdList" resultType="java.lang.Long" parameterType="map">
		SELECT  order_id AS  orderId  FROM  orders  WHERE  order_status  = #{orderStatus}  AND   order_time <![CDATA[  < ]]>  #{endTime}
	</select>
	
	
	<update id="batchUpdateOrderStatus"   >
		UPDATE 
			orders
		SET 
			order_status = #{orderStatus},
			modify_man = 'sys_job',
			modify_time = NOW()
		WHERE
			order_id IN
		<foreach collection="list" item="id"  open="("  close=")"  separator="," >
		        #{id}
		</foreach>
	</update>
	
	<!-- 查询已支付且大V未接受订单ID列表 -->
	<select id="queryReceiveOverTimeOrderIdList" resultType="com.calf.module.order.entity.Order" parameterType="map">
		SELECT  order_id  as  orderId ,buyer_id  AS  buyerId,seller_id  AS  sellerId ,order_amounts AS  orderAmounts   FROM  orders  WHERE  order_status  = #{orderStatus}  AND   payment_time <![CDATA[  < ]]>  #{endTime}
	</select>
	
	
	   <!-- 入账 -->
   <update id="inAccount" parameterType="Map">
    
    update account set 
    <if test="type==1">
    recharge_amounts=recharge_amounts+#{amount}
    </if>
    <if test="type==2">
    remainder_amounts=remainder_amounts+#{amount}
    </if>
    where customer_id = #{userId}
   
   </update>
  
   <!-- 出账 -->
   <update id="outAccount" parameterType="Map">
    update account set
    <if test="type==1">
    recharge_amounts=recharge_amounts-#{amount}
    </if>
    <if test="type==2">
    remainder_amounts=remainder_amounts-#{amount}
    </if>
    where customer_id = #{userId}
   </update>

  <update id="updateOrder" parameterType="Map" >
    update orders
    <set >
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="compulsionReason != null" >
        compulsion_reason = #{compulsionReason,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>

  <!-- 查询订单信息 - 用于计算声优的声量 -->
  <select id="selectUsedToCalculateBigvScore" parameterType="map"
          resultType="com.honglu.quickcall.account.facade.entity.Order">
    select
      order_id as orderId,
      service_id as serviceId,
      customer_id as customerId,
      customer_skill_id as customerSkillId,
      order_status as orderStatus,
      order_amounts as orderAmounts,
      skill_item_id as skillItemId,
      service_price as servicePrice,
      order_num as orderNum,
      customer_is_evaluate as customerIsEvaluate,
      evaluate_start as evaluateStart,
      value_score as valueScore,
      coupon_flag as couponFlag
    FROM orders WHERE order_id = #{arg0}
  </select>

  <!-- 更新默认评价得到到订单表 -->
  <update id="updateValueScoreToOrder" parameterType="map">
      UPDATE orders SET value_score = #{valueScore} WHERE order_id = #{orderId}
  </update>


</mapper>