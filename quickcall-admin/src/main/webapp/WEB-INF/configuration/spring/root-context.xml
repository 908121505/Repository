<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
	">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:dbcp.properties</value>
                <value>classpath:memcache.properties</value>
                <value>classpath:rabbitMq.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${dbcp.driverClassName}"/>
        <property name="url" value="${dbcp.url.r}"/>
        <property name="username" value="${dbcp.username.r}"/>
        <property name="password" value="${dbcp.password.r}"/>
        <property name="initialSize" value="${dbcp.initialSize}"/>
        <property name="maxActive" value="${dbcp.maxTotal}"/>
        <property name="validationQuery" value="${dbcp.validationQuery}"/>
        <property name="testOnBorrow" value="${dbcp.testOnBorrow}"/>
        <property name="testWhileIdle" value="${dbcp.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}"/>
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation"
                  value="WEB-INF/configuration/ibatis/Configuration.xml"/>
        <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>

    <!-- shiro -->
    <bean id="calfShiro" class="com.calf.cn.shiro.CalfShiro"/>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="calfShiro"/>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
          lazy-init="true">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.htm"/>
        <property name="successUrl" value="/index.htm"/>
        <property name="unauthorizedUrl" value="/WEB-INF/views/error/unauthorized.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                /resources/** = anon
                /** = authc
            </value>
        </property>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <context:component-scan base-package="com.calf"/>

    <task:annotation-driven/>
    <context:annotation-config/>

    <import resource="classpath:applicationContext-rabbitmq-pull.xml" />
    <import resource="classpath:applicationContext-rabbitmq-push.xml" />

</beans>

