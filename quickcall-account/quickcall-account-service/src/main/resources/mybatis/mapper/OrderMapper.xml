<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honglu.quickcall.account.service.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.account.facade.entity.Order" >
   <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="customer_skill_id" property="customerSkillId" jdbcType="BIGINT" />
    <result column="skill_item_id" property="skillItemId" jdbcType="BIGINT" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="service_id" property="serviceId" jdbcType="BIGINT" />
    <result column="trade_id" property="tradeId" jdbcType="BIGINT" />
    <result column="payment_type" property="paymentType" jdbcType="TINYINT" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="service_unit" property="serviceUnit" jdbcType="VARCHAR" />
    <result column="service_price" property="servicePrice" jdbcType="DECIMAL" />
    <result column="order_amounts" property="orderAmounts" jdbcType="DECIMAL" />
    <result column="coupon_price" property="couponPrice" jdbcType="DECIMAL" />
    <result column="discount_rate" property="discountRate" jdbcType="DECIMAL" />
    <result column="appoint_time" property="appointTime" jdbcType="TIMESTAMP" />
    <result column="cust_cancel_time" property="custCancelTime" jdbcType="TIMESTAMP" />
    <result column="system_cancel_time" property="systemCancelTime" jdbcType="TIMESTAMP" />
    <result column="receive_order_time" property="receiveOrderTime" jdbcType="TIMESTAMP" />
    <result column="start_service_time" property="startServiceTime" jdbcType="TIMESTAMP" />
    <result column="appay_end_time" property="appayEndTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="expect_end_time" property="expectEndTime" jdbcType="TIMESTAMP" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="skill_type" property="skillType" jdbcType="TINYINT" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="coupon_flag" property="couponFlag" jdbcType="TINYINT" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="customer_is_evaluate" property="customerIsEvaluate" jdbcType="TINYINT" />
    <result column="customer_message" property="customerMessage" jdbcType="VARCHAR" />
    <result column="evaluate_start" property="evaluateStart" jdbcType="INTEGER" />
    <result column="customer_evaluate" property="customerEvaluate" jdbcType="VARCHAR" />
    <result column="order_describe" property="orderDescribe" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="select_reason" property="selectReason" jdbcType="VARCHAR" />
    <result column="remark_reason" property="remarkReason" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
  
  <sql id="Base_Column_List" >
    order_id, order_no, customer_skill_id, skill_item_id,customer_id, service_id, trade_id, payment_type, 
    order_num, service_unit, service_price, order_amounts, coupon_price,discount_rate, appoint_time,cust_cancel_time, 
    system_cancel_time, receive_order_time, start_service_time, appay_end_time, start_time, 
    end_time, expect_end_time,order_time,skill_type, order_status, coupon_flag,payment_time, customer_is_evaluate, customer_message, 
    evaluate_start, customer_evaluate, order_describe, create_time, modify_time, create_man, 
    modify_man, remark,select_reason,remark_reason
  </sql>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>


  <insert id="insert" parameterType="com.honglu.quickcall.account.facade.entity.Order" >
    insert into orders (order_id, order_no, customer_skill_id, skill_item_id,
      customer_id, service_id, trade_id, 
      payment_type, order_num, service_unit, 
      service_price, order_amounts,coupon_price, discount_rate, appoint_time,
      cust_cancel_time, system_cancel_time, receive_order_time, 
      start_service_time, appay_end_time, start_time, 
      end_time, expect_end_time,order_time,skill_type, order_status,coupon_flag, 
      payment_time, customer_is_evaluate, customer_message, 
      evaluate_start, customer_evaluate, order_describe, 
      create_time, modify_time, create_man, 
      modify_man, remark,select_reason,remark_reason)
    values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=BIGINT}, #{customerSkillId,jdbcType=BIGINT},  #{skillItemId,jdbcType=BIGINT}, 
      #{customerId,jdbcType=BIGINT}, #{serviceId,jdbcType=BIGINT}, #{tradeId,jdbcType=BIGINT}, 
      #{paymentType,jdbcType=TINYINT}, #{orderNum,jdbcType=INTEGER}, #{serviceUnit,jdbcType=VARCHAR}, 
      #{servicePrice,jdbcType=DECIMAL}, #{orderAmounts,jdbcType=DECIMAL}, #{couponPrice,jdbcType=DECIMAL}, #{discountRate,jdbcType=DECIMAL}, 
      #{appointTime,jdbcType=TIMESTAMP}, #{custCancelTime,jdbcType=TIMESTAMP}, #{systemCancelTime,jdbcType=TIMESTAMP}, #{receiveOrderTime,jdbcType=TIMESTAMP}, 
      #{startServiceTime,jdbcType=TIMESTAMP}, #{appayEndTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP},#{expectEndTime,jdbcType=TIMESTAMP}, #{orderTime,jdbcType=TIMESTAMP}, #{skillType,jdbcType=TINYINT}, #{orderStatus,jdbcType=TINYINT}, #{couponFlag,jdbcType=TINYINT}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{customerIsEvaluate,jdbcType=TINYINT}, #{customerMessage,jdbcType=VARCHAR}, 
      #{evaluateStart,jdbcType=INTEGER}, #{customerEvaluate,jdbcType=VARCHAR}, #{orderDescribe,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createMan,jdbcType=VARCHAR}, 
      #{modifyMan,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{selectReason,jdbcType=VARCHAR}, #{remarkReason,jdbcType=VARCHAR})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.honglu.quickcall.account.facade.entity.Order" >
  insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="customerSkillId != null" >
        customer_skill_id,
      </if>
      <if test="skillItemId != null" >
        skill_item_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="serviceUnit != null" >
        service_unit,
      </if>
      <if test="servicePrice != null" >
        service_price,
      </if>
      <if test="orderAmounts != null" >
        order_amounts,
      </if>
      <if test="couponPrice != null" >
        coupon_price,
      </if>
      <if test="discountRate != null" >
        discount_rate,
      </if>
      <if test="custCancelTime != null" >
        cust_cancel_time,
      </if>
      <if test="appointTime != null" >
        appoint_time,
      </if>
      <if test="systemCancelTime != null" >
        system_cancel_time,
      </if>
      <if test="receiveOrderTime != null" >
        receive_order_time,
      </if>
      <if test="startServiceTime != null" >
        start_service_time,
      </if>
      <if test="appayEndTime != null" >
        appay_end_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="skillType != null" >
        skill_type,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="couponFlag != null" >
        coupon_flag,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="customerIsEvaluate != null" >
        customer_is_evaluate,
      </if>
      <if test="customerMessage != null" >
        customer_message,
      </if>
      <if test="evaluateStart != null" >
        evaluate_start,
      </if>
      <if test="customerEvaluate != null" >
        customer_evaluate,
      </if>
      <if test="orderDescribe != null" >
        order_describe,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createMan != null" >
        create_man,
      </if>
      <if test="modifyMan != null" >
        modify_man,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="customerSkillId != null" >
        #{customerSkillId,jdbcType=BIGINT},
      </if>
      <if test="skillItemId != null" >
        #{skillItemId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="tradeId != null" >
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="serviceUnit != null" >
        #{serviceUnit,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null" >
        #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderAmounts != null" >
        #{orderAmounts,jdbcType=DECIMAL},
      </if>
      <if test="coupon_price != null" >
        #{couponPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountRate != null" >
        #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="appointTime != null" >
        #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custCancelTime != null" >
        #{custCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemCancelTime != null" >
        #{systemCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveOrderTime != null" >
        #{receiveOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startServiceTime != null" >
        #{startServiceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appayEndTime != null" >
        #{appayEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skillType != null" >
        #{skillType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="couponFlag != null" >
        #{couponFlag,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerIsEvaluate != null" >
        #{customerIsEvaluate,jdbcType=TINYINT},
      </if>
      <if test="customerMessage != null" >
        #{customerMessage,jdbcType=VARCHAR},
      </if>
      <if test="evaluateStart != null" >
        #{evaluateStart,jdbcType=INTEGER},
      </if>
      <if test="customerEvaluate != null" >
        #{customerEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="orderDescribe != null" >
        #{orderDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  



  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.account.facade.entity.Order" >
    update orders
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="customerSkillId != null" >
        customer_skill_id = #{customerSkillId,jdbcType=BIGINT},
      </if>
      <if test="skillItemId != null" >
        skill_item_id = #{skillItemId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="tradeId != null" >
        trade_id = #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="serviceUnit != null" >
        service_unit = #{serviceUnit,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null" >
        service_price = #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderAmounts != null" >
        order_amounts = #{orderAmounts,jdbcType=DECIMAL},
      </if>
      <if test="couponPrice != null" >
        coupon_price = #{couponPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountRate != null" >
        discount_rate = #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="appointTime != null" >
        appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custCancelTime != null" >
        cust_cancel_time = #{custCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemCancelTime != null" >
        system_cancel_time = #{systemCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveOrderTime != null" >
        receive_order_time = #{receiveOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startServiceTime != null" >
        start_service_time = #{startServiceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appayEndTime != null" >
        appay_end_time = #{appayEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectEndTime != null" >
        expect_end_time = #{expectEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skillType != null" >
        skill_type = #{skillType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="couponFlag != null" >
        coupon_flag = #{couponFlag,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerIsEvaluate != null" >
        customer_is_evaluate = #{customerIsEvaluate,jdbcType=TINYINT},
      </if>
      <if test="customerMessage != null" >
        customer_message = #{customerMessage,jdbcType=VARCHAR},
      </if>
      <if test="evaluateStart != null" >
        evaluate_start = #{evaluateStart,jdbcType=INTEGER},
      </if>
      <if test="customerEvaluate != null" >
        customer_evaluate = #{customerEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="orderDescribe != null" >
        order_describe = #{orderDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        create_man = #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        modify_man = #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  
  
  
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.account.facade.entity.Order" >
   update orders
    set order_no = #{orderNo,jdbcType=BIGINT},
      customer_skill_id = #{customerSkillId,jdbcType=BIGINT},
      skill_item_id = #{skillItemId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      service_id = #{serviceId,jdbcType=BIGINT},
      trade_id = #{tradeId,jdbcType=BIGINT},
      payment_type = #{paymentType,jdbcType=TINYINT},
      order_num = #{orderNum,jdbcType=INTEGER},
      service_unit = #{serviceUnit,jdbcType=VARCHAR},
      service_price = #{servicePrice,jdbcType=DECIMAL},
      order_amounts = #{orderAmounts,jdbcType=DECIMAL},
      coupon_price = #{couponPrice,jdbcType=DECIMAL},
      discount_rate = #{discountRate,jdbcType=DECIMAL},
      appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      cust_cancel_time = #{custCancelTime,jdbcType=TIMESTAMP},
      system_cancel_time = #{systemCancelTime,jdbcType=TIMESTAMP},
      receive_order_time = #{receiveOrderTime,jdbcType=TIMESTAMP},
      start_service_time = #{startServiceTime,jdbcType=TIMESTAMP},
      appay_end_time = #{appayEndTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      expect_end_time = #{expectEndTime,jdbcType=TIMESTAMP},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      skill_type = #{skillType,jdbcType=TINYINT},
      order_status = #{orderStatus,jdbcType=TINYINT},
      coupon_flag = #{couponFlag,jdbcType=TINYINT},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      customer_is_evaluate = #{customerIsEvaluate,jdbcType=TINYINT},
      customer_message = #{customerMessage,jdbcType=VARCHAR},
      evaluate_start = #{evaluateStart,jdbcType=INTEGER},
      customer_evaluate = #{customerEvaluate,jdbcType=VARCHAR},
      order_describe = #{orderDescribe,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_man = #{createMan,jdbcType=VARCHAR},
      modify_man = #{modifyMan,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  
  
  
  
   <!-- 订单消息 -->
  <select id="queryMsgOrderList" resultType="com.honglu.quickcall.account.facade.vo.OrderMsgOrderListVO"  >
	SELECT
			unionTb.orderId,
			unionTb.modifyTime,
			unionTb.customerFlag ,
			unionTb.nickName,
			unionTb.customerId,
			unionTb.serviceId,
			unionTb.headPortraitUrl,
			unionTb.vStatus,
			unionTb.servicePrice,
			unionTb.serviceUnit,
			unionTb.orderNum,
			unionTb.orderAmount,
			unionTb.orderStatus,
			unionTb.skillItemName,
			unionTb.icon,
			unionTb.skillType,
			unionTb.orderTime
			
FROM
	(
		SELECT
			od.order_id AS orderId,
			od.modify_time AS modifyTime,
			'V' AS customerFlag,
			ct.nick_name AS nickName,
			od.customer_id AS customerId,
			od.service_id AS serviceId,
			ct.head_portrait_url AS headPortraitUrl,
			ct.v_status  AS  vStatus,
			od.service_price AS servicePrice,
			od.service_unit AS serviceUnit,
			od.order_num AS orderNum,
			od.order_amounts AS orderAmount,
			od.order_status AS orderStatus,
			st.skill_item_name AS skillItemName,
			st.unlock_icon AS icon,
			od.skill_type  AS skillType,
			od.order_time AS  orderTime
			
		FROM
			orders od
		LEFT JOIN customer_skill cs ON od.customer_skill_id = cs.customer_skill_id
		LEFT JOIN skill_item st ON cs.skill_item_id = st.id
		INNER JOIN customer ct ON od.customer_id = ct.customer_id
		WHERE
			od.service_id = #{customerId}
		UNION
			SELECT
				od.order_id AS orderId,
				od.modify_time AS modifyTime,
				'C' AS customerFlag,
				ct.nick_name AS nickName,
				od.customer_id AS customerId,
				od.service_id AS serviceId,
				ct.head_portrait_url AS headPortraitUrl,
				ct.v_status  AS  vStatus,
				od.service_price AS servicePrice,
				od.service_unit AS serviceUnit,
				od.order_num AS orderNum,
				od.order_amounts AS orderAmount,
				od.order_status AS orderStatus,
				st.skill_item_name AS skillItemName,
				st.unlock_icon AS icon,
				od.skill_type  AS skillType,
				od.order_time AS  orderTime
			FROM
				orders od
			LEFT JOIN customer_skill cs ON od.customer_skill_id = cs.customer_skill_id
			LEFT JOIN skill_item st ON cs.skill_item_id = st.id
			INNER JOIN customer ct ON od.service_id = ct.customer_id
			WHERE
				od.customer_id = #{customerId}
	) unionTb
ORDER BY
	unionTb.orderId DESC
	limit  #{pageStart},#{pageEnd}
  </select>
   <!-- 查询发出的订单 -->
  <select id="querySendOrderList" resultType="com.honglu.quickcall.account.facade.vo.OrderSendOrderListVO"  >
	SELECT
		  od.order_id  AS orderId,
		  ct.nick_name  AS nickName,
		  od.service_id AS serviceId ,
		  ct.head_portrait_url  AS  headPortraitUrl,
		  od.service_price  AS  servicePrice ,
		  od.service_unit  AS  serviceUnit,
		  od.order_num AS  orderNum,
		  od.order_amounts AS  orderAmount,
		  od.order_status  AS orderStatus,
		  cs.skill_name  AS  skillItemName,
		  st.unlock_icon  AS  icon,
	      od.order_time  AS  orderTime,
	      od.receive_order_time  AS receiveOrderTime,
		  od.start_service_time AS startServiceTime,
		  od.expect_end_time AS expectEndTime,
	      od.customer_skill_id AS customerSkillId,
		  cs.switch_status AS switchStatus,
		  od.appoint_time  AS  appointTime,
		  od.skill_type  AS  skillType
	FROM
		orders od LEFT JOIN   customer_skill  cs  ON  od.customer_skill_id  = cs.customer_skill_id
	        LEFT JOIN   skill_item   st ON  cs.skill_item_id  =  st.id
	    INNER JOIN  customer  ct  ON  od.service_id  =  ct.customer_id 
	WHERE  od.customer_id  = #{customerId}
	
	 <if test="statusList != null" >
        AND  od.order_status  IN 
        <foreach collection="statusList"  item="status"  open="("  close=")"  separator=",">
         	#{status}
        </foreach>
      </if>
      order by  order_time  desc 
  </select>
  
  
  <!-- 查询收到的订单 -->
  <select id="queryReceiveOrderList" resultType="com.honglu.quickcall.account.facade.vo.OrderReceiveOrderListVO"  >
	SELECT
		od.order_id AS orderId,
		ct.nick_name AS nickName,
		od.customer_id AS customerId,
		ct.head_portrait_url AS headPortraitUrl,
		od.service_price AS servicePrice,
		od.service_unit AS serviceUnit,
		od.order_num AS orderNum,
		od.order_amounts AS orderAmount,
		od.order_status AS orderStatus,
		cs.skill_name AS skillItemName,
		st.unlock_icon AS icon,
		od.order_time AS orderTime,
		od.receive_order_time AS receiveOrderTime,
		od.start_service_time AS startServiceTime,
		od.expect_end_time AS expectEndTime,
		od.customer_skill_id AS customerSkillId,
		cs.switch_status AS switchStatus,
		od.coupon_flag  AS  couponFlag,
		od.appoint_time  AS  appointTime,
		od.skill_type  AS  skillType
	FROM
		orders od
	LEFT JOIN customer_skill cs ON od.customer_skill_id = cs.customer_skill_id
	LEFT JOIN skill_item st ON cs.skill_item_id = st.id
	INNER JOIN customer ct ON od.customer_id = ct.customer_id
	WHERE  od.service_id  = #{customerId}  
		 <if test="statusList != null" >
        AND  od.order_status  IN 
        <foreach collection="statusList"  item="status"  open="("  close=")"  separator=",">
         	#{status}
        </foreach>
      </if>
	order by  order_time  desc 
	
	
  </select>
  
  
  <!-- 查询大V订单详情 -->
  <select id="queryDvOrderDetail" resultType="com.honglu.quickcall.account.facade.vo.OrderDetailVO"  >
		SELECT
			ct.customer_id AS customerId,
			ct.head_portrait_url AS headPortraitUrl,
			ct.app_id AS appId,
			ct.nick_name AS nickName,
			ct.sex AS sex,
			ct.birthday AS birthday,
			ct.identity_status AS identityStatus,
			ct.customer_level  AS  customerLevel,
			ct.v_status  AS  vStatus,
			st.skill_item_name AS skillName,
			od.service_price AS servicePrice,
			od.service_unit AS serviceUnit,
			od.order_num AS orderNum,
			od.order_amounts AS orderAmount,
			od.order_status AS orderStatus,
			od.remark AS remark,
			od.order_id AS orderId,
			od.order_time AS orderTime,
			od.start_service_time AS startServiceTime,
			od.expect_end_time AS expectEndTime,
			od.end_time AS endTime ,
  			cs.skill_item_id   AS  skillItemId,
	  		od.receive_order_time AS receiveOrderTime,
	  		od.remark as  remark,
	  		od.discount_rate  as discountRate,
	  		od.coupon_price  as  couponPrice,
	  		od.appoint_time  as  appointTime,
	  		od.skill_type  as  skillType
			
		FROM
			orders od
		INNER JOIN customer ct ON ct.customer_id = od.customer_id
		LEFT JOIN customer_skill cs ON od.customer_skill_id = cs.customer_skill_id
		LEFT JOIN  skill_item  st  ON  cs.skill_item_id  = st.id 

	WHERE
		od.order_id =  #{orderId}
  </select>
  <!-- 查询消费端订单详情 -->
  <select id="queryCustOrderDetail" resultType="com.honglu.quickcall.account.facade.vo.OrderDetailVO"  >
<!-- 订单发起方  看到的是主播的个人信息 -->
	SELECT
		ct.customer_id AS customerId,
		ct.head_portrait_url AS headPortraitUrl,
		ct.app_id AS appId,
		ct.nick_name AS nickName,
		ct.sex AS sex,
		ct.birthday AS birthday,
		ct.identity_status AS identityStatus,
		ct.customer_level  AS  customerLevel,
		ct.v_status  AS  vStatus,
		st.skill_item_name AS skillName,
		od.service_price AS servicePrice,
		od.service_unit AS serviceUnit,
		od.order_num AS orderNum,
		od.order_amounts AS orderAmount,
		od.order_status AS orderStatus,
		od.remark AS remark,
		od.order_id AS orderId,
		od.order_time AS orderTime,
		od.start_service_time AS startServiceTime,
		od.expect_end_time AS expectEndTime,
		od.end_time AS endTime ,
		od.receive_order_time AS receiveOrderTime,
		od.remark as  remark,
		od.discount_rate  as discountRate,
		od.coupon_price  as  couponPrice,
		od.appoint_time  as  appointTime,
		od.skill_type  as  skillType
	FROM
		orders od
	INNER JOIN customer ct ON ct.customer_id = od.service_id
	LEFT JOIN customer_skill cs ON od.customer_skill_id = cs.customer_skill_id
    LEFT JOIN  skill_item  st  ON  cs.skill_item_id  = st.id 
	WHERE
		od.order_id =  #{orderId}
  </select>
  
  
  
  <!-- 查询消费端订单详情 -->
  <select id="queryIngOrderCount" resultType="java.lang.Integer"  >
	SELECT
	  count(1) 
	FROM
		orders 
	WHERE  order_status in(#{orderStatus} ,#{orderStatusTwo})   and
		buyer_id = #{buyerId}  and  seller_id =  #{sellerId}  
  </select>


  <!-- 查询弹幕显示需要的订单消息 -->
  <select id="queryBarrageOrderInfo" resultType="com.honglu.quickcall.account.facade.vo.OrderDetailVO"  >
    SELECT
        cu.nick_name AS nickName,
        cu.head_portrait_url AS headPortraitUrl,
        cs.skill_name AS skillName,
        cs.skill_item_id AS skillItemId,
        cs.skill_price AS price,
        od.order_num AS orderNum,
        od.order_amounts AS orderAmount,
        od.order_time AS orderTime
    FROM
        orders od
    LEFT JOIN customer cu ON cu.customer_id = od.customer_id
    LEFT JOIN customer_skill cs ON cs.customer_skill_id = od.customer_skill_id
    WHERE
        od.order_id =  #{orderId}
  </select>


  <!-- 查询订单评价页面需要的数据 -->
  <select id="queryEvaluationData" resultType="com.honglu.quickcall.account.facade.vo.OrderDetailVO"  >
    SELECT
        cu.nick_name AS nickName,
        cu.head_portrait_url AS headPortraitUrl,
        cu.sex AS sex,
        cs.skill_name AS skillName,
        cs.skill_item_id AS skillItemId,
        od.service_id as serviceId,
        od.customer_id as customerId,
        od.customer_is_evaluate as customerIsEvaluate
    FROM
        orders od
    LEFT JOIN customer cu ON cu.customer_id = od.service_id
    LEFT JOIN customer_skill cs ON cs.customer_skill_id = od.customer_skill_id
    WHERE
        od.order_id =  #{orderId}
  </select>


  <!-- 保存评价信息 -->
  <update id="saveEvaluationInfo" parameterType="com.honglu.quickcall.account.facade.entity.Order">
    update orders set modify_time = NOW(), customer_is_evaluate = 1,
    evaluate_start = #{evaluateStart}, customer_evaluate = #{customerEvaluate}
    where order_id = #{orderId}
  </update>

  <!-- 保存评价标签 -->
  <insert id="saveEvaluationLabels" parameterType="list">
    insert into order_evaluation_label(evaluation_id,customer_id,skill_item_id,order_id,label_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.evaluationId},#{item.customerId},#{item.skillItemId},#{item.orderId},#{item.labelId})
    </foreach>
  </insert>

  <!-- 删除旧的评价标签 -->
  <delete id="deleteEvaluationLabels">
    delete from order_evaluation_label where order_id = #{orderId}
  </delete>



  <!-- 查询客户信息 -->
  <select id="getCustomerByCustomerId" resultType="com.honglu.quickcall.account.facade.vo.OrderDaVSkillVO"  >
		SELECT
			customer_id AS  serviceId,
		  nick_name  AS  nikeName,
		head_portrait_url  AS  headPortraitUrl
		FROM
			customer
		WHERE
			customer_id =  #{customerId}
  </select>
  <!-- 查询客户信息 -->
  <select id="selectGongIngOrderListByCustomerId" resultMap="BaseResultMap" >
		SELECT
			<include refid="Base_Column_List" />
		FROM
			orders
		WHERE
			service_id = #{customerId}
		AND skill_type = #{skillType}
		AND order_status IN 
		<foreach collection="list"  item="orderStatus"  open="("  close=")"  separator=","  >
		#{orderStatus}
		</foreach>
  </select>
  <!-- 查询客户信息 -->
  <select id="selectGongIngOrderListByCustomerSkillId" resultType="java.lang.Integer" >
		SELECT
			count(order_id)
		FROM
			orders
		WHERE
			customer_skill_id = #{customerSkillId}
		AND skill_type = #{skillType}
		AND order_status IN 
		<foreach collection="list"  item="orderStatus"  open="("  close=")"  separator=","  >
			#{orderStatus}
		</foreach>
  </select>
  
  	<select id="queryOrderByCustomerIdAndServiceId" resultMap="BaseResultMap" parameterType="map" >
		
		    select 
    <include refid="Base_Column_List" />
    from orders
    where customer_id = #{customerId,jdbcType=BIGINT} and  service_id = #{serviceId}  and  order_status in
    <foreach collection="list" item="orderStatus" open="("  close=")"  separator=",">
      #{orderStatus}  
    </foreach>
    order  by  order_time  desc
    limit 1
  	</select>
  	
  	
  	
  	<!-- 查询同一时间存在的订单ID列表 -->
  	<select id="selectOrderReceiveOrder" resultMap="BaseResultMap" parameterType="map" >

		SELECT
			<include refid="Base_Column_List" />
		FROM
			orders
		WHERE
			service_id = #{serviceId}
		AND  order_status  = #{orderStatus}
		AND  order_id <![CDATA[ != ]]>  #{orderId}
  	</select>
  	
  	
  	
  <!-- 保存评价信息 -->
  <update id="updateOrderReceiveOrder"  parameterType="map">
    update orders set order_status = #{orderStatus}  where  order_id  in
    
    <foreach collection="list" item="orderId" open="("  close=")"  separator=",">
      #{orderId}
    </foreach>
  </update>

  <!-- 查询声优是否被客户关注 -->
  <select id="findServicerIsAttentioned" resultType="integer">
    SELECT COUNT(1) FROM `fans` WHERE anchor_id=#{serviceId} AND fans_id=#{customerId} AND attention_state = 1;
  </select>

  <!-- 插入订单服务者的粉丝 -->
  <insert id="insertOrderServicerFans">
    INSERT INTO fans (id, anchor_id, fans_id, attention_state)
    VALUES(#{id}, #{serviceId}, #{customerId}, 1)
    ON DUPLICATE KEY UPDATE attention_state = 1
  </insert>
</mapper>