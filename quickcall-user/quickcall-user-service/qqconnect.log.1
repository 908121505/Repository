1569 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'userInfoServiceImpl': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.BlackMapper com.honglu.quickcall.user.service.service.impl.UserInfoServiceImpl.blackMapper
1569 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1569 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'blackMapper'
1570 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'userInfoServiceImpl' to bean named 'blackMapper'
1570 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1571 DEBUG [2017-12-13 23:44:00]  Adding transactional method 'com.honglu.quickcall.user.service.service.impl.UserInfoServiceImpl.version' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
1571 DEBUG [2017-12-13 23:44:00]  Creating implicit proxy for bean 'userInfoServiceImpl' with 0 common interceptors and 1 specific interceptors
1571 DEBUG [2017-12-13 23:44:00]  Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.honglu.quickcall.user.service.service.impl.UserInfoServiceImpl@7dfd3c81]
1576 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'userInfoServiceImpl'
1576 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'User.UserDubboBusiness' to bean named 'userInfoServiceImpl'
1576 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'User.UserDubboBusiness': AutowiredFieldElement for private com.honglu.quickcall.user.service.service.UserVideoService com.honglu.quickcall.user.service.business.UserDubboBusinessImpl.userVideoService
1576 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1577 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'userVideoServiceImpl'
1577 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'userVideoServiceImpl'
1580 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl]: AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.PersionMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.persion_dao
1580 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl]: AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.video_dao
1580 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl]: AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoLockMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.videoLockMapper
1580 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl]: AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoCommentMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.videocomment_dao
1580 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'userVideoServiceImpl' to allow for resolving potential circular references
1582 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'userVideoServiceImpl': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.PersionMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.persion_dao
1582 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1582 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'persionMapper'
1582 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'userVideoServiceImpl' to bean named 'persionMapper'
1583 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'userVideoServiceImpl': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.video_dao
1583 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1583 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'videoMapper'
1583 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'videoMapper'
1583 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.dao.VideoMapper]: ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoMapper.sqlSessionTemplate
1583 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'videoMapper' to allow for resolving potential circular references
1584 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'videoMapper': ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoMapper.sqlSessionTemplate
1584 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'sqlSessionTemplate'
1584 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1585 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'videoMapper'
1585 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'userVideoServiceImpl' to bean named 'videoMapper'
1585 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'userVideoServiceImpl': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoLockMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.videoLockMapper
1585 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1585 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'videoLockMapper'
1585 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'videoLockMapper'
1586 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.dao.VideoLockMapper]: ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoLockMapper.sqlSessionTemplate
1586 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'videoLockMapper' to allow for resolving potential circular references
1592 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'videoLockMapper': ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoLockMapper.sqlSessionTemplate
1592 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'sqlSessionTemplate'
1592 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1592 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'videoLockMapper'
1592 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'userVideoServiceImpl' to bean named 'videoLockMapper'
1592 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'userVideoServiceImpl': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.VideoCommentMapper com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.videocomment_dao
1592 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1593 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'videoCommentMapper'
1593 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'videoCommentMapper'
1593 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.dao.VideoCommentMapper]: ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoCommentMapper.sqlSessionTemplate
1594 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'videoCommentMapper' to allow for resolving potential circular references
1595 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'videoCommentMapper': ResourceElement for private org.mybatis.spring.SqlSessionTemplate com.honglu.quickcall.user.service.dao.VideoCommentMapper.sqlSessionTemplate
1595 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'sqlSessionTemplate'
1595 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1595 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'videoCommentMapper'
1595 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'userVideoServiceImpl' to bean named 'videoCommentMapper'
1595 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1596 DEBUG [2017-12-13 23:44:00]  Adding transactional method 'com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl.commentVipVideo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
1596 DEBUG [2017-12-13 23:44:00]  Creating implicit proxy for bean 'userVideoServiceImpl' with 0 common interceptors and 1 specific interceptors
1596 DEBUG [2017-12-13 23:44:00]  Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.honglu.quickcall.user.service.service.impl.UserVideoServiceImpl@46d59067]
1601 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'userVideoServiceImpl'
1601 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'User.UserDubboBusiness' to bean named 'userVideoServiceImpl'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1602 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'User.UserDubboBusiness'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'blackMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'pasteRecordMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'persionMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'recommendedMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'videoCommentMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'videoLockMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'videoMapper'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'commonServiceImpl'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'personManagerServiceImpl'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'userInfoServiceImpl'
1602 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'userVideoServiceImpl'
1603 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'baseHandler'
1603 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'baseHandler'
1603 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.xiamen.BaseHandler]: AutowiredFieldElement for com.honglu.quickcall.user.service.dao.PersionMapper com.honglu.quickcall.user.service.service.xiamen.BaseHandler.persion_dao
1611 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.service.xiamen.BaseHandler]: AutowiredFieldElement for com.honglu.quickcall.user.service.service.xiamen.PersionService com.honglu.quickcall.user.service.service.xiamen.BaseHandler.persion_service
1611 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'baseHandler' to allow for resolving potential circular references
1611 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'baseHandler': AutowiredFieldElement for com.honglu.quickcall.user.service.dao.PersionMapper com.honglu.quickcall.user.service.service.xiamen.BaseHandler.persion_dao
1611 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1612 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'persionMapper'
1612 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'baseHandler' to bean named 'persionMapper'
1612 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'baseHandler': AutowiredFieldElement for com.honglu.quickcall.user.service.service.xiamen.PersionService com.honglu.quickcall.user.service.service.xiamen.BaseHandler.persion_service
1612 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1612 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'persionService'
1612 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'baseHandler' to bean named 'persionService'
1612 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1613 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'baseHandler'
1613 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'persionService'
1613 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'rankingTask'
1613 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'rankingTask'
1614 DEBUG [2017-12-13 23:44:00]  Registered injected element on class [com.honglu.quickcall.user.service.task.RankingTask]: AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.TaskMapper com.honglu.quickcall.user.service.task.RankingTask.taskMapper
1614 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'rankingTask' to allow for resolving potential circular references
1615 DEBUG [2017-12-13 23:44:00]  Processing injected element of bean 'rankingTask': AutowiredFieldElement for private com.honglu.quickcall.user.service.dao.TaskMapper com.honglu.quickcall.user.service.task.RankingTask.taskMapper
1615 DEBUG [2017-12-13 23:44:00]  Failed to meta-introspect annotation [interface org.springframework.beans.factory.annotation.Autowired]: java.lang.IllegalArgumentException: Annotation must not be null
1616 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'taskMapper'
1616 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'taskMapper'
1616 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'taskMapper' to allow for resolving potential circular references
1616 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'sqlSessionFactory'
1616 DEBUG [2017-12-13 23:44:00]  Invoking afterPropertiesSet() on bean with name 'taskMapper'
1618 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1618 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'taskMapper'
1618 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1619 DEBUG [2017-12-13 23:44:00]  Autowiring by type from bean name 'rankingTask' to bean named 'taskMapper'
1619 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1634 DEBUG [2017-12-13 23:44:00]  1 @Scheduled methods processed on bean 'rankingTask': {public void com.honglu.quickcall.user.service.task.RankingTask.taskCycle()=[@org.springframework.scheduling.annotation.Scheduled(zone=, initialDelayString=, fixedDelay=-1, fixedRate=-1, fixedDelayString=, fixedRateString=, initialDelay=-1, cron=0/120 * * * * ? )]}
1634 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'rankingTask'
1634 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'abstractDataSource'
1634 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'abstractDataSource'
1635 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'abstractDataSource' to allow for resolving potential circular references
1636 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1636 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'abstractDataSource'
1636 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'dataSource-r'
1636 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'dataSource-w'
1636 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'defaultDataSource'
1636 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
1636 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
1636 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
1640 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1640 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
1640 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
1640 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
1640 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
1640 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
1648 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
1653 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
1654 DEBUG [2017-12-13 23:44:00]  Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
1655 DEBUG [2017-12-13 23:44:00]  Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
1655 DEBUG [2017-12-13 23:44:00]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1655 DEBUG [2017-12-13 23:44:00]  Creating shared instance of singleton bean 'transactionManager-w'
1655 DEBUG [2017-12-13 23:44:00]  Creating instance of bean 'transactionManager-w'
1667 DEBUG [2017-12-13 23:44:00]  Eagerly caching bean 'transactionManager-w' to allow for resolving potential circular references
1673 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'dataSource-w'
1683 DEBUG [2017-12-13 23:44:01]  Invoking afterPropertiesSet() on bean with name 'transactionManager-w'
1683 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1684 DEBUG [2017-12-13 23:44:01]  Finished creating instance of bean 'transactionManager-w'
1684 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'sqlSessionFactory'
1685 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'sqlSessionTemplate'
1686 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
1686 DEBUG [2017-12-13 23:44:01]  Creating shared instance of singleton bean 'quickcall-user-server'
1686 DEBUG [2017-12-13 23:44:01]  Creating instance of bean 'quickcall-user-server'
1687 DEBUG [2017-12-13 23:44:01]  Eagerly caching bean 'quickcall-user-server' to allow for resolving potential circular references
1694 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1699 DEBUG [2017-12-13 23:44:01]  Finished creating instance of bean 'quickcall-user-server'
1699 DEBUG [2017-12-13 23:44:01]  Creating shared instance of singleton bean 'dubbo'
1699 DEBUG [2017-12-13 23:44:01]  Creating instance of bean 'dubbo'
1700 DEBUG [2017-12-13 23:44:01]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
1723 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1730 DEBUG [2017-12-13 23:44:01]  Finished creating instance of bean 'dubbo'
1731 DEBUG [2017-12-13 23:44:01]  Creating shared instance of singleton bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
1731 DEBUG [2017-12-13 23:44:01]  Creating instance of bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
1754 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
1885 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
1916 DEBUG [2017-12-13 23:44:01]  Eagerly caching bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness' to allow for resolving potential circular references
1929 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'User.UserDubboBusiness'
1932 DEBUG [2017-12-13 23:44:01]  Invoking afterPropertiesSet() on bean with name 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
1933 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'quickcall-user-server'
1933 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'dubbo'
1933 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1950 DEBUG [2017-12-13 23:44:01]  Finished creating instance of bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
1951 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'balanceOfPaymentsMapper'
1951 DEBUG [2017-12-13 23:44:01]  Creating shared instance of singleton bean 'companyMapper'
1951 DEBUG [2017-12-13 23:44:01]  Creating instance of bean 'companyMapper'
1951 DEBUG [2017-12-13 23:44:01]  Eagerly caching bean 'companyMapper' to allow for resolving potential circular references
1951 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'sqlSessionFactory'
1951 DEBUG [2017-12-13 23:44:01]  Invoking afterPropertiesSet() on bean with name 'companyMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
1952 DEBUG [2017-12-13 23:44:01]  Finished creating instance of bean 'companyMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'noticeMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'readmeRecordMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'taskMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'verifyMapper'
1952 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'versionMapper'
1953 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
1953 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
1978 DEBUG [2017-12-13 23:44:01]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@ae3540e]
1978 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'lifecycleProcessor'
1982 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
1982 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'sqlSessionFactory'
1982 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
1984 DEBUG [2017-12-13 23:44:01]  Could not find default TaskScheduler bean
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.scheduling.TaskScheduler' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:990)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.resolveSchedulerBean(ScheduledAnnotationBeanPostProcessor.java:291)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:232)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:209)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:100)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:353)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:887)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:95)
	at com.honglu.quickcall.user.service.manager.UserManageBizServer.main(UserManageBizServer.java:25)
1988 DEBUG [2017-12-13 23:44:01]  Could not find default ScheduledExecutorService bean
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'java.util.concurrent.ScheduledExecutorService' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:990)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.resolveSchedulerBean(ScheduledAnnotationBeanPostProcessor.java:291)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:253)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:209)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:100)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:353)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:887)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:95)
	at com.honglu.quickcall.user.service.manager.UserManageBizServer.main(UserManageBizServer.java:25)
1988 INFO  [2017-12-13 23:44:01]  No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
1998 INFO  [2017-12-13 23:44:01]   [DUBBO] The service ready on spring started. service: com.honglu.quickcall.user.facade.business.UserDubboBusiness, dubbo version: 2.8.4, current host: 127.0.0.1
2114 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2122 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2133 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2144 INFO  [2017-12-13 23:44:01]   [DUBBO] Export dubbo service com.honglu.quickcall.user.facade.business.UserDubboBusiness to local registry, dubbo version: 2.8.4, current host: 127.0.0.1
2145 INFO  [2017-12-13 23:44:01]   [DUBBO] Export dubbo service com.honglu.quickcall.user.facade.business.UserDubboBusiness to url dubbo://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1, dubbo version: 2.8.4, current host: 127.0.0.1
2145 INFO  [2017-12-13 23:44:01]   [DUBBO] Register dubbo service com.honglu.quickcall.user.facade.business.UserDubboBusiness url dubbo://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=quickcall-user-server&dubbo=2.8.4&organization=xiaoniu&owner=len.song&pid=15652&registry=zookeeper&timestamp=1513179841338, dubbo version: 2.8.4, current host: 127.0.0.1
2149 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2159 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2179 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2193 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2201 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2227 DEBUG [2017-12-13 23:44:01]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.8.4, current host: 127.0.0.1
2264 INFO  [2017-12-13 23:44:01]   [DUBBO] Start NettyServer bind /0.0.0.0:21353, export /192.168.89.206:21353, dubbo version: 2.8.4, current host: 127.0.0.1
2268 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2279 INFO  [2017-12-13 23:44:01]   [DUBBO] Load registry store file C:\Users\liyingtang\.dubbo\dubbo-registry-127.0.0.1.cache, data: {activityCenter/com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness:0.0.1=empty://192.168.89.206/com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness?application=calfLoan-weixin-client&category=configurators&check=false&dubbo=2.8.4&group=activityCenter&interface=com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=27232&revision=1.0.0-SNAPSHOT&side=consumer&timestamp=1513075251017&version=0.0.1 empty://192.168.89.206/com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness?application=calfLoan-weixin-client&category=routers&check=false&dubbo=2.8.4&group=activityCenter&interface=com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=27232&revision=1.0.0-SNAPSHOT&side=consumer&timestamp=1513075251017&version=0.0.1 dubbo://192.168.89.206:21351/com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness?anyhost=true&application=calfLoan-activity-client&dubbo=2.8.4&generic=false&group=activityCenter&interface=com.honglu.quickcall.activity.facade.business.ActivityDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=9132&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513075241007&version=0.0.1, gjapiJxl/com.xulu.gjapiCenter.ifc.GjapiJxlIfc:0.0.1=empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiJxlIfc?application=calfLoan-usercenter-server&category=configurators&check=false&dubbo=2.8.4&group=gjapiJxl&interface=com.xulu.gjapiCenter.ifc.GjapiJxlIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457286&version=0.0.1 empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiJxlIfc?application=calfLoan-usercenter-server&category=routers&check=false&dubbo=2.8.4&group=gjapiJxl&interface=com.xulu.gjapiCenter.ifc.GjapiJxlIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457286&version=0.0.1 empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiJxlIfc?application=calfLoan-usercenter-server&category=providers&check=false&dubbo=2.8.4&group=gjapiJxl&interface=com.xulu.gjapiCenter.ifc.GjapiJxlIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457286&version=0.0.1, loanCenter/com.xulu.loancenter.ifc.LoanCenterIfc:0.0.1=empty://192.168.89.206/com.xulu.loancenter.ifc.LoanCenterIfc?application=calfLoan-loancenter-web-client&category=configurators&check=false&dubbo=2.8.4&group=loanCenter&interface=com.xulu.loancenter.ifc.LoanCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23608&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1511791380545&version=0.0.1 empty://192.168.89.206/com.xulu.loancenter.ifc.LoanCenterIfc?application=calfLoan-loancenter-web-client&category=routers&check=false&dubbo=2.8.4&group=loanCenter&interface=com.xulu.loancenter.ifc.LoanCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23608&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1511791380545&version=0.0.1 dubbo://192.168.89.206:21352/com.xulu.loancenter.ifc.LoanCenterIfc?anyhost=true&application=calfLoan-loancenter-server&dubbo=2.8.4&generic=false&group=loanCenter&interface=com.xulu.loancenter.ifc.LoanCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=8388&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1511791369009&version=0.0.1, activityCenter/com.xulu.activityCenter.ifc.ActivityCenterIfc:0.0.1=empty://192.168.89.206:21355/com.xulu.activityCenter.ifc.ActivityCenterIfc?anyhost=true&application=calfLoan-activityCenter-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=activityCenter&interface=com.xulu.activityCenter.ifc.ActivityCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=9684&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1508997205469&version=0.0.1, communityCenter/com.xulu.communitycenter.ifc.CommunityCenterIfc:0.0.1=empty://192.168.89.206:21353/com.xulu.communitycenter.ifc.CommunityCenterIfc?anyhost=true&application=calfLoan-communitycenter-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=communityCenter&interface=com.xulu.communitycenter.ifc.CommunityCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=28632&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1512026262017&version=0.0.1, userCenter/com.xulu.usercenter.ifc.UserCenterIfc:0.0.1=empty://192.168.89.206:21350/com.xulu.usercenter.ifc.UserCenterIfc?anyhost=true&application=calfLoan-usercenter-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=userCenter&interface=com.xulu.usercenter.ifc.UserCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=210000&timestamp=1510296458398&version=0.0.1, gjapiCenter/com.xulu.gjapiCenter.ifc.GjapiCenterIfc:0.0.1=empty://192.168.89.206:21356/com.xulu.gjapiCenter.ifc.GjapiCenterIfc?anyhost=true&application=calfLoan-gjapiCenter-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=gjapiCenter&interface=com.xulu.gjapiCenter.ifc.GjapiCenterIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=14412&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1509086895883&version=0.0.1, userCenter/com.honglu.quickcall.user.facade.business.UserDubboBusiness:0.0.1=empty://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=32064&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179824885&version=0.0.1, gjapiTd/com.xulu.gjapiCenter.ifc.GjapiTdIfc:0.0.1=empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiTdIfc?application=calfLoan-usercenter-server&category=configurators&check=false&dubbo=2.8.4&group=gjapiTd&interface=com.xulu.gjapiCenter.ifc.GjapiTdIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457950&version=0.0.1 empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiTdIfc?application=calfLoan-usercenter-server&category=routers&check=false&dubbo=2.8.4&group=gjapiTd&interface=com.xulu.gjapiCenter.ifc.GjapiTdIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457950&version=0.0.1 empty://192.168.89.206/com.xulu.gjapiCenter.ifc.GjapiTdIfc?application=calfLoan-usercenter-server&category=providers&check=false&dubbo=2.8.4&group=gjapiTd&interface=com.xulu.gjapiCenter.ifc.GjapiTdIfc&methods=excute&organization=xiaoniu&owner=conly.wang&pid=23148&retries=0&revision=0.0.1&side=consumer&timestamp=1510296457950&version=0.0.1}, dubbo version: 2.8.4, current host: 127.0.0.1
2292 DEBUG [2017-12-13 23:44:01]  Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
2298 INFO  [2017-12-13 23:44:01]  Starting ZkClient event thread.
2301 INFO  [2017-12-13 23:44:01]  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2301 INFO  [2017-12-13 23:44:01]  Client environment:host.name=liyingtang.xiaoniu.com
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.version=1.8.0_31
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.vendor=Oracle Corporation
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.home=D:\Program Files\Java
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.class.path=D:\Program Files\Java\lib\resources.jar;D:\Program Files\Java\lib\rt.jar;D:\Program Files\Java\lib\jsse.jar;D:\Program Files\Java\lib\jce.jar;D:\Program Files\Java\lib\charsets.jar;D:\Program Files\Java\lib\jfr.jar;D:\Program Files\Java\lib\ext\access-bridge-64.jar;D:\Program Files\Java\lib\ext\cldrdata.jar;D:\Program Files\Java\lib\ext\dnsns.jar;D:\Program Files\Java\lib\ext\jaccess.jar;D:\Program Files\Java\lib\ext\jfxrt.jar;D:\Program Files\Java\lib\ext\localedata.jar;D:\Program Files\Java\lib\ext\nashorn.jar;D:\Program Files\Java\lib\ext\sunec.jar;D:\Program Files\Java\lib\ext\sunjce_provider.jar;D:\Program Files\Java\lib\ext\sunmscapi.jar;D:\Program Files\Java\lib\ext\sunpkcs11.jar;D:\Program Files\Java\lib\ext\zipfs.jar;D:\peripei\quickcall-user\quickcall-user-service\target\classes;D:\peripei\quickcall-common\quickcall-cmomon-third\target\classes;D:\work\org\springframework\spring-tx\5.0.2.RELEASE\spring-tx-5.0.2.RELEASE.jar;D:\work\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;D:\work\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\work\org\lazyluke\log4jdbc-remix\0.2.7\log4jdbc-remix-0.2.7.jar;D:\work\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;D:\work\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;D:\work\com\fasterxml\jackson\core\jackson-databind\2.9.2\jackson-databind-2.9.2.jar;D:\work\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;D:\work\com\fasterxml\jackson\core\jackson-core\2.9.2\jackson-core-2.9.2.jar;D:\peripei\quickcall-user\quickcall-user-facade\target\classes;D:\peripei\quickcall-common\quickcall-common-core\target\classes;D:\peripei\quickcall-common\quickcall-common-api\target\classes;D:\work\org\springframework\spring-aop\5.0.2.RELEASE\spring-aop-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-aspects\5.0.2.RELEASE\spring-aspects-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-beans\5.0.2.RELEASE\spring-beans-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-context\5.0.2.RELEASE\spring-context-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-expression\5.0.2.RELEASE\spring-expression-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-context-support\5.0.2.RELEASE\spring-context-support-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-core\5.0.2.RELEASE\spring-core-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-jcl\5.0.2.RELEASE\spring-jcl-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-jdbc\5.0.2.RELEASE\spring-jdbc-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-web\5.0.2.RELEASE\spring-web-5.0.2.RELEASE.jar;D:\work\org\springframework\spring-webmvc\5.0.2.RELEASE\spring-webmvc-5.0.2.RELEASE.jar;D:\work\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\work\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\work\org\aspectj\aspectjweaver\1.6.8\aspectjweaver-1.6.8.jar;D:\work\org\apache\poi\poi\3.9\poi-3.9.jar;D:\work\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;D:\work\org\mybatis\mybatis\3.4.1\mybatis-3.4.1.jar;D:\work\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;D:\work\org\eclipse\persistence\javax.persistence\2.1.1\javax.persistence-2.1.1.jar;D:\work\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\work\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;D:\work\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;D:\work\ch\qos\logback\logback-access\1.2.3\logback-access-1.2.3.jar;D:\work\org\dom4j\dom4j\2.1.0\dom4j-2.1.0.jar;D:\work\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;D:\work\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;D:\work\org\apache\httpcomponents\httpcore\4.4.4\httpcore-4.4.4.jar;D:\work\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\work\org\json\json\20160810\json-20160810.jar;D:\work\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;D:\work\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;D:\work\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;D:\work\commons-io\commons-io\2.2\commons-io-2.2.jar;D:\work\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\work\com\alibaba\fastjson\1.2.31\fastjson-1.2.31.jar;D:\work\com\alibaba\druid\1.1.5\druid-1.1.5.jar;D:\work\com\alibaba\dubbo\2.8.4\dubbo-2.8.4.jar;D:\work\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;D:\work\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\work\org\objenesis\objenesis\2.1\objenesis-2.1.jar;D:\work\com\esotericsoftware\minlog\minlog\1.3.0\minlog-1.3.0.jar;D:\work\com\esotericsoftware\reflectasm\1.10.1\reflectasm-1.10.1.jar;D:\work\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;D:\work\javassist\javassist\3.12.0.GA\javassist-3.12.0.GA.jar;D:\work\org\jboss\netty\netty\3.2.10.Final\netty-3.2.10.Final.jar;D:\work\com\esotericsoftware\kryo\3.0.3\kryo-3.0.3.jar;D:\work\de\javakaffee\kryo-serializers\0.37\kryo-serializers-0.37.jar;D:\work\cglib\cglib\2.2.2\cglib-2.2.2.jar;D:\work\asm\asm\3.3.1\asm-3.3.1.jar;D:\work\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\work\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar;D:\work\jdom\jdom\1.0\jdom-1.0.jar;D:\work\com\google\code\gson\gson\2.2.4\gson-2.2.4.jar;D:\work\net\sf\json-lib\json-lib\2.4\json-lib-2.4.jar;D:\work\net\sourceforge\jexcelapi\jxl\2.6.12\jxl-2.6.12.jar;D:\work\it\sauronsoftware\cron4j\cron4j\2.2.5\cron4j-2.2.5.jar;D:\work\it\sauronsoftware\jave\jave\1.0.2\jave-1.0.2.jar;D:\work\cn\jpush\api\jpush-client\3.2.10\jpush-client-3.2.10.jar;D:\work\com\tuputech\api\tupuApi\1.0.0\tupuApi-1.0.0.jar;D:\work\com\qiniu\util\qiniu-java-sdk\7.2.8\qiniu-java-sdk-7.2.8.jar;D:\work\com\alipay\api\alipay-sdk-java\20170209153223\alipay-sdk-java-20170209153223.jar;D:\work\jp\sourceforge\qrcode\QRCode\1.0.0\QRCode-1.0.0.jar;D:\work\cn\jiguang\commom\jiguang-common\0.1.4\jiguang-common-0.1.4.jar;D:\work\com\qq\connect\qqSdk4J\1.0.0\qqSdk4J-1.0.0.jar;D:\work\org\springframework\amqp\spring-amqp\1.4.3.RELEASE\spring-amqp-1.4.3.RELEASE.jar;D:\work\org\springframework\amqp\spring-rabbit\1.4.3.RELEASE\spring-rabbit-1.4.3.RELEASE.jar;D:\work\org\springframework\spring-messaging\4.1.3.RELEASE\spring-messaging-4.1.3.RELEASE.jar;D:\work\org\springframework\retry\spring-retry\1.1.2.RELEASE\spring-retry-1.1.2.RELEASE.jar;D:\work\com\rabbitmq\amqp-client\3.5.6\amqp-client-3.5.6.jar;D:\work\redis\clients\jedis\2.2.0\jedis-2.2.0.jar;D:\work\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;D:\work\joda-time\joda-time\2.9.8\joda-time-2.9.8.jar
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/bin/server;D:/Program Files/Java/bin;D:/Program Files/Java/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Program Files\Java\jdk1.8.0_31\bin;D:\Program Files\Java\jdk1.8.0_31\jre\bin;D:\workPack\apache-tomcat-7.0.57\lib;D:\workPack\apache-tomcat-7.0.57\bin;;D:\workPack\apache-maven-3.3.3\bin;C:\Program Files\TortoiseSVN\bin;%M2_HOME%;% ZOOKEEPER_HOME %/bin; % ZOOKEEPER_HOME %/conf;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Users\liyingtang\AppData\Local\Microsoft\WindowsApps;;E:\;C:\Users\liyingtang\Desktop;;.
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.io.tmpdir=C:\Users\LIYING~1\AppData\Local\Temp\
2301 INFO  [2017-12-13 23:44:01]  Client environment:java.compiler=<NA>
2301 INFO  [2017-12-13 23:44:01]  Client environment:os.name=Windows 8.1
2301 INFO  [2017-12-13 23:44:01]  Client environment:os.arch=amd64
2301 INFO  [2017-12-13 23:44:01]  Client environment:os.version=6.3
2301 INFO  [2017-12-13 23:44:01]  Client environment:user.name=liyingtang
2301 INFO  [2017-12-13 23:44:01]  Client environment:user.home=C:\Users\liyingtang
2301 INFO  [2017-12-13 23:44:01]  Client environment:user.dir=D:\peripei\quickcall-user\quickcall-user-service
2302 INFO  [2017-12-13 23:44:01]  Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@5f7b97da
2304 DEBUG [2017-12-13 23:44:01]  zookeeper.disableAutoWatchReset is false
2314 DEBUG [2017-12-13 23:44:01]  Awaiting connection to Zookeeper server
2314 DEBUG [2017-12-13 23:44:01]  Waiting for keeper state SyncConnected
2318 INFO  [2017-12-13 23:44:01]  Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2320 INFO  [2017-12-13 23:44:01]  Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session
2321 DEBUG [2017-12-13 23:44:01]  Session establishment request sent on 127.0.0.1/127.0.0.1:2181
2358 INFO  [2017-12-13 23:44:01]  Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x160445cfba10040, negotiated timeout = 40000
2362 DEBUG [2017-12-13 23:44:01]  Received event: WatchedEvent state:SyncConnected type:None path:null
2362 INFO  [2017-12-13 23:44:01]  zookeeper state changed (SyncConnected)
2362 DEBUG [2017-12-13 23:44:01]  Leaving process event
2362 DEBUG [2017-12-13 23:44:01]  State is SyncConnected
2365 INFO  [2017-12-13 23:44:01]   [DUBBO] Register: dubbo://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1, dubbo version: 2.8.4, current host: 127.0.0.1
2398 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,4526,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2423 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,4527,-110  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness,,v{s{31,s{'world,'anyone}}},0  response::  
2445 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4528,-110  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2466 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,4529,0  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/providers/dubbo%253A%252F%252F192.168.89.206%253A21353%252Fcom.honglu.quickcall.user.facade.business.UserDubboBusiness%253Fanyhost%253Dtrue%2526application%253Dquickcall-user-server%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526group%253DuserCenter%2526interface%253Dcom.honglu.quickcall.user.facade.business.UserDubboBusiness%2526methods%253Dexcute%2526organization%253Dxiaoniu%2526owner%253Dlen.song%2526pid%253D15652%2526retries%253D0%2526revision%253D0.0.1%2526serialization%253Dkryo%2526side%253Dprovider%2526timeout%253D60000%2526timestamp%253D1513179841350%2526version%253D0.0.1,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/providers/dubbo%253A%252F%252F192.168.89.206%253A21353%252Fcom.honglu.quickcall.user.facade.business.UserDubboBusiness%253Fanyhost%253Dtrue%2526application%253Dquickcall-user-server%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526group%253DuserCenter%2526interface%253Dcom.honglu.quickcall.user.facade.business.UserDubboBusiness%2526methods%253Dexcute%2526organization%253Dxiaoniu%2526owner%253Dlen.song%2526pid%253D15652%2526retries%253D0%2526revision%253D0.0.1%2526serialization%253Dkryo%2526side%253Dprovider%2526timeout%253D60000%2526timestamp%253D1513179841350%2526version%253D0.0.1 
2467 INFO  [2017-12-13 23:44:01]   [DUBBO] Subscribe: provider://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1, dubbo version: 2.8.4, current host: 127.0.0.1
2497 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,4530,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2523 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,4531,-110  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness,,v{s{31,s{'world,'anyone}}},0  response::  
2545 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,4532,-110  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2550 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,4532,0  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/configurators,T  response:: s{3191,3191,1512749870383,1512749870383,0,0,0,0,0,0,3191} 
2553 DEBUG [2017-12-13 23:44:01]  Reading reply sessionid:0x160445cfba10040, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,4532,0  request:: '/dubbo/com.honglu.quickcall.user.facade.business.UserDubboBusiness/configurators,T  response:: v{} 
2554 INFO  [2017-12-13 23:44:01]   [DUBBO] Notify urls for subscribe url provider://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1, urls: [empty://192.168.89.206:21353/com.honglu.quickcall.user.facade.business.UserDubboBusiness?anyhost=true&application=quickcall-user-server&category=configurators&check=false&dubbo=2.8.4&generic=false&group=userCenter&interface=com.honglu.quickcall.user.facade.business.UserDubboBusiness&methods=excute&organization=xiaoniu&owner=len.song&pid=15652&retries=0&revision=0.0.1&serialization=kryo&side=provider&timeout=60000&timestamp=1513179841350&version=0.0.1], dubbo version: 2.8.4, current host: 127.0.0.1
2560 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2567 DEBUG [2017-12-13 23:44:01]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2574 DEBUG [2017-12-13 23:44:01]  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2575 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'lifecycleProcessor'
2576 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'sqlSessionFactory'
2576 DEBUG [2017-12-13 23:44:01]  Returning cached instance of singleton bean 'com.honglu.quickcall.user.facade.business.UserDubboBusiness'
2577 INFO  [2017-12-13 23:44:01]  ----------本地启动服务：结束加载----------
15886 DEBUG [2017-12-13 23:44:15]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
29220 DEBUG [2017-12-13 23:44:28]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
42553 DEBUG [2017-12-13 23:44:41]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
55886 DEBUG [2017-12-13 23:44:55]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
62580 INFO  [2017-12-13 23:45:01]  ============================= userCenter is alive ! =======================================
69219 DEBUG [2017-12-13 23:45:08]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
79477 DEBUG [2017-12-13 23:45:18]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
79484 DEBUG [2017-12-13 23:45:18]  Creating a new SqlSession
79497 DEBUG [2017-12-13 23:45:18]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bd3740] was not registered for synchronization because synchronization is not active
79499 WARN  [2017-12-13 23:45:18]  设置方法[Persion.queryPersionByTel] use [READ] Strategy, SqlCommandType [SELECT]..
79507 DEBUG [2017-12-13 23:45:18]  Fetching JDBC Connection from DataSource
80271 INFO  [2017-12-13 23:45:19]  {dataSource-1} inited
80274 DEBUG [2017-12-13 23:45:19]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
80276 DEBUG [2017-12-13 23:45:19]  ==>  Preparing: SELECT P.TEL FROM PERSION P WHERE P.TEL = ? LIMIT 1 
80296 DEBUG [2017-12-13 23:45:19]  ==> Parameters: 18217583747(String)
80314 DEBUG [2017-12-13 23:45:19]  <==      Total: 1
80315 DEBUG [2017-12-13 23:45:19]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bd3740]
80315 DEBUG [2017-12-13 23:45:19]  Returning JDBC Connection to DataSource
80328 INFO  [2017-12-13 23:45:19]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@12d8d0fb[resultStr=<null>,code=Default#Success,message=成功,object={result=tel_yet},data=<null>,extFields={}]
80328 INFO  [2017-12-13 23:45:19]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@12d8d0fb[resultStr=<null>,code=Default#Success,message=成功,object={result=tel_yet},data=<null>,extFields={}]
82553 DEBUG [2017-12-13 23:45:21]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
84025 DEBUG [2017-12-13 23:45:23]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
84026 DEBUG [2017-12-13 23:45:23]  Creating a new SqlSession
84026 DEBUG [2017-12-13 23:45:23]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d422aed] was not registered for synchronization because synchronization is not active
84026 DEBUG [2017-12-13 23:45:23]  Fetching JDBC Connection from DataSource
84026 DEBUG [2017-12-13 23:45:23]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
84026 DEBUG [2017-12-13 23:45:23]  ==>  Preparing: SELECT P.TEL FROM PERSION P WHERE P.TEL = ? LIMIT 1 
84027 DEBUG [2017-12-13 23:45:23]  ==> Parameters: 18217583745(String)
84034 DEBUG [2017-12-13 23:45:23]  <==      Total: 0
84034 DEBUG [2017-12-13 23:45:23]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d422aed]
84034 DEBUG [2017-12-13 23:45:23]  Returning JDBC Connection to DataSource
84034 INFO  [2017-12-13 23:45:23]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@52b8dd0e[resultStr=<null>,code=Default#Success,message=成功,object={result=success},data=<null>,extFields={}]
84034 INFO  [2017-12-13 23:45:23]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@52b8dd0e[resultStr=<null>,code=Default#Success,message=成功,object={result=success},data=<null>,extFields={}]
88353 DEBUG [2017-12-13 23:45:27]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
88354 DEBUG [2017-12-13 23:45:27]  Creating a new SqlSession
88354 DEBUG [2017-12-13 23:45:27]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d670a1] was not registered for synchronization because synchronization is not active
88355 DEBUG [2017-12-13 23:45:27]  Fetching JDBC Connection from DataSource
88355 DEBUG [2017-12-13 23:45:27]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
88355 DEBUG [2017-12-13 23:45:27]  ==>  Preparing: SELECT P.TEL FROM PERSION P WHERE P.TEL = ? LIMIT 1 
88356 DEBUG [2017-12-13 23:45:27]  ==> Parameters: 18217583747(String)
88363 DEBUG [2017-12-13 23:45:27]  <==      Total: 1
88363 DEBUG [2017-12-13 23:45:27]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d670a1]
88363 DEBUG [2017-12-13 23:45:27]  Returning JDBC Connection to DataSource
88363 INFO  [2017-12-13 23:45:27]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@7e2c82d0[resultStr=<null>,code=Default#Success,message=成功,object={result=tel_yet},data=<null>,extFields={}]
88363 INFO  [2017-12-13 23:45:27]  返回结果com.honglu.quickcall.user.facade.exchange.response.IsPhoneExistsResponse@7e2c82d0[resultStr=<null>,code=Default#Success,message=成功,object={result=tel_yet},data=<null>,extFields={}]
95683 DEBUG [2017-12-13 23:45:35]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
95686 DEBUG [2017-12-13 23:45:35]  Creating a new SqlSession
95686 DEBUG [2017-12-13 23:45:35]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2c5759] was not registered for synchronization because synchronization is not active
95686 WARN  [2017-12-13 23:45:35]  设置方法[Persion.insert] use [WRITE] Strategy, SqlCommandType [INSERT]..
95716 DEBUG [2017-12-13 23:45:35]  Fetching JDBC Connection from DataSource
95886 DEBUG [2017-12-13 23:45:35]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
96081 INFO  [2017-12-13 23:45:35]  {dataSource-2} inited
96081 DEBUG [2017-12-13 23:45:35]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
96082 DEBUG [2017-12-13 23:45:35]  ==>  Preparing: INSERT INTO PERSION ( TEL, PWD, NICK_NAME, BIRTHDAY, area, PHOTO, SIGN, LOGIN_TIME, source ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
96085 DEBUG [2017-12-13 23:45:35]  ==> Parameters: 11233213252(String), 96e79218965eb72c92a549dd5a330112(String), 青藤之凉8013(String), 1970-01-01(String), 火星-未知(String), http://kuaihu.xnsudai.com/1513170336945.png(String), 客官，您还没有设置自我介绍哦~(String), 2017-12-13 23:45:35.013(Timestamp), 2(Integer)
96100 DEBUG [2017-12-13 23:45:35]  <==    Updates: 1
96100 DEBUG [2017-12-13 23:45:35]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2c5759]
96100 DEBUG [2017-12-13 23:45:35]  Returning JDBC Connection to DataSource
96751 DEBUG [2017-12-13 23:45:36]  Creating a new SqlSession
96752 DEBUG [2017-12-13 23:45:36]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3059cd77] was not registered for synchronization because synchronization is not active
96752 WARN  [2017-12-13 23:45:36]  设置方法[Persion.update] use [WRITE] Strategy, SqlCommandType [UPDATE]..
96760 DEBUG [2017-12-13 23:45:36]  Fetching JDBC Connection from DataSource
96760 DEBUG [2017-12-13 23:45:36]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
96760 DEBUG [2017-12-13 23:45:36]  ==>  Preparing: UPDATE PERSION SET OTHERKEY = ? WHERE ID = ? 
96760 DEBUG [2017-12-13 23:45:36]  ==> Parameters: 9654336(Integer), 336(Integer)
96774 DEBUG [2017-12-13 23:45:36]  <==    Updates: 1
96774 DEBUG [2017-12-13 23:45:36]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3059cd77]
96774 DEBUG [2017-12-13 23:45:36]  Returning JDBC Connection to DataSource
96774 INFO  [2017-12-13 23:45:36]  用户保存融云信息成功。注册用户ID为：336
96774 DEBUG [2017-12-13 23:45:36]  Creating a new SqlSession
96774 DEBUG [2017-12-13 23:45:36]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dca4eaf] was not registered for synchronization because synchronization is not active
96775 WARN  [2017-12-13 23:45:36]  设置方法[Persion.selectByKey] use [READ] Strategy, SqlCommandType [SELECT]..
96775 DEBUG [2017-12-13 23:45:36]  Fetching JDBC Connection from DataSource
96775 DEBUG [2017-12-13 23:45:36]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
96775 DEBUG [2017-12-13 23:45:36]  ==>  Preparing: SELECT P.ID, P.TEL, P.NICK_NAME, P.SEX, P.BIRTHDAY, P.SIGN, P.SUP_ABILITY, P.PHOTO_IDENT, P.VOICE_IDENT, P.VOICE_TIME_LENGTH, P.OTHERKEY, P.SMS_STATE, P.ALBUM, P.LOVE, P.`LEVEL`, (SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM, P.TOKEN, P.CAPITALBALANCE, P.PLAY_IDENT, P.PHOTO, (SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET, P.SMS_MONEY, P.VOICE_MONEY, P.VOICE_STATE, P.VIDEO_MONEY, P.VIDEO, P.AREA, P.VIDEO_STATE, P.RONGYUNTOKEN, P.USE_STATE, P.VERSION, P.ONLINE_DATE, P.IS_VIP, (SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE,PERSION F WHERE CARE.PERSION_ID = P.ID AND CARE.ACCEPT_ID = F.ID AND CARE.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = CARE.ACCEPT_ID)) AS CARESIZE, ( SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS, PERSION F WHERE FANS.ACCEPT_ID = P.ID AND FANS.PERSION_ID = F.ID AND FANS.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = FANS.ACCEPT_ID ) ) AS FANSSIZE, (SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID IN ( SELECT TEMPT.ACCEPT_ID FROM PASTE_RECORD TEMPT WHERE TEMPT.PERSION_ID = P.ID ) AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE FROM PERSION P WHERE P.ID = ? 
96776 DEBUG [2017-12-13 23:45:36]  ==> Parameters: 336(Integer)
96786 DEBUG [2017-12-13 23:45:36]  <==      Total: 1
96787 DEBUG [2017-12-13 23:45:36]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dca4eaf]
96787 DEBUG [2017-12-13 23:45:36]  Returning JDBC Connection to DataSource
96787 INFO  [2017-12-13 23:45:36]  返回结果com.honglu.quickcall.user.facade.exchange.response.UserThirdLoginResponse@56d93f17[persion=com.honglu.quickcall.user.facade.entity.Persion@756b5ede,code=Default#Success,message=成功,object={result=com.honglu.quickcall.user.facade.entity.Persion@756b5ede},data=<null>,extFields={}]
109220 DEBUG [2017-12-13 23:45:48]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
122554 DEBUG [2017-12-13 23:46:01]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
122580 INFO  [2017-12-13 23:46:01]  ============================= userCenter is alive ! =======================================
135888 DEBUG [2017-12-13 23:46:15]  Got ping response for sessionid: 0x160445cfba10040 after 1ms
148157 DEBUG [2017-12-13 23:46:27]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
148157 DEBUG [2017-12-13 23:46:27]  Creating a new SqlSession
148157 DEBUG [2017-12-13 23:46:27]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25252aab] was not registered for synchronization because synchronization is not active
148158 DEBUG [2017-12-13 23:46:27]  Fetching JDBC Connection from DataSource
148173 DEBUG [2017-12-13 23:46:27]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
148173 DEBUG [2017-12-13 23:46:27]  ==>  Preparing: INSERT INTO PERSION ( TEL, PWD, NICK_NAME, BIRTHDAY, area, PHOTO, SIGN, LOGIN_TIME, source ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
148174 DEBUG [2017-12-13 23:46:27]  ==> Parameters: 11233213252(String), 96e79218965eb72c92a549dd5a330112(String), ALT5758(String), 1970-01-01(String), 火星-未知(String), http://kuaihu.xnsudai.com/1513170336945.png(String), 客官，您还没有设置自我介绍哦~(String), 2017-12-13 23:46:27.487(Timestamp), 1(Integer)
148188 DEBUG [2017-12-13 23:46:27]  <==    Updates: 1
148189 DEBUG [2017-12-13 23:46:27]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25252aab]
148189 DEBUG [2017-12-13 23:46:27]  Returning JDBC Connection to DataSource
148298 DEBUG [2017-12-13 23:46:27]  Creating a new SqlSession
148298 DEBUG [2017-12-13 23:46:27]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ebe5b42] was not registered for synchronization because synchronization is not active
148299 DEBUG [2017-12-13 23:46:27]  Fetching JDBC Connection from DataSource
148299 DEBUG [2017-12-13 23:46:27]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
148299 DEBUG [2017-12-13 23:46:27]  ==>  Preparing: UPDATE PERSION SET OTHERKEY = ? WHERE ID = ? 
148299 DEBUG [2017-12-13 23:46:27]  ==> Parameters: 2863337(Integer), 337(Integer)
148325 DEBUG [2017-12-13 23:46:27]  <==    Updates: 1
148325 DEBUG [2017-12-13 23:46:27]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ebe5b42]
148325 DEBUG [2017-12-13 23:46:27]  Returning JDBC Connection to DataSource
148325 INFO  [2017-12-13 23:46:27]  用户保存融云信息成功。注册用户ID为：337
148325 DEBUG [2017-12-13 23:46:27]  Creating a new SqlSession
148325 DEBUG [2017-12-13 23:46:27]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3977d830] was not registered for synchronization because synchronization is not active
148325 DEBUG [2017-12-13 23:46:27]  Fetching JDBC Connection from DataSource
148332 DEBUG [2017-12-13 23:46:27]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
148332 DEBUG [2017-12-13 23:46:27]  ==>  Preparing: SELECT P.ID, P.TEL, P.NICK_NAME, P.SEX, P.BIRTHDAY, P.SIGN, P.SUP_ABILITY, P.PHOTO_IDENT, P.VOICE_IDENT, P.VOICE_TIME_LENGTH, P.OTHERKEY, P.SMS_STATE, P.ALBUM, P.LOVE, P.`LEVEL`, (SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM, P.TOKEN, P.CAPITALBALANCE, P.PLAY_IDENT, P.PHOTO, (SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET, P.SMS_MONEY, P.VOICE_MONEY, P.VOICE_STATE, P.VIDEO_MONEY, P.VIDEO, P.AREA, P.VIDEO_STATE, P.RONGYUNTOKEN, P.USE_STATE, P.VERSION, P.ONLINE_DATE, P.IS_VIP, (SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE,PERSION F WHERE CARE.PERSION_ID = P.ID AND CARE.ACCEPT_ID = F.ID AND CARE.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = CARE.ACCEPT_ID)) AS CARESIZE, ( SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS, PERSION F WHERE FANS.ACCEPT_ID = P.ID AND FANS.PERSION_ID = F.ID AND FANS.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = FANS.ACCEPT_ID ) ) AS FANSSIZE, (SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID IN ( SELECT TEMPT.ACCEPT_ID FROM PASTE_RECORD TEMPT WHERE TEMPT.PERSION_ID = P.ID ) AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE FROM PERSION P WHERE P.ID = ? 
148333 DEBUG [2017-12-13 23:46:27]  ==> Parameters: 337(Integer)
148343 DEBUG [2017-12-13 23:46:27]  <==      Total: 1
148343 DEBUG [2017-12-13 23:46:27]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3977d830]
148343 DEBUG [2017-12-13 23:46:27]  Returning JDBC Connection to DataSource
148343 INFO  [2017-12-13 23:46:27]  返回结果com.honglu.quickcall.user.facade.exchange.response.UserThirdLoginResponse@1ffcc515[persion=com.honglu.quickcall.user.facade.entity.Persion@369fddd2,code=Default#Success,message=成功,object={result=com.honglu.quickcall.user.facade.entity.Persion@369fddd2},data=<null>,extFields={}]
149221 DEBUG [2017-12-13 23:46:28]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
162555 DEBUG [2017-12-13 23:46:41]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
175888 DEBUG [2017-12-13 23:46:55]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
182580 INFO  [2017-12-13 23:47:01]  ============================= userCenter is alive ! =======================================
189221 DEBUG [2017-12-13 23:47:08]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
195522 DEBUG [2017-12-13 23:47:14]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
195522 DEBUG [2017-12-13 23:47:14]  Creating a new SqlSession
195522 DEBUG [2017-12-13 23:47:14]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a030f2] was not registered for synchronization because synchronization is not active
195522 DEBUG [2017-12-13 23:47:14]  Fetching JDBC Connection from DataSource
195529 DEBUG [2017-12-13 23:47:14]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
195529 DEBUG [2017-12-13 23:47:14]  ==>  Preparing: SELECT P.TEL FROM PERSION P WHERE P.TEL = ? LIMIT 1 
195529 DEBUG [2017-12-13 23:47:14]  ==> Parameters: 11233213252(String)
195536 DEBUG [2017-12-13 23:47:14]  <==      Total: 1
195536 DEBUG [2017-12-13 23:47:14]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a030f2]
195536 DEBUG [2017-12-13 23:47:14]  Returning JDBC Connection to DataSource
195536 DEBUG [2017-12-13 23:47:14]  Creating a new SqlSession
195536 DEBUG [2017-12-13 23:47:14]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185ade4d] was not registered for synchronization because synchronization is not active
195536 WARN  [2017-12-13 23:47:14]  设置方法[Persion.relieve] use [WRITE] Strategy, SqlCommandType [UPDATE]..
195538 DEBUG [2017-12-13 23:47:14]  Fetching JDBC Connection from DataSource
195544 DEBUG [2017-12-13 23:47:14]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
195544 DEBUG [2017-12-13 23:47:14]  ==>  Preparing: UPDATE PERSION SET USE_STATE=1, FREEZE_TIME=NULL WHERE FREEZE_TIME IS NOT NULL AND FREEZE_TIME <= ? AND TEL = ? AND PWD = ? 
195544 DEBUG [2017-12-13 23:47:14]  ==> Parameters: 2017-12-13 23:47:14.866(Timestamp), 11233213252(String), 96e79218965eb72c92a549dd5a330112(String)
195558 DEBUG [2017-12-13 23:47:14]  <==    Updates: 0
195558 DEBUG [2017-12-13 23:47:14]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185ade4d]
195558 DEBUG [2017-12-13 23:47:14]  Returning JDBC Connection to DataSource
195558 DEBUG [2017-12-13 23:47:14]  Creating a new SqlSession
195558 DEBUG [2017-12-13 23:47:14]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9abfe2] was not registered for synchronization because synchronization is not active
195559 WARN  [2017-12-13 23:47:14]  设置方法[Persion.selectByLogin] use [READ] Strategy, SqlCommandType [SELECT]..
195559 DEBUG [2017-12-13 23:47:14]  Fetching JDBC Connection from DataSource
195559 DEBUG [2017-12-13 23:47:14]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
195559 DEBUG [2017-12-13 23:47:14]  ==>  Preparing: SELECT P.ID, P.TEL, P.NICK_NAME, P.SEX, P.BIRTHDAY, P.SIGN, P.SUP_ABILITY, P.LOGIN_TIME, P.VOICE_IDENT, P.VOICE_TIME_LENGTH, P.OTHERKEY, P.ALBUM, P.LOVE, P.`LEVEL`, (SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM, P.TOKEN, P.CAPITALBALANCE, P.PLAY_IDENT, P.PHOTO, (SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET, P.SMS_MONEY, P.VOICE_MONEY, P.VOICE_STATE, P.VIDEO_MONEY, P.AREA, P.VIDEO_STATE, P.RONGYUNTOKEN, P.USE_STATE, P.IS_VIP, (SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE WHERE CARE.PERSION_ID = P.ID) AS CARESIZE, (SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS WHERE FANS.ACCEPT_ID = P.ID) AS FANSSIZE, (SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID IN ( SELECT TEMPT.ACCEPT_ID FROM PASTE_RECORD TEMPT WHERE TEMPT.PERSION_ID = P.ID ) AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE FROM PERSION P WHERE 1 = 1 AND TEL = ? AND PWD = ? 
195559 DEBUG [2017-12-13 23:47:14]  ==> Parameters: 11233213252(String), 96e79218965eb72c92a549dd5a330112(String)
195568 DEBUG [2017-12-13 23:47:14]  <==      Total: 1
195568 DEBUG [2017-12-13 23:47:14]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9abfe2]
195568 DEBUG [2017-12-13 23:47:14]  Returning JDBC Connection to DataSource
195706 DEBUG [2017-12-13 23:47:15]  Creating a new SqlSession
195706 DEBUG [2017-12-13 23:47:15]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43c8d898] was not registered for synchronization because synchronization is not active
195706 DEBUG [2017-12-13 23:47:15]  Fetching JDBC Connection from DataSource
195706 DEBUG [2017-12-13 23:47:15]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
195706 DEBUG [2017-12-13 23:47:15]  ==>  Preparing: UPDATE PERSION SET LOGIN_TIME = ? WHERE ID = ? 
195706 DEBUG [2017-12-13 23:47:15]  ==> Parameters: 2017-12-13 23:47:15.036(Timestamp), 334(Integer)
195721 DEBUG [2017-12-13 23:47:15]  <==    Updates: 1
195721 DEBUG [2017-12-13 23:47:15]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43c8d898]
195721 DEBUG [2017-12-13 23:47:15]  Returning JDBC Connection to DataSource
195721 INFO  [2017-12-13 23:47:15]  返回结果com.honglu.quickcall.user.facade.exchange.response.UserLoginResponse@37896453[persion=com.honglu.quickcall.user.facade.entity.Persion@4a0ffda7,code=Default#Success,message=成功,object={result=com.honglu.quickcall.user.facade.entity.Persion@4a0ffda7},data=<null>,extFields={}]
202555 DEBUG [2017-12-13 23:47:21]  Got ping response for sessionid: 0x160445cfba10040 after 0ms
209015 DEBUG [2017-12-13 23:47:28]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 127.0.0.1
209016 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209016 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d84fae] was not registered for synchronization because synchronization is not active
209016 WARN  [2017-12-13 23:47:28]  设置方法[Persion.queryPersionByIdForIM] use [READ] Strategy, SqlCommandType [SELECT]..
209016 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209016 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
209016 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: SELECT P.ID, P.NICK_NAME, P.SEX, P.`LEVEL`, P.TOKEN, P.PLAY_IDENT, P.VIDEO, P.VOICE_MONEY, P.VOICE_STATE, P.VIDEO_STATE, P.VIDEO_MONEY, P.SMS_STATE, P.SMS_MONEY, P.CAPITALBALANCE, P.USE_STATE, P.VERSION, P.S_POSITION_X, P.S_POSITION_Y, P.LEVEL_VERSION, P.LOVE FROM PERSION P WHERE P.ID = ? 
209016 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 334(Integer)
209024 DEBUG [2017-12-13 23:47:28]  <==      Total: 1
209025 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d84fae]
209025 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
209025 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209025 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6822bf1e] was not registered for synchronization because synchronization is not active
209025 WARN  [2017-12-13 23:47:28]  设置方法[Persion.updateGender] use [WRITE] Strategy, SqlCommandType [UPDATE]..
209027 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209027 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
209027 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: UPDATE PERSION SET SEX = ? WHERE ID = ? 
209027 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 1(Integer), 334(Integer)
209042 DEBUG [2017-12-13 23:47:28]  <==    Updates: 1
209042 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6822bf1e]
209043 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
209046 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209047 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@803e206] was not registered for synchronization because synchronization is not active
209047 WARN  [2017-12-13 23:47:28]  设置方法[com.honglu.quickcall.user.service.dao.NoticeMapper.insertSelective] use [WRITE] Strategy, SqlCommandType [INSERT]..
209048 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209048 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
209049 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: insert into notice ( persion_id, create_date, state, title, content ) values ( ?, ?, ?, ?, ? ) 
209049 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 334(Integer), 2017-12-13 23:47:28.373(Timestamp), 2(Integer), 系统消息(String), java.io.StringReader@3cde4248(StringReader)
209065 DEBUG [2017-12-13 23:47:28]  <==    Updates: 1
209066 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@803e206]
209066 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
209066 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209066 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f391f5] was not registered for synchronization because synchronization is not active
209066 WARN  [2017-12-13 23:47:28]  设置方法[Persion.addPersionToken] use [WRITE] Strategy, SqlCommandType [UPDATE]..
209066 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209066 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
209066 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: UPDATE PERSION SET TOKEN = TOKEN + ?, VERSION = VERSION + 1 WHERE ID = ? AND VERSION = ? 
209067 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 1000(Integer), 334(Integer), 1(Integer)
209080 DEBUG [2017-12-13 23:47:28]  <==    Updates: 1
209080 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f391f5]
209080 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
209080 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209080 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b6ea617] was not registered for synchronization because synchronization is not active
209080 WARN  [2017-12-13 23:47:28]  设置方法[com.honglu.quickcall.user.service.dao.BalanceOfPaymentsMapper.addConsume] use [WRITE] Strategy, SqlCommandType [INSERT]..
209082 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209082 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6370013d] will not be managed by Spring
209083 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: INSERT INTO BALANCE_OF_PAYMENTS ( PERSION_ID, TYPE, TOKEN, CREATE_DATE, OTHER_ID ) values ( ?, ?, ?, ?, ? ) 
209083 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 334(Integer), 7(Integer), 1000(Integer), 2017-12-13 23:47:28.41(Timestamp), 334(Integer)
209097 DEBUG [2017-12-13 23:47:28]  <==    Updates: 1
209097 WARN  [2017-12-13 23:47:28]  设置方法[com.honglu.quickcall.user.service.dao.BalanceOfPaymentsMapper.addConsume!selectKey] use [WRITE] Strategy, SqlCommandType [SELECT]..
209097 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: SELECT LAST_INSERT_ID() AS ID 
209097 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 
209104 DEBUG [2017-12-13 23:47:28]  <==      Total: 1
209104 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b6ea617]
209104 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
209104 INFO  [2017-12-13 23:47:28]  新注册用户ID为：334赠送金豆成功
209104 DEBUG [2017-12-13 23:47:28]  Creating a new SqlSession
209104 DEBUG [2017-12-13 23:47:28]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43620bc2] was not registered for synchronization because synchronization is not active
209104 DEBUG [2017-12-13 23:47:28]  Fetching JDBC Connection from DataSource
209104 DEBUG [2017-12-13 23:47:28]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@6d10cf4f] will not be managed by Spring
209104 DEBUG [2017-12-13 23:47:28]  ==>  Preparing: SELECT P.ID, P.TEL, P.NICK_NAME, P.SEX, P.BIRTHDAY, P.SIGN, P.SUP_ABILITY, P.PHOTO_IDENT, P.VOICE_IDENT, P.VOICE_TIME_LENGTH, P.OTHERKEY, P.SMS_STATE, P.ALBUM, P.LOVE, P.`LEVEL`, (SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM, P.TOKEN, P.CAPITALBALANCE, P.PLAY_IDENT, P.PHOTO, (SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET, P.SMS_MONEY, P.VOICE_MONEY, P.VOICE_STATE, P.VIDEO_MONEY, P.VIDEO, P.AREA, P.VIDEO_STATE, P.RONGYUNTOKEN, P.USE_STATE, P.VERSION, P.ONLINE_DATE, P.IS_VIP, (SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE,PERSION F WHERE CARE.PERSION_ID = P.ID AND CARE.ACCEPT_ID = F.ID AND CARE.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = CARE.ACCEPT_ID)) AS CARESIZE, ( SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS, PERSION F WHERE FANS.ACCEPT_ID = P.ID AND FANS.PERSION_ID = F.ID AND FANS.PERSION_ID NOT IN ( SELECT PPP.ACCEPT_ID FROM PASTE_RECORD PPP WHERE PPP.PERSION_ID = FANS.ACCEPT_ID ) ) AS FANSSIZE, (SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID IN ( SELECT TEMPT.ACCEPT_ID FROM PASTE_RECORD TEMPT WHERE TEMPT.PERSION_ID = P.ID ) AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE FROM PERSION P WHERE P.ID = ? 
209105 DEBUG [2017-12-13 23:47:28]  ==> Parameters: 334(Integer)
209114 DEBUG [2017-12-13 23:47:28]  <==      Total: 1
209114 DEBUG [2017-12-13 23:47:28]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43620bc2]
209114 DEBUG [2017-12-13 23:47:28]  Returning JDBC Connection to DataSource
