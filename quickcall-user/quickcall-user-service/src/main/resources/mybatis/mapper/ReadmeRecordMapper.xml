<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglu.quickcall.user.service.dao.ReadmeRecordMapper">
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.ReadmeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="persion_id" jdbcType="INTEGER" property="persionId" />
    <result column="other_id" jdbcType="INTEGER" property="otherId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="photo" jdbcType="VARCHAR" property="portrait" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, persion_id, other_id, update_date, is_read
  </sql>
  <!-- 根据用户id查询访客-->
  <select id="selectByPersionId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    readme_record.id, persion_id, other_id, update_date, is_read,nick_name,photo,sex
    from readme_record  
    INNER JOIN (select id,nick_name,photo,sex from persion where sex=1 or (sex=2 and play_ident=3)) persion
    on readme_record.other_id=persion.id
    where persion_id = #{id,jdbcType=INTEGER}
    order by update_date desc
    limit #{begin,jdbcType=INTEGER},#{last,jdbcType=INTEGER}
  </select>
  
  <select id="selectUnReadAmount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    count(*)
    from readme_record  
    INNER JOIN (select id,nick_name,photo,sex from persion where sex=1 or (sex=2 and play_ident=3)) persion
    on readme_record.other_id=persion.id
    where persion_id = #{persion_id,jdbcType=INTEGER}
 	and is_read=2
  </select>
  
  <!-- 根据用户id查询访客最新的一条记录-->
  <select id="selectByPersionIdlimit1" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    readme_record.id, persion_id, other_id, update_date, is_read,nick_name,photo,sex
    from readme_record  
    INNER JOIN (select id,nick_name,photo,sex from persion where sex=1 or (sex=2 and play_ident=3)) persion
    on readme_record.other_id=persion.id
    where persion_id = #{id,jdbcType=INTEGER}
    order by update_date desc
    limit 1
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from readme_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from readme_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.ReadmeRecord">
    insert into readme_record (id, persion_id, other_id, 
      update_date, is_read)
    values (#{id,jdbcType=INTEGER}, #{persionId,jdbcType=INTEGER}, #{otherId,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{isRead,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.user.facade.entity.ReadmeRecord">
    insert into readme_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="persionId != null">
        persion_id,
      </if>
      <if test="otherId != null">
        other_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="persionId != null">
        #{persionId,jdbcType=INTEGER},
      </if>
      <if test="otherId != null">
        #{otherId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.user.facade.entity.ReadmeRecord">
    update readme_record
    <set>
      <if test="persionId != null">
        persion_id = #{persionId,jdbcType=INTEGER},
      </if>
      <if test="otherId != null">
        other_id = #{otherId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.user.facade.entity.ReadmeRecord">
    update readme_record
    set persion_id = #{persionId,jdbcType=INTEGER},
      other_id = #{otherId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_read = #{isRead,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <update id="updateIsReadByids" >
    update readme_record
    set 
      is_read = 1
    where id in
    <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
              #{id}                             
    </foreach> 
  </update>
</mapper>