<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Persion">
	<delete id="delete" parameterType="Integer">
		DELETE FROM PERSION WHERE ID=#{id}
	</delete>
	<!-- 离线 -->
	<update id="loginOut" parameterType="Integer">
		UPDATE PERSION SET LOGIN_TIME = NULL,imstate=4 WHERE ID=#{pid}
	</update>
	
	<!--根据用户id获取分成比例 -->
	<select id="selectByPersionId" resultType="Persion" parameterType="Map">
		SELECT
			P.ID,
			P.PHOTO,
			P.NICK_NAME,
			P.SEX,
			P.SIGN,
			P.LEVEL,
			P.love,
			PR.proportion as proportion
		FROM
			PERSION P inner join profit pr
			on P.level=pr.level		
		WHERE
			P.ID = #{persion_id,jdbcType=INTEGER}
  	</select>
  	
  	
  	<select id="selectNewManRank" resultType="Persion">
		SELECT
			P.ID,
			P.PHOTO,
			P.NICK_NAME,
			P.SEX,
			P.SIGN,
			P.LEVEL,
			P.love,
			P.rongyuntoken,
			P.birthday
		FROM
			PERSION P 
			inner join user_account on 	P.id=user_account.user_id
		WHERE
			P.SEX=1
			and TO_DAYS( NOW( ) ) =TO_DAYS(create_date)
			order by imstate,user_account.unlocked_amt desc
			limit #{begin,jdbcType=INTEGER},#{last,jdbcType=INTEGER}
  	</select>
  	
  	<!--根据用户id获取分成比例 -->
	<select id="selectNickNameByKey" resultType="Persion" >
		SELECT
			P.ID,
			P.PHOTO,
			P.NICK_NAME,
			P.SEX
		FROM
			PERSION P 	
		WHERE
			P.ID = #{id,jdbcType=INTEGER}
  	</select>

	<select id="selectPersionByTelAndPwd" resultType="Persion" parameterType="Map">
		SELECT
			*
		FROM persion p
		where 1=1
		and p.pwd = #{pwd}
		and p.tel = #{tel}
	</select>

	<select id="selectByPortionPersionInfo" resultType="Persion" parameterType="Map">
		SELECT
			P.ID,
			P.PHOTO,
			P.NICK_NAME,
			P.SEX
		FROM
			PERSION P 	
		WHERE
			P.ID = #{persion_id,jdbcType=INTEGER}
  	</select>

	<select id="selectSimplePersionById" parameterType="Map" resultType="Persion">
		SELECT * FROM PERSION WHERE ID = #{persion}
	</select>

	
	<!-- 根据id查询信息 -->
	<select id="selectByKey" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
		    P.opend_id,
			P.imstate,
			P.ID,
			P.TEL,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.SIGN,
			P.SUP_ABILITY,
			P.PHOTO_IDENT,
			P.VOICE_IDENT,
			P.VOICE_TIME_LENGTH,
			P.OTHERKEY,
			P.SMS_STATE,
			P.ALBUM,
			P.LOVE,
			P.COMPANY_ID,
			P.`LEVEL`,
			A.account as zfbAccount,
			<!-- (SELECT album FROM verify  WHERE pid = #{id,jdbcType=INTEGER}) AS vAlbum, -->
			V.album as vAlbum,
			V.NICK_NAME as vNickName,
			V.sign as vSign,
			P.thumbnails as vPhoto,
			V.voice as VVoice,
			V.voice_time_length as VVoice_time_length,
			<!-- (SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM, -->
			<!-- P.TOKEN, -->
			U.asset_value as TOKEN,
			U.asset_value as CAPITALBALANCE,
			<!-- P.CAPITALBALANCE, -->
			P.PLAY_IDENT,
			P.PHOTO,
			(SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET,
			P.SMS_MONEY,
			P.VOICE_MONEY,
			P.VOICE_STATE,
			P.VIDEO_MONEY,
			P.VIDEO,
			P.AREA,
			P.VIDEO_STATE,
			P.RONGYUNTOKEN,
			P.USE_STATE,
			P.VERSION,
			P.ONLINE_DATE,
			P.IS_VIP,
			(SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE,PERSION F WHERE CARE.PERSION_ID = P.ID AND CARE.ACCEPT_ID = F.ID AND CARE.is_attention = 1) AS CARESIZE,
			(
			SELECT
				COUNT(FANS.PERSION_ID)
			FROM
				PASTE_RECORD FANS,
				PERSION F
			WHERE
				FANS.ACCEPT_ID = P.ID
			AND FANS.PERSION_ID = F.ID
			AND FANS.is_attention = 1
			) AS FANSSIZE,
			(SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID 
			IN (
				SELECT
					TEMPT.ACCEPT_ID
				FROM
					PASTE_RECORD TEMPT
				WHERE
					TEMPT.PERSION_ID = P.ID
			)
			AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE
		FROM
			PERSION P
			inner join user_account U			
			on P.id=U.user_id
			left join verify  V	
			on P.id=V.pid
			left join aliacount A
			on P.id=A.persion_id
		WHERE
			P.ID = #{id,jdbcType=INTEGER}
  	</select>
  	
	<!-- 根据id查询别人的信息 -->
	<select id="selectByKeyForOther" resultType="Persion" parameterType="Map">
		SELECT
			P.ID,
			P.PHOTO,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.SIGN,
			P.SUP_ABILITY,
			P.PLAY_IDENT,
			P.VOICE_IDENT,
			P.VOICE_TIME_LENGTH,
			P.SMS_MONEY,
			P.VOICE_MONEY,
			P.VOICE_STATE,
			P.VIDEO_MONEY,
			P.VIDEO_STATE,
			P.`LEVEL`,
			P.OTHERKEY,
			P.ALBUM,
			P.AREA,
			P.USE_STATE,
			P.SMS_STATE,
			P.imstate,
			PR.ID AS isLike,
			B.ID AS ISBLACK,
			BB.ID AS ISBLACKED
			<!-- (SELECT SUM(TIMESTAMPDIFF(HOUR,B.CREATE_DATE,B.FINISH_DATE)) FROM BALANCE_OF_PAYMENTS B WHERE B.TYPE IN (2,3) AND B.OTHER_ID = P.ID) AS CALLSUM -->
		FROM
			PERSION P
		LEFT JOIN 
			BLACK B ON B.OTHER_ID = P.ID
		AND 
			B.PERSION_ID = #{self_id,jdbcType=INTEGER}
		LEFT JOIN 
			BLACK BB ON BB.PERSION_ID = P.ID
		AND 
			BB.OTHER_ID = #{self_id,jdbcType=INTEGER}
		LEFT JOIN 
			PASTE_RECORD PR ON PR.ACCEPT_ID = P.ID
		AND 
			PR.PERSION_ID = #{self_id,jdbcType=INTEGER}
		AND
			PR.is_attention = 1
		WHERE
			P.ID = #{other_id,jdbcType=INTEGER}
  	</select>
  	<!-- 第三方登录 -->
  	<select id="selectByThirdLogin" parameterType="Persion" resultType="Persion">
  		SELECT 
  			P.* 
  		FROM 
  			PERSION P
  		WHERE
  			<if test="third_login!=null and third_login!=''">
  				p.third_login = #{third_login}
  			</if>
  	</select>
  	<!-- 添加persion表信息   这个SQL会返回插入的id值 -->
	<insert id="insert" parameterType="Persion" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO PERSION
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tel != null">
				TEL,
      		</if>
			<if test="pwd != null">
				PWD,
      		</if>
			<if test="nick_name != null">
				NICK_NAME,
      		</if>
			<if test="sex != null">
				SEX,
      		</if>
			<if test="birthday != null">
				BIRTHDAY,
      		</if>
			<if test="area != null">
				area,
      		</if>
			<if test="photo != null and photo!=''">
				PHOTO,
      		</if>
      		<if test="sign != null and sign!=''">
				SIGN,
      		</if>
			<if test="create_date != null">
				CREATE_DATE,
      		</if>
      		<if test="login_time != null">
				LOGIN_TIME,
      		</if>
      		<if test="third_login != null">
				THIRD_LOGIN,
      		</if>
      		<if test="otherkey != null">
      			OTHERKEY,
      		</if>
      		<if test="opend_id != null and opend_id != ''">
				opend_id,
      		</if>
      		<if test="is_essence != null and is_essence != ''">
				is_essence,
      		</if>
      		<if test="comment != null and comment != ''">
				comment,
      		</if>
      		<if test="company_id != null and company_id != ''">
				company_id,
      		</if>
      		<if test="device_no!=null and device_no!=''">
      		   device_no,
      		</if>
      		<if test="app_channel_name!=null and app_channel_name!=''">
      		   app_channel_name,
      		</if>
			</trim>
			<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
      		</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
      		</if>
			<if test="nick_name != null">
				#{nick_name,jdbcType=VARCHAR},
      		</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
      		</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
      		</if>
			<if test="area != null">
				#{area,jdbcType=VARCHAR},
      		</if>
			<if test="photo != null and photo!=''">
				#{photo,jdbcType=VARCHAR},
      		</if>
      		<if test="sign != null and sign!=''">
				#{sign,jdbcType=VARCHAR},
      		</if>
			<if test="create_date != null">
				#{create_date,jdbcType=TIMESTAMP},
      		</if>
      		<if test="login_time != null">
				#{login_time},
      		</if>
      		<if test="third_login != null">
				#{third_login},
      		</if>
      		<if test="otherkey != null">
      			#{otherkey},
      		</if>
      		<if test="opend_id != null and opend_id != ''">
				#{opend_id},
      		</if>
      		<if test="is_essence != null and is_essence != ''">
				#{is_essence},
      		</if>
      		<if test="comment != null and comment != ''">
				#{comment},
      		</if>
      		<if test="company_id != null and company_id != ''">
				#{company_id},
      		</if>
      		<if test="device_no!=null and device_no!=''">
      		   #{device_no},
      		</if>
      		<if test="app_channel_name!=null and app_channel_name!=''">
      		   #{app_channel_name},
      		</if>
		</trim>
	</insert>
	
	<!-- 更新persion表信息 -->
	<update id="updateIdent" parameterType="Persion">
		UPDATE PERSION
		<set>
			<if test="video != null">
				VIDEO = NULL,
      		</if>
			<if test="video_ident != null and video_ident != 0">
				VIDEO_IDENT = #{video_ident,jdbcType=INTEGER},
      		</if>
		</set>
		WHERE
			ID = #{id}	
	</update>
	
	<!-- 选择性别 -->
	<update id="updateGender" parameterType="Persion">
		UPDATE PERSION
		<set>
			<if test="sex != null and sex != 0">
				SEX = #{sex},
      		</if>
      		<if test="photo != null and photo!=''">
				photo = #{photo},
      		</if>
      		<if test="birthday!=null and birthday!=''">
      		    birthday=#{birthday},
      		</if>
      		<if test="imstate!=null and imstate!=0">
      		    imstate=#{imstate},
      		</if>
      		 <if test="sex==1">
      		voice_state=1 , video_state=1
      		</if> 
		</set>
		WHERE
			ID = #{id}	
	</update>
	
	<!-- 更新persion表信息 -->
	<update id="update" parameterType="Persion">
		UPDATE PERSION
		<set>
			<if test="tel != null">
				TEL = #{tel,jdbcType=VARCHAR},
      		</if>
			<if test="pwd != null and pwd !='' ">
				PWD = #{pwd,jdbcType=VARCHAR},
      		</if>
			<if test="nick_name != null and nick_name != '(null)' and nick_name != ''">
				NICK_NAME = #{nick_name,jdbcType=VARCHAR},
      		</if>
			<if test="sex != null and sex!=0">
				SEX = #{sex,jdbcType=INTEGER},
      		</if>
			<if test="birthday != null and birthday != '(null)' and birthday != ''">
				BIRTHDAY = #{birthday,jdbcType=VARCHAR},
      		</if>
			<if test="area != null and area != '(null)' and area != ''">
				AREA = #{area,jdbcType=VARCHAR},
      		</if>
			<if test="photo != null and photo != (null) and photo != ''">
				PHOTO = #{photo,jdbcType=VARCHAR},
      		</if>
			<if test="photo_ident != null">
				PHOTO_IDENT = #{photo_ident,jdbcType=VARCHAR},
      		</if>
			<if test="voice_ident != null">
				VOICE_IDENT = #{voice_ident,jdbcType=VARCHAR},
      		</if>
			<if test="video != null and video !='' and video != '(null)'">
				VIDEO = #{video,jdbcType=VARCHAR},
      		</if>
			<if test="sup_ability != null and sup_ability != '' and sup_ability  != '(null)'">
				SUP_ABILITY = #{sup_ability,jdbcType=VARCHAR},
      		</if>
			<if test="sign != null and sign !='(null)'">
				SIGN = #{sign,jdbcType=VARCHAR},
      		</if>
			<if test="love != null and love!=0">
				LOVE = #{love,jdbcType=INTEGER},
      		</if>
			<if test="play_ident != null and play_ident != 0">
				PLAY_IDENT = #{play_ident,jdbcType=INTEGER},
      		</if>
			<if test="use_state != null and use_state!=0">
				USE_STATE = #{use_state,jdbcType=INTEGER},
      		</if>
			<if test="voice_state != null and voice_state!=0">
				VOICE_STATE = #{voice_state,jdbcType=INTEGER},
      		</if>
			<if test="create_date != null">
				CREATE_DATE = #{create_date,jdbcType=TIMESTAMP},
      		</if>
			<if test="freeze_time != null">
				FREEZE_TIME = #{freeze_time,jdbcType=TIMESTAMP},
      		</if>
			<if test="album != null">
				ALBUM = #{album,jdbcType=VARCHAR},
      		</if>
      		<if test="album == ''">
				ALBUM = NULL,
      		</if>
      		<if test="login_time != null">
				LOGIN_TIME = #{login_time,jdbcType=TIMESTAMP},
      		</if>
      		<if test="third_login != null and third_login != '' and third_login != '(null)'">
				THIRD_LOGIN = #{third_login},
      		</if>
      		<if test=" sms_state != null and sms_state!=0">
				SMS_STATE = #{sms_state},
      		</if>
      		<if test="sms_money != null">
				SMS_MONEY = #{sms_money},
      		</if>   
      		<if test="video_money != null">
				VIDEO_MONEY = #{video_money},
      		</if>   		
      		<if test="voice_money != null">
				VOICE_MONEY = #{voice_money},
      		</if> 
      		<if test="voice_time_length != null">
				VOICE_TIME_LENGTH = #{voice_time_length},
      		</if>
      		<if test="voice_time_length!=null and voice_time_length!=0">
      			VOICE_TIME_LENGTH = #{voice_time_length},
      		</if>
      		<if test="thumbnails!=null and thumbnails!='' and thumbnails != '(null)'">
      			THUMBNAILS = #{thumbnails},
      		</if>
      		<if test="rongyuntoken != null and rongyuntoken != '' and rongyuntoken != '(null)'">
      			RONGYUNTOKEN = #{rongyuntoken},
      		</if>
      		<if test="identAgain != null and identAgain != 0">
      			IDENTAGAIN = #{identAgain},
      		</if>
      		<if test="otherkey != null and otherkey != ''">
      			OTHERKEY = #{otherkey},
      		</if>
      		<if test="online_date != null">
      			ONLINE_DATE = #{online_date},
      		</if>
      		<if test="is_vip != null and is_vip != ''">
      			IS_VIP = #{is_vip},
      		</if>
      		<if test="is_nicemeet != null">
      			IS_NICEMEET = #{is_nicemeet},
      		</if>
			<if test="pair_push_url != null">
				pair_push_url = #{pair_push_url},
			</if>
			<if test="pair_live_url != null">
				pair_live_url = #{pair_live_url},
			</if>
			<if test="imstate!=null and imstate!=0">
			imstate=#{imstate}
			</if>
		</set>
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	
	
	<!-- 更新persion表信息 -->
	<update id="updateAlbum" parameterType="Persion">
		UPDATE PERSION
		<set>
      		<if test="album != '' and album != null">
				album = #{album,jdbcType=VARCHAR},
      		</if>
      		<if test="album == ''">
				album = NULL,
      		</if>
		</set>
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 增加用户的金币 fro wwq -->
	<update id="addPersionToken" parameterType="Persion">
		UPDATE 
			PERSION 
		SET 
			TOKEN = TOKEN + #{token},
			VERSION = VERSION + 1
		WHERE 
			ID = #{id}
		AND
			VERSION = #{version}
	</update>
	
	
	<!-- 根据用户编号修改账户资金(增加)，回复率，魅力值(增加)信息 -->
	<update id="addCapitalBalance" parameterType="Persion">
		update persion set capitalBalance=capitalBalance+#{capitalBalance} 
		<if test="rate!=null and rate!=''">
			,rate=#{rate}
		</if>
		where id=#{id}
	</update>
	<!-- zp  解封-->
	<update id="relieve" parameterType="Persion">
		UPDATE 
			PERSION 
		SET 
			USE_STATE=1,
			FREEZE_TIME=NULL 
		WHERE 
			FREEZE_TIME IS NOT NULL
		AND
			FREEZE_TIME &lt;= #{freeze_time} 
		<if test="tel != null and tel != '' and pwd != null and pwd != ''">
		AND 
			TEL = #{tel} 
		AND 
			PWD = #{pwd}
		</if>
		<if test="third_login != null and third_login != ''">
		AND
			THIRD_LOGIN = #{third_login}
		</if>
	</update>
	<!-- 用户登录 -->
	<select id="selectByLogin" parameterType="Persion" resultType="Persion">
		SELECT 
			P.ID,
			P.TEL,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.SIGN,
			P.SUP_ABILITY,
			P.LOGIN_TIME,
			P.VOICE_IDENT,
			P.VOICE_TIME_LENGTH,
			P.OTHERKEY,
			P.ALBUM,
			P.LOVE,
			P.`LEVEL`,
			P.freeze_time,
			P.create_date,
			(SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM,
			P.TOKEN,
			P.CAPITALBALANCE,
			P.PLAY_IDENT,
			P.PHOTO,
			(SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET,
			P.SMS_MONEY,
			P.VOICE_MONEY,
			P.VOICE_STATE,
			P.VIDEO_MONEY,
			P.AREA,
			P.VIDEO_STATE,
			P.RONGYUNTOKEN,
			P.USE_STATE,
			P.IS_VIP,
			(SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE WHERE CARE.PERSION_ID = P.ID) AS CARESIZE,
			(SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS WHERE FANS.ACCEPT_ID = P.ID) AS FANSSIZE,
			(SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID 
			IN (
				SELECT
					TEMPT.ACCEPT_ID
				FROM
					PASTE_RECORD TEMPT
				WHERE
					TEMPT.PERSION_ID = P.ID
			)
			AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE
			FROM PERSION P 
		WHERE
			1 = 1
		<if test="tel != null and tel != ''">
		AND 
			TEL = #{tel} 
		
		</if>
		<if test="pwd != null and pwd != ''">
		AND 
			pwd = #{pwd} 
		
		</if>
		
	</select>
	<!-- zp -->
	<select id="selectCountByTel" parameterType="String" resultType="Integer">
		select count(1) from persion where tel = #{tel}
	</select>

	<select id="selectPersionByTel" parameterType="String" resultType="Persion">
		select * from persion where tel = #{tel}
	</select>
	
	<select id="selectIdsByTels" parameterType="String" resultType="Persion">
		select id from persion where tel in
		<foreach collection="array" item="tel" index="index" open="(" close=")" separator=",">
			#{tel}
		</foreach>
	</select>

	<!-- 修改密码，通过电话 -->
	<update id="updateByTel" parameterType="Persion">
		UPDATE PERSION SET PWD = #{pwd} WHERE TEL = #{tel}
	</update>
	
	<!-- 首页列表全展示 -->
	<select id="persion_query" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.AREA,
			P.PHOTO,
			P.VIDEO_MONEY,
			P.VOICE_MONEY,
			P.VIDEO_STATE,
			p.VOICE_STATE,
			P.IMSTATE,
			P.SIGN,
			P.PLAY_IDENT,
			P.LEVEL

			FROM
			PERSION P

			WHERE
			P.USE_STATE = 1 <!-- 不禁用 -->
			<if test="type != null and type == 2">   <!-- 新人条件 认证不超过7天-->
				AND
				TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,#{current_date}) <![CDATA[ <= ]]> 7
			</if>

			and not exists(
				select '' from black b where b.other_id = p.id and b.persion_id = #{id}
			)

			AND
				P.PLAY_IDENT = 3
			AND
				P.SEX = 2
			AND
				P.ID != #{id}
			AND
				P.index_desc > 0

			<if test="app_channel_name != null and app_channel_name != ''" >
				AND p.app_channel_name = #{app_channel_name}
			</if>

			ORDER BY
				P.IMSTATE ASC,
				p.index_desc desc,
				P.LEVEL DESC,
				P.love desc,
				p.create_date desc
		  LIMIT #{begin},#{last}
	</select>

	<select id="persion_query_count" parameterType="Map" resultType="int">
		SELECT
			count(1)
		FROM
			PERSION P

		WHERE
		P.USE_STATE = 1 <!-- 不禁用 -->
		<if test="type != null and type == 2">   <!-- 新人条件 认证不超过7天-->
			AND
			TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,#{current_date}) <![CDATA[ <= ]]> 7
		</if>

		and not exists(
			select '' from black b where b.other_id = p.id and b.persion_id = #{id}
		)

		AND
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2
		AND
			P.ID != #{id}
		AND
			P.index_desc > 0
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND p.app_channel_name = #{app_channel_name}
		</if>
	</select>

	<!-- 首页空闲女神用户 -->
	<select id="persion_free_query" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.AREA,
			P.PHOTO,
			P.VIDEO_MONEY,
			P.VOICE_MONEY,
			P.VIDEO_STATE,
			p.VOICE_STATE,
			P.IMSTATE,
			P.SIGN,
			P.PLAY_IDENT,
			P.LEVEL
		FROM
			PERSION P

		WHERE
			P.USE_STATE = 1
		<if test="type != null and type == 2">   <!-- 新人条件 认证不超过7天-->
			AND
			TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,#{current_date}) <![CDATA[ <= ]]> 7
		</if>
		and not exists(
			select '' from black b where b.other_id = p.id and b.persion_id = #{id}
		)
		AND
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2
		AND
			P.ID != #{id}
		AND
			P.index_desc > 0
		AND
			P.IMSTATE = 1
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND p.app_channel_name = #{app_channel_name}
		</if>
		ORDER BY
			p.index_desc desc,
			P.LEVEL DESC,
			P.love desc,
			p.create_date desc
		LIMIT #{begin},#{last}
	</select>

	<!-- 查询出 空闲女神/优先级=0 的女神列表(获取候补人员列表) -->
	<select id="query_wait_list" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.AREA,
			P.PHOTO,
			P.VIDEO_MONEY,
			P.VOICE_MONEY,
			P.VIDEO_STATE,
			p.VOICE_STATE,
			P.IMSTATE,
			P.SIGN,
			P.PLAY_IDENT,
			P.LEVEL
		FROM
			PERSION P
		WHERE
			P.USE_STATE = 1
		<if test="type != null and type == 2">   <!-- 新人条件 认证不超过7天-->
			AND TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,#{current_date}) <![CDATA[ <= ]]> 7
		</if>

		and not exists(
			select '' from black b where b.other_id = p.id and b.persion_id = #{id}
		)

		AND
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2
		AND
			P.ID != #{id}
		AND
			P.index_desc = 0
		AND
			P.IMSTATE = 1
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND p.app_channel_name = #{app_channel_name}
		</if>
		ORDER BY
			p.index_desc desc,
			P.LEVEL DESC,
			P.love desc,
			p.create_date desc

		LIMIT #{begin},#{last}
	</select>

	<!-- 查询出 非空闲女神/ 优先级>0 的女神列表 -->
	<select id="query_inadditionfree_list" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.AREA,
			P.PHOTO,
			P.VIDEO_MONEY,
			P.VOICE_MONEY,
			P.VIDEO_STATE,
			p.VOICE_STATE,
			P.IMSTATE,
			P.SIGN,
			B.ID AS ISBLACK
		FROM
			PERSION P
		LEFT JOIN
			BLACK B ON B.OTHER_ID = P.ID
		AND
			B.PERSION_ID = #{id}
		WHERE
			P.USE_STATE = 1
		<if test="type != null and type == 2">   <!-- 新人条件 认证不超过7天-->
			AND TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,#{current_date}) <![CDATA[ <= ]]> 7
		</if>

		AND
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2
		AND
			P.ID != #{id}
		AND
			P.index_desc > 0
		AND
			P.IMSTATE != 1
		AND
			P.index_desc > 0

		<if test="app_channel_name != null and app_channel_name != ''" >
			AND p.app_channel_name = #{app_channel_name}
		</if>
		ORDER BY
			p.index_desc desc,
			P.LEVEL DESC,
			P.love desc,
			p.create_date desc

		LIMIT #{begin},#{last}
	</select>

	
	<!-- 置顶之前判断用户操作间隔是否大于5分钟 -->
	<select id="beforeMyTop" parameterType="Map" resultType="Integer">
		SELECT
			COUNT(P.ID)
		FROM
			PERSION P 
		WHERE
			P.ID = #{id}
		AND<!-- 大于5分钟才能查出用户 如果index_time字段为null,则证明用户从来没有置顶过 -->
			IFNULL(TIMESTAMPDIFF(MINUTE,P.INDEX_TIME,#{current_date}),6) > 5
	</select>
	
	<!-- 我要置顶 -->
	<update id="myTop" parameterType="Map" >
		UPDATE
			PERSION
		SET
			INDEX_DESC = (SELECT INDEX_DESC FROM (SELECT MAX(INDEX_DESC) AS INDEX_DESC  FROM PERSION) P) + 1,
			INDEX_TIME = #{date,jdbcType=TIMESTAMP}
		WHERE
			ID = #{id}
		AND
			PLAY_IDENT = 3
	</update>
	<!-- 首页根据兴趣主题查询用户 -->
	<select id="sup" parameterType="Map" resultType="Persion">
		SELECT 
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.AREA,
			P.PHOTO,
			P.VIDEO_MONEY,
			P.IMSTATE
		FROM
			PERSION P 
		WHERE 
			P.USE_STATE = 1
		AND
			P.PLAY_IDENT = 3
		AND
			P.ID != #{id}
		<if test="sup_ability != '' and sup_ability != null">
		AND 
			P.SUP_ABILITY LIKE CONCAT("%",#{sup_ability},"%") 
		</if>
		ORDER BY
		<if test="lover != 1">
			P.`LEVEL` DESC ,P.LOGIN_TIME  DESC
		</if>
		LIMIT 
			#{begin},#{last}
	</select>
	
	
	
	
	<!-- 排行榜开始 -->
	
	<!-- 新秀榜 -->
  	<select id="rookie" parameterType="map" resultType="Persion">
  		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.CREATE_DATE AS CREATE_DATE,
			P.IMSTATE,
			P.BIRTHDAY,
		    SUM(B.CAPITAL) AS CAPITALBALANCE
		    FROM
			PERSION P INNER JOIN
            BALANCE_OF_PAYMENTS B
		   WHERE
			P.PLAY_IDENT = 3
		AND 
		    P.ID = B.OTHER_ID
		AND
			P.SEX = 2
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>
		<if test="audit_state != null and audit_state != ''" >
			AND p.audit_state = #{audit_state}
		</if>
		AND
			 p.ident_pass_datetime <![CDATA[ >= ]]>   CURDATE()-7
	    group by P.ID
		ORDER BY
			P.CAPITALBALANCE DESC
			LIMIT 0,100
	</select>
	<!-- 新秀榜 我的排行 -->
	<select id="listByRookieRanking" resultType="Persion" parameterType="java.lang.Integer">
			SELECT
			F.RANKING,
			F.ID AS SELF_VALUE
		FROM
		(SELECT
			(@ROWNUM:=@ROWNUM+1) AS RANKING,
			P.ID
			FROM
				(SELECT @ROWNUM:= 0) R,
         SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
			PERSION P INNER JOIN
          BALANCE_OF_PAYMENTS B
		WHERE
           P.ID = B.OTHER_ID AND
				P.PLAY_IDENT = 3
			AND
				P.SEX = 2
			AND
			    p.ident_pass_datetime <![CDATA[ >= ]]>   CURDATE()-7
			    group by P.ID
			ORDER BY
			P.CAPITALBALANCE DESC) AS F
		WHERE
			F.ID = #{id}
	</select>

	<!-- 新秀榜 我的排行 分页 -->
	<select id="listByRookieRankingPage" resultType="Persion" parameterType="map">
		SELECT
		F.RANKING,
		F.ID AS SELF_VALUE
		FROM
		(SELECT
		(@ROWNUM:=@ROWNUM+1) AS RANKING,
		P.ID
		FROM
		(SELECT @ROWNUM:= 0) R,
        SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
		PERSION P INNER JOIN
         BALANCE_OF_PAYMENTS B
		WHERE
          P.ID = B.OTHER_ID AND
		P.PLAY_IDENT = 3
		AND
		P.SEX = 2
		AND
		TIMESTAMPDIFF(DAY,P.IDENT_PASS_DATETIME,NOW()) <![CDATA[ <= ]]> 7
		group by P.ID
		ORDER BY
		P.CAPITALBALANCE DESC) AS F
		WHERE
		F.ID = #{id}
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>

	<!-- 人气榜  本日-->
	<select id="popularityByDay" parameterType="map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.BIRTHDAY,
			P.IMSTATE,
			IFNULL(SUM(TIMESTAMPDIFF(
					MINUTE,
					B.CREATE_DATE,
					B.FINISH_DATE
				))
				,
				0
			) AS LONGTIME
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		AND 
			TO_DAYS(B.CREATE_DATE) = TO_DAYS(NOW())
		AND
			B.TYPE IN (2,3)
		GROUP BY
			P.ID 
		HAVING
			LONGTIME <![CDATA[ > ]]> 1
		ORDER BY LONGTIME DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 人气榜我的排名 日榜 -->
	<select id="listByPopularityDay" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.LONGTIME AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.LONGTIME
		FROM
			(
				SELECT
					P.ID,
					SUM(TIMESTAMPDIFF(
						MINUTE,
						BOF.CREATE_DATE,
						BOF.FINISH_DATE
					))AS LONGTIME
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.ID = BOF.OTHER_ID
				AND 
					TO_DAYS(BOF.CREATE_DATE) = TO_DAYS(NOW())
				AND
					BOF.TYPE IN (2,3)
				GROUP BY
					P.ID
				HAVING
					LONGTIME <![CDATA[ > ]]> 1
				ORDER BY
					LONGTIME DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 人气榜  本周-->
	<select id="popularityByWeek" parameterType="map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			IFNULL(SUM(TIMESTAMPDIFF(
					MINUTE,
					B.CREATE_DATE,
					B.FINISH_DATE
				))
				,
				0
			) AS LONGTIME
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		AND YEARWEEK(
			DATE_FORMAT(B.CREATE_DATE, '%Y-%m-%d'),
			1
		) = YEARWEEK(NOW())
		AND
			B.TYPE IN (2,3)
		GROUP BY
			P.ID
		HAVING
			LONGTIME <![CDATA[ > ]]> 1
		ORDER BY
			LONGTIME DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 人气榜我的排名 周榜 -->
	<select id="listByPopularityWeek" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.LONGTIME AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.LONGTIME
		FROM
			(SELECT
					P.ID,
					IFNULL(SUM(TIMESTAMPDIFF(
							MINUTE,
							B.CREATE_DATE,
							B.FINISH_DATE
						))
						,
						0
					) AS LONGTIME
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS B
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.ID = B.OTHER_ID
				AND YEARWEEK(
					DATE_FORMAT(B.CREATE_DATE, '%Y-%m-%d'),
					1
				) = YEARWEEK(NOW())
				AND
					B.TYPE IN (2,3)
				GROUP BY
					P.ID
				HAVING
					LONGTIME <![CDATA[ > ]]> 1
				ORDER BY
					LONGTIME DESC) 
		AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
				F.ID = #{id}
	</select>
	<!-- 人气榜  本月-->
	<select id="popularityByMonth" parameterType="map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			IFNULL(SUM(TIMESTAMPDIFF(
					MINUTE,
					B.CREATE_DATE,
					B.FINISH_DATE
				))
				,
				0
			) AS LONGTIME
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		AND DATE_FORMAT(B.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
		AND
			B.TYPE IN (2,3)
		GROUP BY
			P.ID
		HAVING
			LONGTIME <![CDATA[ > ]]> 1
		ORDER BY
			LONGTIME DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 人气榜我的排名 月榜 -->
	<select id="listByPopularityMonth" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.LONGTIME AS SELF_VALUE
		FROM
			(SELECT
			(@rownum :=@rownum + 1) AS RANKING,
			B.ID,
			B.LONGTIME
		FROM
			(
				SELECT
					P.ID,
					SUM(TIMESTAMPDIFF(
						MINUTE,
						BOF.CREATE_DATE,
						BOF.FINISH_DATE
					)) AS LONGTIME
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.ID = BOF.OTHER_ID
				AND DATE_FORMAT(BOF.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
				AND
					BOF.TYPE IN (2,3) 
				GROUP BY
					P.ID
				HAVING
					LONGTIME <![CDATA[ > ]]> 1
				ORDER BY
					LONGTIME DESC
			) AS B,(SELECT @rownum := 0) r) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 人气榜  总值-->
	<select id="popularity" parameterType="map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			IFNULL(SUM(TIMESTAMPDIFF(
					MINUTE,
					B.CREATE_DATE,
					B.FINISH_DATE
				))
				,
				0
			) AS LONGTIME
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		AND
			B.TYPE IN (2,3)
		GROUP BY
			P.ID
		HAVING
			LONGTIME <![CDATA[ > ]]> 1
		ORDER BY
			LONGTIME DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 人气榜我的排名 总榜 -->
	<select id="listByPopularity" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.LONGTIME AS SELF_VALUE
		FROM
			(SELECT
			(@ROWNUM:=@ROWNUM+1) AS RANKING,
			B.ID,
			B.LONGTIME
		FROM
		(SELECT
				P.ID,
				IFNULL(SUM(TIMESTAMPDIFF(
					MINUTE,
					B.CREATE_DATE,
					B.FINISH_DATE
					))
					,
					0
					) AS LONGTIME
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS B
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.ID = B.OTHER_ID
				AND
					B.TYPE IN (2,3)
				GROUP BY
					P.ID
				HAVING
					LONGTIME <![CDATA[ > ]]> 1
				ORDER BY
					LONGTIME DESC) AS B,(SELECT @ROWNUM:= 0) R) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 魅力榜 ` -->
	<select id="listByCharmDay" resultType="Persion" parameterType="map">
			SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			P.BIRTHDAY,
			P.SIGN,
			P.ALBUM,
			P.level,
			P.imstate,
			SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE  1=1

		AND P.ID = B.OTHER_ID

		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>

		<if test="audit_state != null and audit_state != ''" >
			AND p.audit_state = #{audit_state}
		</if>

		<![CDATA[
			AND P.PLAY_IDENT = 3
			AND P.SEX = 2
			AND B.CREATE_DATE >= curdate()
		GROUP BY
			P.ID
		HAVING
			CAPITALBALANCE  >  1
		]]>

		ORDER BY
			CAPITALBALANCE DESC
			LIMIT 0,100

	</select>
	<!-- 魅力榜我的排名 日榜 -->
	<select id="listByCharmRankingDay" resultType="Persion" parameterType="java.lang.Integer">
			SELECT
			F.RANKING,
			F.CAPITALBALANCE AS SELF_VALUE
		FROM
		(SELECT
			(@ROWNUM:=@ROWNUM+1) AS RANKING,
			B.ID,
			B.CAPITALBALANCE
		FROM
			(SELECT
					P.ID,
					SUM(B.CAPITAL) AS CAPITALBALANCE
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS B
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.SEX = 2
				AND
					P.ID = B.OTHER_ID
				AND B.CREATE_DATE >= CURDATE()
				GROUP BY
					P.ID
				HAVING
					CAPITALBALANCE <![CDATA[ > ]]> 1
				ORDER BY
					CAPITALBALANCE DESC) AS B,(SELECT @ROWNUM:= 0) R) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!--魅力榜我的排名 日榜 加分页 -->
	<select id="listByCharmRankingDayPage" resultType="Persion" parameterType="map">
		SELECT
		F.RANKING,
		F.CAPITALBALANCE AS SELF_VALUE
		FROM
		(SELECT
		(@ROWNUM:=@ROWNUM+1) AS RANKING,
		B.ID,
		B.CAPITALBALANCE
		FROM
		(SELECT
		P.ID,
		SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
		PERSION P,
		BALANCE_OF_PAYMENTS B
		WHERE
		P.PLAY_IDENT = 3
		AND
		P.SEX = 2
		AND
		P.ID = B.OTHER_ID
		AND TO_DAYS(B.CREATE_DATE) = TO_DAYS(NOW())
		GROUP BY
		P.ID
		HAVING
		CAPITALBALANCE <![CDATA[ > ]]> 1
		ORDER BY
		CAPITALBALANCE DESC) AS B,(SELECT @ROWNUM:= 0) R) AS F
		WHERE
		F.ID = #{id}
		LIMIT #{begin},#{last}
	</select>


	<!-- 魅力榜 本周 -->
	<select id="listByCharmWeek" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			P.BIRTHDAY,
			P.SIGN,
			P.ALBUM,
			P.level,
			P.imstate,
			SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
					P.SEX = 2
		AND
			P.ID = B.OTHER_ID

		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>
		<if test="audit_state != null and audit_state != ''" >
			AND p.audit_state = #{audit_state}
		</if>
		AND YEARWEEK(
			DATE_FORMAT(B.CREATE_DATE, '%Y-%m-%d'),
			1
		) = YEARWEEK(NOW(),1)
		GROUP BY
			P.ID
		HAVING
			CAPITALBALANCE <![CDATA[ > ]]> 1
		ORDER BY
			CAPITALBALANCE DESC
			LIMIT 0,100
	</select>

	<!-- 魅力榜我的排名 周榜 -->
	<select id="listByCharmRankingWeek" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.CAPITALBALANCE AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.CAPITALBALANCE
			FROM
				(
					SELECT
						P.ID,
						SUM(BOF.CAPITAL) AS CAPITALBALANCE
					FROM
						PERSION P,
						BALANCE_OF_PAYMENTS BOF
					WHERE
						P.PLAY_IDENT = 3
					AND
						P.SEX = 2
					AND
						P.ID = BOF.OTHER_ID
					AND YEARWEEK(
						DATE_FORMAT(BOF.CREATE_DATE, '%Y-%m-%d'),
						1
					) = YEARWEEK(NOW(),1)
					GROUP BY
						P.ID
					HAVING
					CAPITALBALANCE <![CDATA[ > ]]> 1
					ORDER BY
						CAPITALBALANCE DESC
				) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>


	<!-- 魅力榜我的排名 周榜  加分页 -->
	<select id="listByCharmRankingWeekPage" resultType="Persion" parameterType="map">
		SELECT
		F.RANKING,
		F.CAPITALBALANCE AS SELF_VALUE
		FROM
		(
		SELECT
		(@ROWNUM :=@ROWNUM + 1) AS RANKING,
		B.ID,
		B.CAPITALBALANCE
		FROM
		(
		SELECT
		P.ID,
		SUM(BOF.CAPITAL) AS CAPITALBALANCE
		FROM
		PERSION P,
		BALANCE_OF_PAYMENTS BOF
		WHERE
		P.PLAY_IDENT = 3
		AND
		P.SEX = 2
		AND
		P.ID = BOF.OTHER_ID
		AND YEARWEEK(
		DATE_FORMAT(BOF.CREATE_DATE, '%Y-%m-%d'),
		1
		) = YEARWEEK(NOW(),1)
		GROUP BY
		P.ID
		HAVING
		CAPITALBALANCE <![CDATA[ > ]]> 1
		ORDER BY
		CAPITALBALANCE DESC
		) AS B,(SELECT @ROWNUM := 0) R
		) AS F
		WHERE
		F.ID = #{id}
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>

	<!-- 魅力榜 本月 -->
	<select id="listByCharmMonth" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		AND DATE_FORMAT(B.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
		GROUP BY
			P.ID
		HAVING
			CAPITALBALANCE <![CDATA[ > ]]> 1
		ORDER BY
			CAPITALBALANCE DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 魅力榜我的排名 月榜 -->
	<select id="listByCharmRankingMonth" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.CAPITALBALANCE AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.CAPITALBALANCE
		FROM
			(
				SELECT
					P.ID,
					SUM(BOF.CAPITAL) AS CAPITALBALANCE
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.SEX = 2
				AND
					P.ID = BOF.OTHER_ID
				AND DATE_FORMAT(BOF.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
				GROUP BY
					P.ID
				HAVING
					CAPITALBALANCE <![CDATA[ > ]]> 1
				ORDER BY
					CAPITALBALANCE DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 魅力榜  总值 -->
	<select id="listByCharm" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			SUM(B.CAPITAL) AS CAPITALBALANCE
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.ID = B.OTHER_ID
		GROUP BY
			P.ID
		HAVING
			CAPITALBALANCE  <![CDATA[ > ]]> 1
		ORDER BY
			CAPITALBALANCE DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 魅力榜我的排名 总榜-->
	<select id="listByCharmRanking" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.CAPITALBALANCE AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.CAPITALBALANCE
		FROM
			(
				SELECT
					P.ID,
					SUM(BOF.CAPITAL) AS CAPITALBALANCE
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF			
				WHERE
					P.PLAY_IDENT = 3
				AND
					P.SEX = 2
				AND
					P.ID = BOF.OTHER_ID
				GROUP BY
					P.ID
				HAVING
					CAPITALBALANCE <![CDATA[ > ]]> 1
				ORDER BY
					CAPITALBALANCE DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 富豪榜  本日 -->
	<select id="listByTokenDay" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			P.BIRTHDAY,
			SUM(B.TOKEN) AS TOKEN
		FROM
			PERSION P,BALANCE_OF_PAYMENTS B
		WHERE
			P.SEX = 1
		AND
			P.ID = B.PERSION_ID
		AND
			 B.CREATE_DATE <![CDATA[ >= ]]> curdate()
		AND B.type IN (1, 2, 3, 4, 5)
		<if test="excludeIds != null and excludeIds.size > 0 ">
			AND P.id not in
			<foreach collection="excludeIds" item="excludeId" open="(" close=")" separator="," >
				#{excludeId}
			</foreach>
		</if>
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>
		<if test="audit_state != null and audit_state != ''" >
			AND p.audit_state = #{audit_state}
		</if>
		GROUP BY
			P.ID
		HAVING
			TOKEN <![CDATA[ > ]]> 1
		ORDER BY
			TOKEN DESC
			LIMIT 0,100
	</select>
	<!-- 富豪榜  本日 -->
	<select id="listByTokenRankingDay" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.T AS SELF_VALUE
		FROM
			(
		SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.T
		FROM
			(
				SELECT
					P.ID,
					SUM(BOF.TOKEN) AS T
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF	
				WHERE
					P.SEX = 1
				AND
					P.ID = BOF.PERSION_ID
				AND BOF.CREATE_DATE <![CDATA[ >= ]]> CURDATE()
				AND BOF.type IN (1, 2, 3, 4, 5)
				GROUP BY
					P.ID
				HAVING
					T <![CDATA[ > ]]> 1
				ORDER BY
					T DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>


	<!-- 富豪榜  本日 分页-->
	<select id="listByTokenRankingDayPage" resultType="Persion" parameterType="map">
		SELECT
		F.RANKING,
		F.T AS SELF_VALUE
		FROM
		(
		SELECT
		(@ROWNUM :=@ROWNUM + 1) AS RANKING,
		B.ID,
		B.T
		FROM
		(
		SELECT
		P.ID,
		SUM(BOF.TOKEN) AS T
		FROM
		PERSION P,
		BALANCE_OF_PAYMENTS BOF
		WHERE
		P.SEX = 1
		AND
		P.ID = BOF.PERSION_ID
		AND TO_DAYS(BOF.CREATE_DATE) = TO_DAYS(NOW())
		AND BOF.type IN (1, 2, 3, 4, 5)
		GROUP BY
		P.ID
		HAVING
		T <![CDATA[ > ]]> 1
		ORDER BY
		T DESC
		) AS B,(SELECT @ROWNUM := 0) R
		) AS F
		WHERE
		F.ID = #{id}
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>

	<!-- 富豪榜  本周 -->
	<select id="listByTokenWeek" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			P.BIRTHDAY,
			SUM(B.TOKEN) AS TOKEN
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.SEX = 1
		AND
			P.ID = B.PERSION_ID
		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>
		<if test="audit_state != null and audit_state != ''" >
			AND p.audit_state = #{audit_state}
		</if>
		AND YEARWEEK(
			DATE_FORMAT(B.CREATE_DATE, '%Y-%m-%d'),
			1
		) = YEARWEEK(NOW(),1)
		<if test="excludeIds != null and excludeIds.size > 0 ">
			AND P.id not in
			<foreach collection="excludeIds" item="excludeId" open="(" close=")" separator="," >
				#{excludeId}
			</foreach>
		</if>
		AND B.type IN (1, 2, 3, 4, 5)
		GROUP BY
			P.ID
		HAVING
			TOKEN <![CDATA[ > ]]> 1
		ORDER BY
			TOKEN DESC
			LIMIT 0,100
	</select>
	<!-- 土豪榜我的排名 周榜 -->
	<select id="listByTokenRankingWeek" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.T AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.T
			FROM
				(
					SELECT
						P.ID,
						SUM(BOF.TOKEN) AS T
					FROM
						PERSION P,
						BALANCE_OF_PAYMENTS BOF	
					WHERE
						P.SEX = 1
					AND
						P.ID = BOF.PERSION_ID
					AND YEARWEEK(
						DATE_FORMAT(BOF.CREATE_DATE, '%Y-%m-%d'),
						1
					) = YEARWEEK(NOW(),
						1)
					AND BOF.type IN (1, 2, 3, 4, 5)
					GROUP BY
						P.ID
					HAVING
						T <![CDATA[ > ]]> 1
					ORDER BY
						T DESC
				) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>


	<!-- 富豪榜我的排名 周榜加分页 -->
	<select id="listTokenByCharmRankingWeekPage" resultType="Persion" parameterType="map">
		SELECT
		F.RANKING,
		F.T AS SELF_VALUE
		FROM
		(
		SELECT
		(@ROWNUM :=@ROWNUM + 1) AS RANKING,
		B.ID,
		B.T
		FROM
		(
		SELECT
		P.ID,
		SUM(BOF.TOKEN) AS T
		FROM
		PERSION P,
		BALANCE_OF_PAYMENTS BOF
		WHERE
		P.SEX = 1
		AND
		P.ID = BOF.PERSION_ID
		AND YEARWEEK(
		DATE_FORMAT(BOF.CREATE_DATE, '%Y-%m-%d'),
		1
		) = YEARWEEK(NOW(),
		1)
		AND BOF.type IN (1, 2, 3, 4, 5)
		GROUP BY
		P.ID
		HAVING
		T <![CDATA[ > ]]> 1
		ORDER BY
		T DESC
		) AS B,(SELECT @ROWNUM := 0) R
		) AS F
		WHERE
		F.ID = #{id}
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>

	<!-- 富豪榜 本月 -->
	<select id="listByTokenMonth" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			SUM(B.TOKEN) AS TOKEN
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B
		WHERE
			P.SEX = 1
		AND
			P.ID = B.PERSION_ID
		AND DATE_FORMAT(B.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
		GROUP BY
			P.ID
		HAVING
			TOKEN <![CDATA[ > ]]> 1
		ORDER BY
			TOKEN DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 土豪榜我的排名 月榜 -->
	<select id="listByTokenRankingMonth" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.T AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.T
		FROM
			(
				SELECT
					P.ID,
					SUM(BOF.TOKEN) AS T
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF
				WHERE
					P.SEX = 1
				AND
					P.ID = BOF.PERSION_ID
				AND DATE_FORMAT(BOF.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
				GROUP BY
					P.ID
				HAVING
					T <![CDATA[ > ]]> 1
				ORDER BY
					T DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>
	<!-- 富豪榜 总值 -->
	<select id="listByToken" resultType="Persion" parameterType="map">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.IMSTATE,
			SUM(B.TOKEN) AS TOKEN
		FROM
			PERSION P,
			BALANCE_OF_PAYMENTS B 
		WHERE
			P.SEX = 1
		AND
			P.ID = B.PERSION_ID
		GROUP BY
			P.ID
		HAVING
			TOKEN <![CDATA[ > ]]> 1
		ORDER BY
			TOKEN DESC
		<if test="begin!=null and last!=null">
			LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 土豪榜我的排名 总榜 -->
	<select id="listByTokenRanking" resultType="Persion" parameterType="java.lang.Integer">
		SELECT
			F.RANKING,
			F.T AS SELF_VALUE
		FROM
			(
			SELECT
			(@ROWNUM :=@ROWNUM + 1) AS RANKING,
			B.ID,
			B.T
		FROM
			(
				SELECT
					P.ID,
					SUM(BOF.TOKEN) AS T
				FROM
					PERSION P,
					BALANCE_OF_PAYMENTS BOF			
				WHERE
					P.SEX = 1
				AND
					P.ID = BOF.PERSION_ID
				GROUP BY
					P.ID
				HAVING
					T <![CDATA[ > ]]> 1
				ORDER BY
					T DESC
			) AS B,(SELECT @ROWNUM := 0) R
			) AS F
		WHERE
			F.ID = #{id}
	</select>


	<!--统计当前日榜人数-->
	<select id="countPersion" resultType="Integer" >
			SELECT count(p.id)  as num from
			PERSION P,
			BALANCE_OF_PAYMENTS BOF
			WHERE
			P.ID = BOF.PERSION_ID
			AND DATE_FORMAT(BOF.CREATE_DATE, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
	</select>
	
	<!-- 排行榜结束 -->



	<!-- 一键随缘 -->
	<select id="oneKeyFate" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.PHOTO,
			P.AREA,
			P.BIRTHDAY,
			P.NICK_NAME,
			P.VIDEO_MONEY,
			P.`LEVEL`,
			RAND() AS R
		FROM
			PERSION P 
		WHERE
			1 = 1
		<if test="sex == 0">
		AND	P.SEX = 2
		</if>
		<if test="sex == 1">
		AND	P.SEX = 2
		</if>
		<if test="sex == 2">
		AND	P.SEX = 1
		</if>
		AND
			P.ID != #{id}
		AND
			P.ID NOT IN (SELECT OTHER_ID FROM BLACK WHERE PERSION_ID = #{id})
		ORDER BY
			R ASC
		LIMIT 50;
	</select>	
	
	<!-- 邂逅 -->
	<select id="niceMeet" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.PHOTO,
			P.AREA,
			P.BIRTHDAY,
			P.SEX,
			P.SIGN,
			P.NICK_NAME,
			P.VIDEO_MONEY,
			P.`LEVEL`,
			P.IMSTATE,
			RAND() AS R
		FROM
			PERSION P 
		WHERE
			1 = 1
		<if test="sex != null and sex != 0">
		AND	P.SEX = #{sex}
		</if>
		AND
			P.ID != #{id}
		AND
			P.ID NOT IN (SELECT OTHER_ID FROM BLACK WHERE PERSION_ID = #{id})
		AND
			P.ID NOT IN (SELECT ACCEPT_ID FROM PASTE_RECORD WHERE PERSION_ID = #{id})
		ORDER BY
			R ASC
		LIMIT 10;
	</select>	
	
  	<!-- 按照电话查询用户是否存在 -->
  	<select id="find_pwd" parameterType="String" resultType="Integer">
  		select count(*) from persion where tel=#{tel}
  	</select>
  	
  	<!-- 访客列表 -->
  	<select id="readme_record" parameterType="Integer" resultType="Persion">
  		SELECT
			P.ID,
			P.NICK_NAME,
			P.PHOTO,
			RR.UPDATE_DATE
		FROM
			README_RECORD RR,
			PERSION P
		WHERE
			P.USE_STATE = 1
		AND
			P.SEX = 1
		AND RR.OTHER_ID = P.ID
		AND RR.PERSION_ID = #{persion_id}
		ORDER BY
			RR.UPDATE_DATE DESC 
		LIMIT 100;
  	</select>
  	
  	<!-- 批量更改访客状态 -->
  	<update id="readme_record_status" parameterType="Integer">
  		UPDATE
 			README_RECORD
 		SET
 			IS_READ = 1
 		WHERE
 			PERSION_ID = #{persion_id}

  	</update>
  	
  	<!-- 最近一位访客 -->
  	<select id="readme_last" parameterType="Integer" resultType="Persion">
  		SELECT
			P.ID,
			P.NICK_NAME,
			P.PHOTO,
			RR.UPDATE_DATE,
			RR.IS_READ
		FROM
			README_RECORD RR,
			PERSION P
		WHERE
			P.USE_STATE = 1
		AND
			P.SEX = 1
		AND RR.OTHER_ID = P.ID
		AND RR.PERSION_ID = #{persion_id}
		ORDER BY
			RR.UPDATE_DATE DESC 
		LIMIT 1;
  	</select>

  	<!-- 添加一条访客记录 -->
	<insert id="insert_readme_record" parameterType="Map" >
		INSERT INTO
 		README_RECORD(PERSION_ID,OTHER_ID,UPDATE_DATE)
 		VALUES(#{other_id},#{self_id},NOW())
	</insert>
	
	<!-- 更新访客记录 -->
 	<update id="update_readme_record" parameterType="Map">
 		UPDATE
 			README_RECORD
 		SET
 			UPDATE_DATE = NOW(),
 			IS_READ = 2
 		WHERE
 			PERSION_ID = #{other_id}
 		AND
 			OTHER_ID = #{self_id}
 	</update>
	
	<!-- 查询访客匹配记录 -->
 	<select id ="query_readme_record" parameterType="Map" resultType="Integer">
 		SELECT
			RR.ID
		FROM
			README_RECORD RR
		WHERE
			PERSION_ID = #{other_id}
		AND
 			OTHER_ID = #{self_id}
		LIMIT 1;
 	</select>
 	
  	
  	<update id="addLove" parameterType="Persion">
		update persion set love=love+#{love} where id=#{id}
	</update>
	
	<!-- 更新成功率 -->
	<update id="updateBySellToRate" parameterType="Integer">
		update persion set rate = ROUND(((select count(*) from chat where state!=1 and sell_id=#{id})/(select count(*) from chat where sell_id=#{id})),2)
		where id = #{id}
	</update>
	
	<!-- 推荐恋人 -->
	<select id="recommend_lover" resultType="Persion" parameterType="Map">
		select p.*,r.r_account,r.r_pwd,pr.id as isLike,b.id AS isBlack from persion p 
		left join rong r on r.persion_id=p.id 
		LEFT JOIN black b ON b.other_id=p.id and b.persion_id=#{id} 
		LEFT JOIN paste_record pr ON pr.accept_id=p.id and pr.persion_id=#{id} where
		p.login_time!='' and p.use_state=1 and p.ident_state=5 order by p.love desc 
		<if test="begin!=null and last!=null">
			limit #{begin},#{last}
		</if>
	</select>
	
	<!-- 查看个人信息是否点赞拉黑 -->
	<select id="selectInfoLikeBlack" parameterType="Map" resultType="Persion">
		select p.*,r.id as paste_flag,rong.r_account,rong.r_pwd,pr.id as isLike,b.id AS isBlack  
		from persion p left join rong on rong.persion_id=p.id left join paste_record r on r.accept_id=p.id 
		LEFT JOIN black b ON b.persion_id=#{other_id} and b.other_id=#{id}
		LEFT JOIN paste_record pr ON pr.persion_id=#{other_id} and pr.accept_id=#{id} 
		where p.id=#{id,jdbcType=INTEGER}
		group by p.id
	</select>
	<select id="judgeTelRepeat" parameterType="String" resultType="Integer">
		select count(id) from persion where tel = #{tel}
	</select>
	
	<select id="SelectByTerm" resultType="Persion">
		select * from persion
	</select>
	
	<!-- 批量修改 -->
	<update id="batchUpdate" parameterType="java.util.List">
	 	<foreach collection="list" item="item" index="index" open="" close="" separator=";">  
                update persion   
                <set>  
                  login_give_money=1  
                </set>  
                where id = ${item.id}  
         </foreach>  
	</update>
	<!-- 我的好友  -->
	<select id="myfriends" parameterType="Map" resultType="Persion">
		SELECT * FROM persion p,paste_record pr WHERE p.id=pr.persion_id AND pr.accept_id=#{accept_id}
		<if test="begin!=null and last!=null">
			limit #{begin},#{last}
		</if>
	</select>
	<!-- 我的关注 -->
	<select id="myaccept" parameterType="Map" resultType="Persion">
		SELECT * FROM paste_record pr,persion p WHERE pr.accept_id=p.id AND pr.persion_id=#{persion_id}
		<if test="begin!=null and last!=null">
			limit #{begin},#{last}
		</if>
	</select>
	<!-- 我的粉丝 -->
	<select id="myfans" parameterType="Map" resultType="Persion">
		SELECT * FROM paste_record pr,persion p WHERE pr.persion_id=p.id AND pr.accept_id=#{accept_id}
		<if test="begin!=null and last!=null">
			limit #{begin},#{last}
		</if>
	</select>
	<!-- 黑名单 -->
	<select id="myblack" parameterType="Map" resultType="Persion">
		SELECT * FROM black b,persion p WHERE b.other_id=p.id AND b.persion_id=#{persion_id}
		<if test="begin!=null and last!=null">
			limit #{begin},#{last}
		</if>
	</select>
	<!-- 允许接听(通过用户编号id更新用户的视频状态，语音状态) -->
	<update id="alowed_to_answer" parameterType="Persion">
		UPDATE 
			PERSION 
		<set>
			<if test="voice_state != null and voice_state != 0">
				VOICE_STATE = #{voice_state},
			</if>
			<if test="video_state != null and video_state != 0">
				VIDEO_STATE = #{video_state},
			</if>
			<if test="sms_state != null and sms_state != 0">
				SMS_STATE = #{sms_state},
			</if>
			<if test="imstate != null and imstate != 0">
				IMSTATE = #{imstate},
			</if>
		</set> 
		WHERE 
			ID= #{id}
	</update>
	<!-- 允许接听收费设置 -->
	<select id="charging_set" resultType="Persion" parameterType="java.lang.Integer">
<!--		SELECT p.video_money,p.voice_money,p.sms_money FROM persion p WHERE p.id=#{id}-->
		UPDATE 
			PERSION 
		<set>
		<if test="video_money != null">
		VIDEO_MONEY=#{video_money},
		</if>
		<if test="voice_money != null">
		VOICE_MONEY=#{voice_money},
		</if>
		<if test="sms_money != null">
		SMS_MONEY=#{sms_money},
		</if>
		</set>
		WHERE 
			ID=#{id}
	</select>
	<!-- 我的收入 总值-->
	<select id="my_income" resultType="BigDecimal" parameterType="java.lang.Integer">
		SELECT
			SUM(B.CAPITAL)
		FROM
			BALANCE_OF_PAYMENTS B
		WHERE
			B.OTHER_ID = #{id}
	</select>
	<!-- 我的收入 本月-->
	<select id="my_incomeByMonth" resultType="BigDecimal" parameterType="java.lang.Integer">
		SELECT
			SUM(B.CAPITAL)
		FROM
			BALANCE_OF_PAYMENTS B
		WHERE
			B.OTHER_ID = #{id}
		AND 
			DATE_FORMAT(B.CREATE_DATE,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
	</select>
	<!-- 我的收入 本周-->
	<select id="my_incomeByWeek" resultType="BigDecimal" parameterType="java.lang.Integer">
		SELECT
			SUM(B.CAPITAL)
		FROM
	 		BALANCE_OF_PAYMENTS B
		WHERE
			B.OTHER_ID = #{id}
		AND 
			YEARWEEK(DATE_FORMAT(B.CREATE_DATE,'%Y-%m-%d'),1) = YEARWEEK(NOW());
	</select>
	<!-- 我的收入 本日-->
	<select id="my_incomeByDay" resultType="BigDecimal" parameterType="java.lang.Integer">
		SELECT
			SUM(B.CAPITAL)
		FROM
			BALANCE_OF_PAYMENTS B 
		WHERE
			B.OTHER_ID = #{id}
		AND 
			TO_DAYS(B.CREATE_DATE) = TO_DAYS(NOW());
	</select>
	<!-- 收入统计 -->
	<select id="income_statistical" parameterType="Map" resultType="Persion">
		SELECT p.nick_name AS nick_name,p.photo AS photo,p.token AS token,@rownum := @rownum + 1 AS ranking FROM persion p,(SELECT @rownum := 0) r  ORDER BY p.token DESC
	</select>
	<!-- 赚金币(邀请奖励)1 -->
	<select id="earngold1" resultType="BigDecimal" parameterType="java.lang.Integer">
	SELECT IFNULL(SUM(BA.F_RATE),0)  FROM BALANCE_OF_PAYMENTS BA WHERE BA.F_ID = #{id}
	</select>
	<!-- 根据id查询用户信息ForIM  -->
	<select id="queryPersionByIdForIM" parameterType="Integer" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.SEX,
			P.`LEVEL`,
			P.TOKEN,
			P.PLAY_IDENT,
			P.VIDEO,
			P.VOICE_MONEY,
			P.VOICE_STATE,
			P.VIDEO_STATE,
			P.VIDEO_MONEY,
			P.SMS_STATE,
			P.SMS_MONEY,
			<!-- P.CAPITALBALANCE, -->
			P.USE_STATE,
			P.VERSION,
			P.S_POSITION_X,
			P.S_POSITION_Y,
			P.LEVEL_VERSION,
			P.LOVE,
			U.asset_value as CAPITALBALANCE
		FROM
			PERSION P
			inner join user_account U
			on P.id=U.user_id 
		WHERE
			P.ID = #{id}
	</select>
	<!-- 给用户扣金币（token） -->
	<update id="cutPersionToken" parameterType="Persion">
		UPDATE 
			PERSION P
		SET
			P.TOKEN = P.TOKEN - #{token},
			P.VERSION = P.VERSION + 1
		WHERE 
			P.ID = #{id}
		AND
			P.TOKEN <![CDATA[   >=  ]]> #{token}
		AND
			P.TOKEN <![CDATA[   >  ]]> 0
		AND
			P.USE_STATE = 1
		AND
			P.VERSION = #{version}
	</update>
	<!-- 给用户扣资金 -->
	<update id="cutPersionCap" parameterType="Persion">
		UPDATE 
			PERSION P
		SET
			P.CAPITALBALANCE = P.CAPITALBALANCE - #{capitalBalance},
			P.VERSION = P.VERSION + 1
		WHERE 
			P.ID = #{id}
		AND
			P.CAPITALBALANCE <![CDATA[   >=  ]]> #{capitalBalance}
		AND
			P.CAPITALBALANCE <![CDATA[   >  ]]> 0
		AND
			P.USE_STATE = 1
		AND
			P.VERSION = #{version}
	</update>
	<!-- 给用户加RMB -->
	<update id="addPersionCapitalBalance" parameterType="Persion">
		UPDATE 
			PERSION P
		SET
			P.CAPITALBALANCE = P.CAPITALBALANCE + #{capitalBalance},
			P.VERSION = P.VERSION + 1
		WHERE 
			P.ID = #{id}
		AND
			P.CAPITALBALANCE <![CDATA[   >=  ]]> 0
		AND
			P.VERSION = #{version}
	</update>
	<!-- 给用户加可提现的RMB -->
	<update id="addPersionInvite" parameterType="Persion">
		UPDATE 
			PERSION P
		SET
			P.CAPITALBALANCE = P.CAPITALBALANCE + #{capitalBalance},
			P.INVITE_MONEY = P.INVITE_MONEY + #{capitalBalance},
			P.VERSION = P.VERSION + 1
		WHERE 
			P.ID = #{id}
		AND
			P.INVITE_MONEY <![CDATA[   >=  ]]> 0
		AND
			P.VERSION = #{version}
	</update>
	<!-- 收入统计 -->
	<select id="queryInvite_money" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.PHOTO,
			P.INVITE_MONEY
		FROM
			PERSION P
		WHERE
			P.INVITE_MONEY != 0
		ORDER BY P.INVITE_MONEY DESC
		<if test="begin!=null and last!=null">
		LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 收入统计 -->
	<select id="querySumdesc" parameterType="Map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME,
			P.PHOTO,
			IFNULL(COUNT(R.ID),0) AS INVITE_SUM
		FROM
			RECOMMENDED R,PERSION P
		WHERE
			R.SHARE_ID = P.ID
		AND
			R.REGISTRANT_ID != 0
		GROUP BY
			R.SHARE_ID
		ORDER BY INVITE_SUM DESC
		<if test="begin!=null and last!=null">
		LIMIT #{begin},#{last}
		</if>
	</select>
	<!-- 查询用户的token -->
	<select id="queryPersionByIdForToken" parameterType="Integer" resultType="Integer">
		SELECT
			P.TOKEN
		FROM
			PERSION P
		WHERE
			P.ID = #{id}
	</select>
	
	<!-- 查询用户的权值 -->
	<select id="queryPersionSize" parameterType="Map" resultType="Persion">
		SELECT
			<if test="flag == 1">
			COUNT(B.OTHER_ID)*(#{rateConfig.config_key}/100) AS RATE,B.OTHER_ID AS ID
			</if>
			<if test="flag == 2">
			COUNT(B.OTHER_ID)*(#{rateConfig.config_value}/100) AS RATE,B.OTHER_ID AS ID
			</if>
			<if test="flag == 3">
			COUNT(B.OTHER_ID)*(#{rateConfig.config_postscript}/100) AS RATE,B.OTHER_ID AS ID
			</if>
		FROM
			BALANCE_OF_PAYMENTS B,PERSION P
		WHERE
			B.OTHER_ID = P.ID
		AND
			B.FINISH_DATE IS NOT NULL
		AND
			(P.VIDEO_IDENT = 3 OR IDENT_STATE = 5)
		AND
			P.USE_STATE = 1
		AND
			B.TYPE IN (2,3)
		<if test="flag == 2">
		AND
			B.GRADE <![CDATA[  >=  ]]>  2
		</if>
		<if test="flag == 3">
		AND
				TIMESTAMPDIFF(
						SECOND,
						B.CREATE_DATE,
						B.FINISH_DATE
					)   <![CDATA[  >  ]]> 30
		</if>
		GROUP BY
			B.OTHER_ID
	</select>
	
	<!-- 清空用户的权值 -->
	<update id="updatePersionRate" >
		UPDATE
			PERSION
		SET
			RATE = 0
	</update>
	
	<!-- 修改用户的权值 -->
	<update id="addPersionRate" parameterType="Map">
		 <foreach collection="size" item="item" index="index" open="" close="" separator=";">
				UPDATE PERSION 
				<set>
				  RATE= RATE + ${item.rate}
				</set>
				WHERE ID = ${item.id}
		 </foreach>
	</update>
	
	
	<!-- 更新用户等级 -->
	<update id="changeLevel" parameterType="Level">
		UPDATE
			PERSION P
		SET
			P.LEVEL = #{level.level}
		WHERE
			P.ID IN
		<foreach item="item" index="index" collection="persions"  open="(" separator="," close=")">  
             	#{item.id}  
        </foreach>
	</update>
	
	<update id="updateTemp" parameterType="Persion" >
		UPDATE
			PERSION P
		SET
			P.TOKEN = #{token}
	</update>
	
	<!-- 查询用户的金币和资金 -->
	<select id="queryCurrentPersionMoney" parameterType="Integer" resultType="Persion">
		SELECT
			P.CAPITALBALANCE,
			P.TOKEN
		FROM
			PERSION P
		WHERE
			P.ID = #{id}
	</select>
	<!-- 添加一条分享记录 -->
	<insert id="insertShare" parameterType="Map" >
		INSERT IGNORE INTO SHARE_RECORD VALUE(#{id},#{date})
	</insert>
	<!-- 查询用户通过手机号 -->
	<select id="queryPersionByTel" parameterType="String" resultType="String">
		SELECT
			P.TEL
		FROM
			PERSION P
		WHERE
			P.TEL = #{tel,jdbcType=VARCHAR}
		LIMIT 1
	</select>
	<!-- 更新用户的等级 -->
	<update id="addPersionLevel" parameterType="Persion">
		UPDATE 
			PERSION P
		SET 
			P.`LEVEL` = #{level},
			P.LOVE = #{love},
			P.LEVEL_VERSION = P.LEVEL_VERSION + 1
		WHERE
			P.ID = #{id}
		AND 
			P.LEVEL_VERSION = #{level_version}
		AND
			 #{level} != 0
	</update>
	<!-- 修改语音视频中双方用户聊天状态 -->
	<update id="updatePersionImstate" parameterType="Map">
		UPDATE 
			PERSION P
		SET 
			P.IMSTATE = #{imState}
		WHERE
			P.ID  IN (#{buyid},#{sellid})
	</update>
	
	<!-- 批量删除我关注的人，为了批量添加关注人的时候出现重复 -->
	<delete id="deleteLike" parameterType="Map">
	DELETE
		FROM
	PASTE_RECORD
		WHERE
	PERSION_ID = #{id}
		AND
	ACCEPT_ID 
		IN
		<foreach item="item" index="index" collection="persionIds"   open="(" separator="," close=")">  
             	#{item}
        </foreach> 
	</delete>
	
	<!-- 打招呼 /每日推荐 -->
  	<select id="sayhello" parameterType="map" resultType="Persion">
		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.CREATE_DATE AS CREATE_DATE,
			P.IMSTATE
		FROM
			PERSION P
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2

		and not exists(
			select '' from black b where b.other_id = p.id and b.persion_id = #{id}
		)
		<!-- 排除5分钟内并且和3个人以及以上有私聊记录的用户 -->
		<if test="IsExcludeBusyPersion == null">
			and not exists (
				select
					m.other_id
				from (
					select
						bo.other_id as other_id from balance_of_payments bo
					where 1=1
					and bo.type = 1
					and bo.create_date >= #{vptDate}
					group by other_id
					<![CDATA[having count(distinct bo.persion_id) >= 3 ]]>
				) m
				where p.id = m.other_id
			)
		</if>


		AND
			P.IMSTATE = 1

		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>

		ORDER BY
			P.IS_ESSENCE DESC ,P.love DESC
		LIMIT #{limit}
	</select>

<!-- new 打招呼 /每日推荐 -->
  	<select id="newsayhello" parameterType="map" resultType="Persion">
		SELECT
			DISTINCT(P.ID),
			P.NICK_NAME AS NICK_NAME,
			P.PHOTO AS PHOTO,
			P.CREATE_DATE AS CREATE_DATE,
			P.IMSTATE
		FROM
			user_imstate_history U,PERSION P
		WHERE
		     U.user_id=P.id
		AND
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2

		and not exists(
			select '' from black b where b.other_id = p.id and b.persion_id = #{id}
		)
		<!-- 排除5分钟内并且和3个人以及以上有私聊记录的用户 -->
		<if test="IsExcludeBusyPersion == null">
			and not exists (
				select
					m.other_id
				from (
					select
						bo.other_id as other_id from balance_of_payments bo
					where 1=1
					and bo.type = 1
					and bo.create_date >= #{vptDate}
					group by other_id
					<![CDATA[having count(distinct bo.persion_id) >= 3 ]]>
				) m
				where p.id = m.other_id
			)
		</if>


		AND
			P.IMSTATE = 1

		<if test="app_channel_name != null and app_channel_name != ''" >
			AND P.app_channel_name = #{app_channel_name}
		</if>

		ORDER BY
				U.create_time DESC
		LIMIT #{limit}
	</select>

	<!-- 开启闪配的女神用户 -->
  	<select id="selectNiceMeet" parameterType="map" resultType="Persion">
  		SELECT
			P.ID,
			P.NICK_NAME AS NICK_NAME,
			P.`LEVEL` AS `LEVEL` 
		FROM
			PERSION P
		WHERE
			P.PLAY_IDENT = 3
		AND
			P.SEX = 2
		AND
			P.IS_NICEMEET = 1
		<if test="idlist != '' and idlist != null">
		AND
			P.ID NOT IN(#{idlist})
		</if>	
		ORDER BY RAND() LIMIT #{count};
	</select>
	
	<update id="newUpdate" parameterType="Persion">
		UPDATE PERSION
		<set>			
      		<if test="capitalBalance != null">
      			capitalBalance = #{capitalBalance},
      		</if>
      		<if test="token != null">
      			token = #{token},
      		</if>
		</set>
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	
	
	<select id="deviceNoCount" parameterType="String" resultType="Integer">
		select count(*) from persion where device_no = #{deviceNo} 
	</select>
	
	<!-- 根据微信唯一标识登陆用户 -->
	<select id="selectPersionByOpendId" parameterType="String" resultType="Persion">
	SELECT 
			P.ID,
			P.TEL,
			P.NICK_NAME,
			P.SEX,
			P.BIRTHDAY,
			P.SIGN,
			P.SUP_ABILITY,
			P.LOGIN_TIME,
			P.VOICE_IDENT,
			P.VOICE_TIME_LENGTH,
			P.OTHERKEY,
			P.ALBUM,
			P.LOVE,
			P.`LEVEL`,
			(SELECT L.LEVEL_VALUE_END FROM `LEVEL` L WHERE L.`LEVEL` = P.`LEVEL`) AS LEVELSUM,
			P.TOKEN,
			P.CAPITALBALANCE,
			P.PLAY_IDENT,
			P.PHOTO,
			(SELECT IFNULL(SUM(B.CAPITAL),0) FROM BALANCE_OF_PAYMENTS B WHERE B.OTHER_ID = P.ID AND DATE_FORMAT(B.CREATE_DATE,'%Y%M') = DATE_FORMAT(NOW(),'%Y%M')) MONTHGET,
			P.SMS_MONEY,
			P.VOICE_MONEY,
			P.VOICE_STATE,
			P.VIDEO_MONEY,
			P.AREA,
			P.VIDEO_STATE,
			P.RONGYUNTOKEN,
			P.USE_STATE,
			P.IS_VIP,
			P.freeze_time,
			(SELECT COUNT(CARE.ACCEPT_ID) FROM PASTE_RECORD CARE WHERE CARE.PERSION_ID = P.ID) AS CARESIZE,
			(SELECT COUNT(FANS.PERSION_ID) FROM PASTE_RECORD FANS WHERE FANS.ACCEPT_ID = P.ID) AS FANSSIZE,
			(SELECT COUNT(FRIEND.ID) FROM PASTE_RECORD FRIEND WHERE FRIEND.PERSION_ID 
			IN (
				SELECT
					TEMPT.ACCEPT_ID
				FROM
					PASTE_RECORD TEMPT
				WHERE
					TEMPT.PERSION_ID = P.ID
			)
			AND FRIEND.ACCEPT_ID = P.ID) AS FRIENDSIZE
			FROM PERSION P 
		WHERE opend_id=#{openId}
	
	</select>
	
	<!-- 更新persion表信息 -->
	<update id="updateById" parameterType="Persion">
		UPDATE PERSION
		<set>
			
			<if test="nick_name != null and nick_name != '(null)' and nick_name != ''">
				NICK_NAME = #{nick_name,jdbcType=VARCHAR},
      		</if>
			
			<if test="birthday != null and birthday != '(null)' and birthday != ''">
				BIRTHDAY = #{birthday,jdbcType=VARCHAR},
      		</if>
			<if test="photo != null and photo != (null) and photo != ''">
				PHOTO = #{photo,jdbcType=VARCHAR},
      		</if>
			<if test="photo_ident != null">
				PHOTO_IDENT = #{photo_ident,jdbcType=VARCHAR},
      		</if>
			<if test="voice_ident != null">
				VOICE_IDENT = #{voice_ident,jdbcType=VARCHAR},
      		</if>
			<if test="video != null and video !='' and video != '(null)'">
				VIDEO = #{video,jdbcType=VARCHAR},
      		</if>
			<if test="sup_ability != null and sup_ability != '' and sup_ability  != '(null)'">
				SUP_ABILITY = #{sup_ability,jdbcType=VARCHAR},
      		</if>
			<if test="sign != null and sign !='(null)'">
				SIGN = #{sign,jdbcType=VARCHAR},
      		</if>
			<if test="album != null">
				ALBUM = #{album,jdbcType=VARCHAR},
      		</if>
      		<if test="album == ''">
				ALBUM = NULL,
      		</if>
      		<if test="voice_time_length != null  and voice_time_length !=''  ">
				VOICE_TIME_LENGTH = #{voice_time_length},
      		</if>
      		<if test="voice_time_length!=null and voice_time_length!=0">
      			VOICE_TIME_LENGTH = #{voice_time_length},
      		</if>
      		<if test="thumbnails!=null and thumbnails!='' and thumbnails != '(null)'">
      			THUMBNAILS = #{thumbnails},
      		</if>
      		<if test="identAgain != null and identAgain != 0">
      			IDENTAGAIN = #{identAgain},
      		</if>
      		<if test="play_ident != null and play_ident != 0">
      			play_ident = #{play_ident},
      		</if>
      		<if test="approve_time != null">
      			approve_time = #{approve_time},
      		</if>
      		<if test="alter_time != null">
      			alter_time = #{alter_time},
      		</if>
      		
		</set>
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 更新persion表信息 -->
	<update id="updateIdentAgai" parameterType="Persion">
		UPDATE PERSION
		set identagain=#{identAgain}
		WHERE
			ID = #{id}	
	</update>
	
	<update id="updateTelAndPwd" parameterType="Persion">
		UPDATE PERSION
		set tel=#{tel},
		PWD=#{pwd}
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	
	
	<select id="selectPersionById" parameterType="Integer" resultType="Persion">
	
   select * from Persion where id=#{id}
	
	</select>
	
	
	<update id="bindAccount" parameterType="Persion">
	update Persion 
	<set>
			<if test="tel != null  ">
				tel=#{tel},
      		</if>
      		<if test="opend_id != null  ">
				opend_id=#{opend_id},
      		</if>
		</set>
	 where id=#{id}
	</update>
	
	<select id="selectIdByTel" resultType="int">
		SELECT id FROM Persion WHERE tel=#{phoneNum}
	</select>
	<!-- 心动女神列表 -->
	<select id="samDungPersionList" parameterType="Map" resultType="Persion">
	
	SELECT DISTINCT
	c.*,max(c.isHotPersion) isHotPersion
FROM
	(
		SELECT
			*
		FROM
			(
				SELECT
					P.ID,
					P.NICK_NAME,
					P.SEX,
					P.BIRTHDAY,
					P.AREA,
					P.PHOTO,
					P.VIDEO_MONEY,
					P.VOICE_MONEY,
					P.VIDEO_STATE,
					p.VOICE_STATE,
					P.IMSTATE,
					P.SIGN,
					P.PLAY_IDENT,
					P. LEVEL,
					'2' isHotPersion
				FROM
					PERSION P
				WHERE
					P.USE_STATE = 1
				AND TIMESTAMPDIFF(
					DAY,
					P.IDENT_PASS_DATETIME,
					now()
				) <![CDATA[ <= ]]> 7
				AND p.id NOT IN (
					SELECT
						accept_id
					FROM
						paste_record pa
					WHERE
						pa.persion_id = #{id}
				)
				AND P.PLAY_IDENT = 3
				AND P.SEX = 2
				AND P.index_desc > 0
				ORDER BY
					P.IMSTATE ASC,
					p.create_date DESC
				LIMIT 10
			) a
		UNION ALL
			SELECT
				*
			FROM
				(
					SELECT
						P.ID,
						P.NICK_NAME,
						P.SEX,
						P.BIRTHDAY,
						P.AREA,
						P.PHOTO,
						P.VIDEO_MONEY,
						P.VOICE_MONEY,
						P.VIDEO_STATE,
						p.VOICE_STATE,
						P.IMSTATE,
						P.SIGN,
						P.PLAY_IDENT,
						P. LEVEL,
						'1' isHotPersion
					FROM
						PERSION P
					WHERE
						P.USE_STATE = 1
					AND p.id NOT IN (
						SELECT
							accept_id
						FROM
							paste_record pa
						WHERE
							pa.persion_id = #{id}
					)
					AND P.PLAY_IDENT = 3
					AND P.SEX = 2
					AND P.index_desc > 0
					ORDER BY
						p.index_desc DESC,
						P. LEVEL DESC,
						P.love DESC,
						P.IMSTATE ASC,
						p.create_date DESC
					LIMIT 10
				) b
	) c  GROUP BY c.id 
	
	</select>
  
	
	
	

</mapper>