<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglu.quickcall.user.service.dao.VerifyMapper">
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.Verify">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="voice" jdbcType="VARCHAR" property="voice" />
    <result column="voice_time_length" jdbcType="INTEGER" property="voiceTimeLength" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.honglu.quickcall.user.facade.entity.Verify">
    <result column="album" jdbcType="LONGVARCHAR" property="album" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, photo, nick_name, sign, voice, voice_time_length, status, update_time
  </sql>
  <sql id="Blob_Column_List">
    album
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from verify
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPid" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from verify
    where pid = #{id,jdbcType=INTEGER}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from verify
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.Verify">
    insert into verify (id, pid, photo, 
      nick_name, sign, voice, 
      voice_time_length, status, update_time, 
      album)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{voice,jdbcType=VARCHAR}, 
      #{voiceTimeLength,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{album,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.user.facade.entity.Verify">
    insert into verify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="voice != null">
        voice,
      </if>
      <if test="voiceTimeLength != null">
        voice_time_length,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="album != null">
        album,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="voice != null">
        #{voice,jdbcType=VARCHAR},
      </if>
      <if test="voiceTimeLength != null">
        #{voiceTimeLength,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="album != null">
        #{album,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.user.facade.entity.Verify">
    update verify
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="voice != null">
        voice = #{voice,jdbcType=VARCHAR},
      </if>
      <if test="voiceTimeLength != null">
        voice_time_length = #{voiceTimeLength,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="album != null">
        album = #{album,jdbcType=LONGVARCHAR},
      </if>
       <if test="album != null">
        album = #{album,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.honglu.quickcall.user.facade.entity.Verify">
    update verify
    set pid = #{pid,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      voice = #{voice,jdbcType=VARCHAR},
      voice_time_length = #{voiceTimeLength,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      album = #{album,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.user.facade.entity.Verify">
    update verify
    set pid = #{pid,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      voice = #{voice,jdbcType=VARCHAR},
      voice_time_length = #{voiceTimeLength,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateAlbumById" >
    update verify
    set 
     album = null
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>