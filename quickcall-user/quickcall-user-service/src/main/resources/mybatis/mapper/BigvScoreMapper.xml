<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honglu.quickcall.user.service.dao.BigvScoreMapper" >
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.BigvScore" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="order_total" property="orderTotal" jdbcType="INTEGER" />
    <result column="score_total" property="scoreTotal" jdbcType="DECIMAL" />
    <result column="online_status" property="onlineStatus" jdbcType="INTEGER" />
    <result column="cust_status" property="custStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, customer_id, order_total, score_total, online_status, cust_status,
    create_time, modify_time, create_man, modify_man, remark
  </sql>
  <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.BigvScore" >
    insert into bigv_score (id, customer_id, order_total,
      score_total, create_man, modify_man, remark
      )
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{orderTotal,jdbcType=INTEGER},
      #{scoreTotal,jdbcType=DECIMAL}, #{createMan,jdbcType=VARCHAR}, #{modifyMan,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR}
      )
  </insert>

  <!-- 更新大V评分 -->
  <update id="updateBigvScore">
      UPDATE bigv_score SET order_total = order_total + #{addOrderTotal}, score_total = score_total + #{valueScore}
      WHERE customer_id = #{customerId}
  </update>

  <!-- 更新大V评分 -->
  <update id="updateBigvScore2">
      UPDATE bigv_score t
      SET t.order_total = (
          SELECT
              SUM(t2.order_total)
          FROM
              bigv_skill_score t2
          WHERE
              t2.customer_id = t.customer_id
      ),
      t.score_total = (
          SELECT
              SUM(t3.score_total)
          FROM
              bigv_skill_score t3
          WHERE
              t3.customer_id = t.customer_id
      )
  </update>

  <!-- 根据客户ID删除数据 -->
  <delete id="deleteDataByCustomerId">
    DELETE FROM bigv_score WHERE customer_id = #{customerId}
  </delete>

  <!-- 根据客户技能ID查询所有已完成的订单 -->
  <select id="selectAllDoneOrderByCustomerSkillId" resultType="com.honglu.quickcall.account.facade.entity.Order">
    SELECT
      t.service_id as serviceId,
      t.customer_skill_id as customerSkillId,
      t.skill_item_id as skillItemId,
      t.order_num as orderNum,
      t.service_price as servicePrice,
      t.customer_is_evaluate as customerIsEvaluate,
      t.evaluate_start as evaluateStart,
      (
        SELECT COUNT(t2.order_id) FROM orders t2
        WHERE t2.service_id = t.service_id AND t2.skill_item_id = t.skill_item_id
        AND t2.order_status IN (30, 32, 34, 36, 38, 40) AND t2.create_time <![CDATA[  < ]]> t.create_time
      ) AS paymentType <!-- 订单累计数，暂时用字段 paymentType 接收 -->
    FROM `orders` t
    WHERE t.customer_skill_id = #{customerSkillId}
    AND	t.order_status IN (30, 32, 34, 36, 38, 40)
    ORDER BY t.service_id ASC, t.skill_item_id ASC, t.create_time ASC
  </select>
</mapper>