<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honglu.quickcall.user.service.dao.FansMapper" >
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.Fans" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="anchor_id" property="anchorId" jdbcType="BIGINT" />
    <result column="fans_id" property="fansId" jdbcType="BIGINT" />
    <result column="attention_state" property="attentionState" jdbcType="TINYINT" />
     <result column="read_state" property="readState"  />
    
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, anchor_id, fans_id,read_state, attention_state, create_time, modify_time, create_man, modify_man, 
    remark
  </sql>
  <select id="queryIsFollow" resultType="int" parameterType="map">
  	select COUNT(*) FROM fans where anchor_id=#{anchorId} AND fans_id=#{fansId} AND attention_state=1;
  </select>
  <select id="queryFansNumByCustomerId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    SELECT COUNT(*) FROM fans WHERE anchor_id=#{customerId} AND attention_state=1; 
  </select>
  
   <select id="queryNoReadFansNumByCustomerId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    SELECT COUNT(*) FROM fans WHERE anchor_id=#{customerId} AND attention_state=1 and read_state=0
  </select>
  
  
  <select id="queryAttentionNumByCustomerId" resultType="int" parameterType="java.lang.Long" >
    SELECT COUNT(*) FROM fans WHERE fans_id=#{customerId} AND attention_state=1; 
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fans
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fans
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.Fans" >
    insert into fans (id, anchor_id, fans_id, 
      attention_state, create_time, modify_time, 
      create_man, modify_man, remark
      )
    values (#{id,jdbcType=BIGINT}, #{anchorId,jdbcType=BIGINT}, #{fansId,jdbcType=BIGINT}, 
      #{attentionState,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{createMan,jdbcType=VARCHAR}, #{modifyMan,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.user.facade.entity.Fans" >
    insert into fans
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="anchorId != null" >
        anchor_id,
      </if>
      <if test="fansId != null" >
        fans_id,
      </if>
      <if test="attentionState != null" >
        attention_state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createMan != null" >
        create_man,
      </if>
      <if test="modifyMan != null" >
        modify_man,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="anchorId != null" >
        #{anchorId,jdbcType=BIGINT},
      </if>
      <if test="fansId != null" >
        #{fansId,jdbcType=BIGINT},
      </if>
      <if test="attentionState != null" >
        #{attentionState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.user.facade.entity.Fans" >
    update fans
    <set >
      <if test="anchorId != null" >
        anchor_id = #{anchorId,jdbcType=BIGINT},
      </if>
      <if test="fansId != null" >
        fans_id = #{fansId,jdbcType=BIGINT},
      </if>
      <if test="attentionState != null" >
        attention_state = #{attentionState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        create_man = #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyMan != null" >
        modify_man = #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--   <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.user.facade.entity.Fans" >
    update fans
    set anchor_id = #{anchorId,jdbcType=BIGINT},
      fans_id = #{fansId,jdbcType=BIGINT},
      attention_state = #{attentionState,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_man = #{createMan,jdbcType=VARCHAR},
      modify_man = #{modifyMan,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
  
  <!-- 查询关注列表 -->
  <select id="queryAttentionListByCustomerId" resultType="com.honglu.quickcall.user.facade.vo.AttentionFansVO" >
		SELECT
			fs.anchor_id AS customerId,
			ct.head_portrait_url AS headPortraitUrl,
		    ct.nick_name  AS  nickName,
		    <![CDATA[ TIMESTAMPDIFF(YEAR, ct.birthday, CURDATE()) AS age  ]]>,
		    ct.sex    AS sex,
		    fs.attention_state  AS  attentionStatus,
		    ct.type AS type,
		    (IFNULL(fs.attention_state,0))&amp;(IFNULL(fs1.attention_state,0)) AS eachAttentionStatus 
		FROM
			fans fs
		LEFT JOIN customer ct ON fs.anchor_id = ct.customer_id 
		LEFT JOIN fans fs1 ON fs.anchor_id = fs1.fans_id and fs.fans_id = fs1.anchor_id 
		WHERE
			fs.fans_id = #{customerId}  and   fs.attention_state = #{attentionStatus} 
		ORDER BY eachAttentionStatus desc,fs.modify_time desc
  </select>
  
  
  
  
  
  <!-- 查询粉丝列表 -->
  <select id="queryFansIdListByCustomerId" resultType="com.honglu.quickcall.user.facade.vo.AttentionFansVO"  >
		SELECT
			fs.fans_id AS customerId,
			ct.head_portrait_url AS headPortraitUrl,
		    ct.nick_name  AS  nickName,
		    <![CDATA[ TIMESTAMPDIFF(YEAR, ct.birthday, CURDATE()) AS age  ]]>,
		    ct.sex    AS sex,
		    fs.attention_state  AS  attentionStatus,
		    ct.type AS type,
		    (IFNULL(fs.attention_state,0))&amp;(IFNULL(fs1.attention_state,0)) AS eachAttentionStatus 
		FROM
			fans fs
		LEFT JOIN customer ct ON fs.fans_id = ct.customer_id 
		LEFT JOIN fans fs1 ON fs.anchor_id = fs1.fans_id and fs.fans_id = fs1.anchor_id 
		WHERE
			fs.anchor_id = #{customerId}  and   fs.attention_state = #{attentionStatus} 
		ORDER BY eachAttentionStatus desc,fs.modify_time desc
  </select>
  
  
  <!-- 查询关注的人信息列表 -->
  <select id="queryFansListByAnchorIdList" resultMap="BaseResultMap"  >
		SELECT  <include refid="Base_Column_List"></include>    FROM  fans WHERE  fans_id  = #{customerId}   and  
		
		anchor_id in  
		<foreach collection="list"  item="id"  open="("  close=")"  separator=",">
		  #{id}
		</foreach>
  </select>
  
  <!-- 查询粉丝范围信息列表 -->
  <select id="queryFansListByFansIdList" resultMap="BaseResultMap"  >
		SELECT  <include refid="Base_Column_List"></include>    FROM  fans WHERE  anchor_id  = #{customerId}   and  
		
		fans_id in  
		<foreach collection="list"  item="id"  open="("  close=")"  separator=",">
		  #{id}
		</foreach>
  </select>
  <!-- 查询粉丝信息列表 -->
  <select id="queryCustomerListByCustomerIdList" resultType="com.honglu.quickcall.user.facade.vo.AttentionFansVO"  >
		SELECT
			customer_id  AS customerId,
			head_portrait_url AS headPortraitUrl,
			nick_name AS nickName,
			(YEAR (NOW()) - YEAR (birthday)) AS age,
			sex AS sex,
			type AS type  
		FROM  customer
		where
		customer_id in
		<foreach collection="list"  item="id"  open="("  close=")"  separator=",">
		  #{id}
		</foreach>
  </select>
  
  
  
  <!-- 查询粉丝列表 -->
  <select id="queryFansListByCustomerId" resultType="com.honglu.quickcall.user.facade.vo.AttentionFansVO"  >
	SELECT
		tmp.fansId AS customerId,
		cust.head_portrait_url AS headPortraitUrl,
		cust.nick_name AS nickName,
		(YEAR (NOW()) - YEAR (cust.birthday)) AS age,
		cust.sex AS sex,
		tmp.attentionStatus AS attentionStatus
	FROM
		(
			SELECT
	      (CASE  WHEN fb.id IS NULL THEN  0  ELSE  fb.attention_state  END) AS attentionStatus,
				fa.fans_id AS fansId
			FROM
				fans fa
			LEFT JOIN fans fb ON fa.fans_id = fb.anchor_id
			WHERE
				fa.anchor_id = #{customerId}  and  fa.attention_state  = #{attentionStatus}   AND   fb.fans_id = #{customerId}
		) tmp
	LEFT JOIN customer cust ON tmp.fansId = cust.customer_id 
  </select>
  <!-- 查询粉丝列表 -->
  <select id="queryFans"  resultMap="BaseResultMap"   >
    SELECT  
    <include refid="Base_Column_List"></include>
    FROM  fans   WHERE  fans_id = #{fansId}   AND   anchor_id = #{attendedId}
  </select>
  
  
  
  <update id="updateReadAttention" parameterType="Map">
  update fans set read_state=1
  where anchor_id=#{customerId}
  </update>
  
  
  
  
</mapper>