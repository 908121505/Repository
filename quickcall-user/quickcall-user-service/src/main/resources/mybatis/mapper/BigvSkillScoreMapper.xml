<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honglu.quickcall.user.service.dao.BigvSkillScoreMapper">
    <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.BigvSkillScore">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Oct 25 14:43:15 CST 2018.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="skill_item_id" property="skillItemId" jdbcType="BIGINT"/>
        <result column="customer_skill_id" property="customerSkillId" jdbcType="BIGINT"/>
        <result column="order_total" property="orderTotal" jdbcType="INTEGER"/>
        <result column="score_total" property="scoreTotal" jdbcType="DECIMAL"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_man" property="createMan" jdbcType="VARCHAR"/>
        <result column="modify_man" property="modifyMan" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Oct 25 14:43:15 CST 2018.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Oct 25 14:43:15 CST 2018.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, customer_id, skill_item_id, customer_skill_id, order_total, score_total,
        create_time, modify_time, create_man, modify_man, remark
    </sql>

    <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.BigvSkillScore">
        insert into bigv_skill_score (id, customer_id, skill_item_id, customer_skill_id,
        order_total, score_total, create_man, modify_man, remark)
        values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=BIGINT}, #{skillItemId,jdbcType=BIGINT}, #{customerSkillId,jdbcType=BIGINT},
        #{orderTotal,jdbcType=INTEGER}, #{scoreTotal,jdbcType=DECIMAL}, #{createMan,jdbcType=VARCHAR},
        #{modifyMan,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
    </insert>

    <!-- 查询大V技能评分数据 -->
    <select id="selectBigvSkillScore" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bigv_skill_score
        WHERE customer_id = #{customerId} AND skill_item_id = #{skillItemId}
    </select>

    <!-- 查询大V技能的订单笔数 -->
    <select id="selectBigvSkillOrderTotal" resultType="java.lang.Integer">
        SELECT order_total FROM `bigv_skill_score`
        WHERE customer_skill_id = #{customerSkillId}
    </select>

    <!-- 更新默认评价得到到订单表 -->
    <update id="updateValueScoreToOrder">
        UPDATE orders SET value_score = #{valueScore} WHERE order_id = #{orderId}
    </update>

    <!-- 更新大V单项技能评分 -->
    <update id="updateBigvSkillScore">
        UPDATE bigv_skill_score SET order_total = order_total + #{addOrderTotal}, score_total = score_total + #{valueScore}
        WHERE customer_skill_id = #{customerSkillId}
    </update>
</mapper>