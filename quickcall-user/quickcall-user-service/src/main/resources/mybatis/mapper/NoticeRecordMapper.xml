<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglu.quickcall.user.service.dao.NoticeRecordMapper">
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="persion_id" jdbcType="INTEGER" property="persionId" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_id, persion_id, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPresionId" parameterType="java.lang.Integer">
    delete from notice_record
    where persion_id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPresionIdAndnoticeId" parameterType="java.lang.Integer">
    delete from notice_record
    where persion_id = #{persion_id,jdbcType=INTEGER}
    and notice_id=#{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    insert into notice_record (id, notice_id, persion_id, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{noticeId,jdbcType=INTEGER}, #{persionId,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  
  <insert id="batchInsert" parameterType="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    insert into notice_record (id, notice_id, persion_id, 
      flag)
    values 
    <foreach collection="ids" item="pid" index="index" separator="," >  
            (#{id,jdbcType=INTEGER}, #{noticeId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
     		 #{flag,jdbcType=INTEGER})
    </foreach>
  </insert>
  
  <insert id="insertSelective" parameterType="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    insert into notice_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="persionId != null">
        persion_id,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="persionId != null">
        #{persionId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    update notice_record
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="persionId != null">
        persion_id = #{persionId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.user.facade.entity.NoticeRecord">
    update notice_record
    set notice_id = #{noticeId,jdbcType=INTEGER},
      persion_id = #{persionId,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateFlagByid" >
    update notice_record
    set 
      flag = 2
    where id in 
    <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
              #{id}                             
    </foreach> 
  </update>
</mapper>