package com.honglu.quickcall.user.service.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.honglu.quickcall.user.facade.entity.CustomerVisit;

public interface CustomerVisitMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    int insert(CustomerVisit record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    int insertSelective(CustomerVisit record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    CustomerVisit selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(CustomerVisit record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_visit
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(CustomerVisit record);
    
    int updateReadStatus(@Param("now") Date now,@Param("customerId") Long customerId );
    
    /**
     * 查询访问过我的人
     * @param before
     * @param now
     * @param customerId
     * @return
     */
    List<Map<String,Object>> queryCustomerVisitList(@Param("before") Date before,
										    		@Param("now") Date now,
										    		@Param("customerId") Long customerId,
										    		@Param("start") Integer start,
										    		@Param("size") Integer size );
    
    
    /**
     * 查询访问未读数量
     * @param customerId
     * @return
     */
    int selectUnreadCountByCustomerId(@Param("customerId") Long customerId);
}