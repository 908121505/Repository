<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Present" >
  <select id="selectByKey" resultType="Present" parameterType="java.lang.Integer" >
    SELECT *    FROM PRESENT    WHERE ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByKey" parameterType="java.lang.Integer" >
    delete from present    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Present" >
    insert into present
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="present_name != null" >
        present_name,
      </if>
      <if test="present_img != null" >
        present_img,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="buy_count != null" >
        buy_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="present_name != null" >
        #{present_name,jdbcType=VARCHAR},
      </if>
      <if test="present_img != null" >
        #{present_img,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="create_date != null" >
        #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="buy_count != null" >
        #{buy_count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="Present" >
    update present
    <set >
      <if test="present_name != null" >
        present_name = #{present_name,jdbcType=VARCHAR},
      </if>
      <if test="present_img != null" >
        present_img = #{present_img,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="create_date != null" >
        create_date = #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="buy_count != null" >
        buy_count = #{buy_count,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- zp -->
  <select id="all" resultType="Present">
  	SELECT * FROM PRESENT P WHERE P.STATE = 1  ORDER BY PRICE ASC
  </select>
  <!-- 修改礼物的销量 -->
  <update id="addCount" parameterType="Integer">
  	UPDATE PRESENT SET BUY_COUNT=BUY_COUNT+1 WHERE ID=#{id}
  </update>
  <!-- 我接受的礼物列表Index (我接受到的礼物-分组)-->
  <select id="present_index" parameterType="Integer" resultType="Present">
	SELECT
		B.PRESENT AS ID,
		PR.PRESENT_NAME,
		PR.PRESENT_IMG,
		COUNT(PR.ID) AS BUY_COUNT
	FROM
		BALANCE_OF_PAYMENTS B,PRESENT PR
	WHERE
		B.TYPE = 4
	AND
		PR.ID = B.PRESENT
	AND
		B.OTHER_ID = #{persion_id}
	GROUP BY PR.ID
	ORDER BY
		PR.PRICE DESC
	LIMIT 5;
  </select>
  <!-- 我接受的礼物总数-->
  <select id="present_count" parameterType="Integer" resultType="Integer">
	SELECT
		COUNT(PR.ID) AS BUY_COUNT
	FROM
		BALANCE_OF_PAYMENTS B,PRESENT PR
	WHERE
		B.TYPE = 4
	AND
		PR.ID = B.PRESENT
	AND
		B.OTHER_ID = #{persion_id}
  </select>
  <resultMap type="Present" id="PresentMap">
  		<id column="ID" property="id" jdbcType="INTEGER"/>
		<result column="PRESENT_NAME" property="present_name" jdbcType="VARCHAR" />
		<result column="PRICE" property="price" jdbcType="INTEGER"/>
		<result column="PRESENT_IMG" property="present_img" jdbcType="VARCHAR"/>
		<result column="CREATE_DATE" property="create_date" jdbcType="TIMESTAMP"/>
	</resultMap>
  <!-- 我接受的礼物列表Details (我接受到的礼物-详情)-->
  <select id="present_details" parameterType="Integer" resultMap="PresentMap">
  	SELECT
  		B.ID AS ID,
		B.CREATE_DATE,
		B.TOKEN AS PRICE,
		B.PERSION_ID AS PID,
		P.PHOTO,
		P.NICK_NAME,
		PR.PRESENT_NAME,
		PR.PRESENT_IMG
	FROM
		BALANCE_OF_PAYMENTS B,PRESENT PR,PERSION P 
	WHERE
		B.TYPE = 4
	AND
		PR.ID = B.PRESENT
	AND
		B.OTHER_ID = #{persion_id}
	AND
		P.ID = B.PERSION_ID
	ORDER BY
		B.CREATE_DATE DESC
	LIMIT 50
  </select>
  <!-- 我接受的礼物列表Details (我接受到的礼物-详情)  增加分页-->
  <select id="present_details_pages" parameterType="Map" resultMap="PresentMap">
  	SELECT
  		B.ID AS ID,
		B.CREATE_DATE,
		B.TOKEN AS PRICE,
		B.PERSION_ID AS PID,
		P.PHOTO,
		P.NICK_NAME,
		PR.PRESENT_NAME,
		PR.PRESENT_IMG
	FROM
		BALANCE_OF_PAYMENTS B,PRESENT PR,PERSION P 
	WHERE
		B.TYPE = 4
	AND
		PR.ID = B.PRESENT
	AND
		B.OTHER_ID = #{persion_id}
	AND
		P.ID = B.PERSION_ID
	ORDER BY
		B.CREATE_DATE DESC
	LIMIT #{begin},#{last}
  </select>
</mapper>