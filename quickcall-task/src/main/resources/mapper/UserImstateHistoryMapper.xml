<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglu.quickcall.task.dao.UserImstateHistoryMapper">
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.task.entity.UserImstateHistory">
    <id column="im_change_id" jdbcType="INTEGER" property="imChangeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="from_state" jdbcType="INTEGER" property="fromState" />
    <result column="to_state" jdbcType="INTEGER" property="toState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="oltime" jdbcType="INTEGER" property="oltime" />
  </resultMap>
  <sql id="Base_Column_List">
    im_change_id, user_id, from_state, to_state, create_time, remark, oltime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_imstate_history
    where im_change_id = #{imChangeId,jdbcType=INTEGER}
  </select>
  
  <select id="selectLastByfromState" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_imstate_history
    where user_id = #{id,jdbcType=INTEGER}
    and from_state=4
    order by im_change_id desc
    limit 1
  </select>
  
   <select id="selectByPersionIdGroup" resultMap="BaseResultMap">
    select 
    user_id,sum(oltime) as totalTime,
    DATE_FORMAT(create_time, '%Y-%m-%d') as create_time
    from user_imstate_history
    inner join persion on user_imstate_history.user_id=persion.id
    where 
    to_state=4
    and persion.sex=2
    and TO_DAYS( NOW( ) ) - TO_DAYS(create_time) = 1
    group by user_id
    order by user_id
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_imstate_history
    where im_change_id = #{imChangeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.task.entity.UserImstateHistory">
    insert into user_imstate_history (im_change_id, user_id, from_state, 
      to_state, create_time, desc, 
      remark, oltime)
    values (#{imChangeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{fromState,jdbcType=INTEGER}, 
      #{toState,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{oltime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.task.entity.UserImstateHistory">
    insert into user_imstate_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="imChangeId != null">
        im_change_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fromState != null">
        from_state,
      </if>
      <if test="toState != null">
        to_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="oltime != null">
        oltime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="imChangeId != null">
        #{imChangeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromState != null">
        #{fromState,jdbcType=INTEGER},
      </if>
      <if test="toState != null">
        #{toState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="oltime != null">
        #{oltime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.task.entity.UserImstateHistory">
    update user_imstate_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromState != null">
        from_state = #{fromState,jdbcType=INTEGER},
      </if>
      <if test="toState != null">
        to_state = #{toState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="oltime != null">
        oltime = #{oltime,jdbcType=INTEGER},
      </if>
    </set>
    where im_change_id = #{imChangeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.task.entity.UserImstateHistory">
    update user_imstate_history
    set user_id = #{userId,jdbcType=INTEGER},
      from_state = #{fromState,jdbcType=INTEGER},
      to_state = #{toState,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      oltime = #{oltime,jdbcType=INTEGER}
    where im_change_id = #{imChangeId,jdbcType=INTEGER}
  </update>
</mapper>