<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglu.quickcall.task.dao.BalanceOfPaymentsMapper">
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.task.entity.BalanceOfPayment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="persion_id" jdbcType="INTEGER" property="persionId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="token" jdbcType="INTEGER" property="token" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="finish_date" jdbcType="TIMESTAMP" property="finishDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="present" jdbcType="INTEGER" property="present" />
    <result column="chat" jdbcType="INTEGER" property="chat" />
    <result column="other_id" jdbcType="INTEGER" property="otherId" />
    <result column="capital" jdbcType="DOUBLE" property="capital" />
    <result column="charm" jdbcType="INTEGER" property="charm" />
    <result column="rong_order_id" jdbcType="VARCHAR" property="rongOrderId" />
    <result column="adminget" jdbcType="DOUBLE" property="adminget" />
    <result column="f_id" jdbcType="INTEGER" property="fId" />
    <result column="f_rate" jdbcType="DOUBLE" property="fRate" />
    <result column="s_id" jdbcType="INTEGER" property="sId" />
    <result column="s_rate" jdbcType="DOUBLE" property="sRate" />
    <result column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="t_rate" jdbcType="DOUBLE" property="tRate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="a_flag" jdbcType="INTEGER" property="aFlag" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="PRESENT_NAME" property="present_name" jdbcType="VARCHAR" />
	<result column="PRICE" property="price" jdbcType="INTEGER"/>
	<result column="PRESENT_IMG" property="present_img" jdbcType="VARCHAR"/>
	<result column="CREATE_DATE" property="create_date" jdbcType="TIMESTAMP"/>
	<result column="PHOTO" property="photo" jdbcType="VARCHAR" />
	<result column="NICK_NAME" property="nick_name" jdbcType="VARCHAR" />
	<result column="totalCapital" property="totalCapital" jdbcType="INTEGER" />
	<result column="totalTime" property="totalTime" jdbcType="INTEGER" />
	<result column="unit_nums" property="unit_nums" jdbcType="INTEGER" />
    <result column="total_number" property="total_number" jdbcType="INTEGER" />
  </resultMap>
  
	
  <sql id="Base_Column_List">
    id, persion_id, type, token, create_date, finish_date, state, present, chat, other_id, 
    capital, charm, rong_order_id, adminget, f_id, f_rate, s_id, s_rate, t_id, t_rate, 
    grade, a_flag,unit_nums
  </sql>
  
   <select id="selectByPresionId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    sum(capital) as totalCapital ,
   	sum(unit_nums) as totalTime
    from balance_of_payments
    where other_id = #{otherId,jdbcType=INTEGER}
    and type in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
         #{item}       
    </foreach>    
    AND TO_DAYS( NOW( ) ) - TO_DAYS(create_date) = 1
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from balance_of_payments
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectByPresionIdAndType" resultMap="BaseResultMap">
    select 
    persion_id,type,other_id,sum(capital) as totalCapital,sum(unit_nums) as totalTime,
    DATE_FORMAT(create_date, '%Y-%m-%d') as createDate
    from balance_of_payments
    where  TO_DAYS( NOW( ) ) - TO_DAYS(create_date) = 1
    and type in (2,3)
    group by other_id,type
    order by other_id,type
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from balance_of_payments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.task.entity.BalanceOfPayment">
    insert into balance_of_payments (id, persion_id, type, 
      token, create_date, finish_date, 
      state, present, chat, 
      other_id, capital, charm, 
      rong_order_id, adminget, f_id, 
      f_rate, s_id, s_rate, t_id, 
      t_rate, grade, a_flag)
    values (#{id,jdbcType=INTEGER}, #{persionId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{token,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{finishDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{present,jdbcType=INTEGER}, #{chat,jdbcType=INTEGER}, 
      #{otherId,jdbcType=INTEGER}, #{capital,jdbcType=DOUBLE}, #{charm,jdbcType=INTEGER}, 
      #{rongOrderId,jdbcType=VARCHAR}, #{adminget,jdbcType=DOUBLE}, #{fId,jdbcType=INTEGER}, 
      #{fRate,jdbcType=DOUBLE}, #{sId,jdbcType=INTEGER}, #{sRate,jdbcType=DOUBLE}, #{tId,jdbcType=INTEGER}, 
      #{tRate,jdbcType=DOUBLE}, #{grade,jdbcType=INTEGER}, #{aFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.task.entity.BalanceOfPayment">
    insert into balance_of_payments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="persionId != null">
        persion_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="finishDate != null">
        finish_date,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="present != null">
        present,
      </if>
      <if test="chat != null">
        chat,
      </if>
      <if test="otherId != null">
        other_id,
      </if>
      <if test="capital != null">
        capital,
      </if>
      <if test="charm != null">
        charm,
      </if>
      <if test="rongOrderId != null">
        rong_order_id,
      </if>
      <if test="adminget != null">
        adminget,
      </if>
      <if test="fId != null">
        f_id,
      </if>
      <if test="fRate != null">
        f_rate,
      </if>
      <if test="sId != null">
        s_id,
      </if>
      <if test="sRate != null">
        s_rate,
      </if>
      <if test="tId != null">
        t_id,
      </if>
      <if test="tRate != null">
        t_rate,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="aFlag != null">
        a_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="persionId != null">
        #{persionId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishDate != null">
        #{finishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="present != null">
        #{present,jdbcType=INTEGER},
      </if>
      <if test="chat != null">
        #{chat,jdbcType=INTEGER},
      </if>
      <if test="otherId != null">
        #{otherId,jdbcType=INTEGER},
      </if>
      <if test="capital != null">
        #{capital,jdbcType=DOUBLE},
      </if>
      <if test="charm != null">
        #{charm,jdbcType=INTEGER},
      </if>
      <if test="rongOrderId != null">
        #{rongOrderId,jdbcType=VARCHAR},
      </if>
      <if test="adminget != null">
        #{adminget,jdbcType=DOUBLE},
      </if>
      <if test="fId != null">
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="fRate != null">
        #{fRate,jdbcType=DOUBLE},
      </if>
      <if test="sId != null">
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="sRate != null">
        #{sRate,jdbcType=DOUBLE},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="tRate != null">
        #{tRate,jdbcType=DOUBLE},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="aFlag != null">
        #{aFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.task.entity.BalanceOfPayment">
    update balance_of_payments
    <set>
      <if test="persionId != null">
        persion_id = #{persionId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishDate != null">
        finish_date = #{finishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="present != null">
        present = #{present,jdbcType=INTEGER},
      </if>
      <if test="chat != null">
        chat = #{chat,jdbcType=INTEGER},
      </if>
      <if test="otherId != null">
        other_id = #{otherId,jdbcType=INTEGER},
      </if>
      <if test="capital != null">
        capital = #{capital,jdbcType=DOUBLE},
      </if>
      <if test="charm != null">
        charm = #{charm,jdbcType=INTEGER},
      </if>
      <if test="rongOrderId != null">
        rong_order_id = #{rongOrderId,jdbcType=VARCHAR},
      </if>
      <if test="adminget != null">
        adminget = #{adminget,jdbcType=DOUBLE},
      </if>
      <if test="fId != null">
        f_id = #{fId,jdbcType=INTEGER},
      </if>
      <if test="fRate != null">
        f_rate = #{fRate,jdbcType=DOUBLE},
      </if>
      <if test="sId != null">
        s_id = #{sId,jdbcType=INTEGER},
      </if>
      <if test="sRate != null">
        s_rate = #{sRate,jdbcType=DOUBLE},
      </if>
      <if test="tId != null">
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="tRate != null">
        t_rate = #{tRate,jdbcType=DOUBLE},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="aFlag != null">
        a_flag = #{aFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.task.entity.BalanceOfPayment">
    update balance_of_payments
    set persion_id = #{persionId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      token = #{token,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      finish_date = #{finishDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      present = #{present,jdbcType=INTEGER},
      chat = #{chat,jdbcType=INTEGER},
      other_id = #{otherId,jdbcType=INTEGER},
      capital = #{capital,jdbcType=DOUBLE},
      charm = #{charm,jdbcType=INTEGER},
      rong_order_id = #{rongOrderId,jdbcType=VARCHAR},
      adminget = #{adminget,jdbcType=DOUBLE},
      f_id = #{fId,jdbcType=INTEGER},
      f_rate = #{fRate,jdbcType=DOUBLE},
      s_id = #{sId,jdbcType=INTEGER},
      s_rate = #{sRate,jdbcType=DOUBLE},
      t_id = #{tId,jdbcType=INTEGER},
      t_rate = #{tRate,jdbcType=DOUBLE},
      grade = #{grade,jdbcType=INTEGER},
      a_flag = #{aFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectValentineCPRankForTask" resultType="Persion" >
        select persion_id id
        from(
        select buy.id persion_id,buy.nick_name nick_name,sell.id other_id,sell.nick_name present_name,buy.photo photo,sell.photo mphoto, max(b.create_date) stime, sum(b.token) total
        from balance_of_payments b
        inner join persion sell  on b.other_id = sell.id
        inner join persion buy on b.persion_id = buy.id
        where b.create_date >= "2018-02-14 00:00:00" and b.create_date &lt; "2018-02-15 00:00:00"
        and b.type in (1,2,3,4)
        group by buy.id,sell.id  order by total desc,stime asc
        ) rank group by persion_id  order by total desc,stime asc
        limit 1;
    </select>

    <!-- 查询日期范围内消费金额超过每个指标的所有男生  条件：消费满3000金豆的男性用户  -->
    <select id="todayManComsumeTotalQuery" parameterType="java.lang.String" resultMap="BaseResultMap">
      SELECT b.persion_id,SUM(b.token) AS total_number FROM persion p
      JOIN balance_of_payments b ON p.id=b.persion_id
      WHERE b.create_date BETWEEN #{startDate} AND #{endDate} AND p.sex=1 AND b.type IN(1,2,3,4)
      GROUP BY DATE_FORMAT(b.create_date,'%d'),b.persion_id
      HAVING total_number>3000
      ORDER BY b.create_date DESC
    </select>

    <!-- 查询日期范围内消费金额超过每个指标的所有男生  条件：聊天时长超过20分钟的女神用户-->
    <select id="todayWomanComsumeTotalQuery" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT b.other_id as persion_id,SUM(b.capital) AS total_number FROM persion p
        JOIN balance_of_payments b ON p.id=b.other_id
        WHERE b.create_date BETWEEN #{startDate} AND #{endDate} AND p.sex=2 AND b.type IN(3)
        GROUP BY DATE_FORMAT(b.create_date,'%d'),b.other_id
        HAVING COUNT(1)>20
        ORDER BY b.create_date DESC
    </select>

      <select id="womandaysTotal" parameterType="Map" resultMap="BaseResultMap">
      SELECT b.other_id other_id ,sum(b.capital) totalCapital  from  balance_of_payments  b
     where b.type=4 and b.other_id is not NULL  and b.create_date >= #{startDate} and b.create_date &lt; #{endDate}
     GROUP BY b.other_id 
      </select>

</mapper>