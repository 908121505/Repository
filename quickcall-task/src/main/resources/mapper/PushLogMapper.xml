<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honglu.quickcall.task.dao.PushLogMapper" >
  <resultMap id="BaseResultMap" type="com.honglu.quickcall.task.entity.PushLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="is_timing" property="isTiming" jdbcType="INTEGER" />
    <result column="push_time" property="pushTime" jdbcType="TIMESTAMP" />
    <result column="push_total_num" property="pushTotalNum" jdbcType="INTEGER" />
    <result column="push_success_num" property="pushSuccessNum" jdbcType="INTEGER" />
    <result column="is_read_num" property="isReadNum" jdbcType="INTEGER" />
    <result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_man" property="createMan" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_man" property="modifyMan" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, content, state, is_timing, push_time, push_total_num, push_success_num, 
    is_read_num, link_url, remark, create_time, create_man, modify_time, modify_man, alias
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honglu.quickcall.task.entity.PushLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from push_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from push_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from push_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.honglu.quickcall.task.entity.PushLogExample" >
    delete from push_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.honglu.quickcall.task.entity.PushLog" >
    insert into push_log (id, title, content, 
      state, is_timing, push_time, 
      push_total_num, push_success_num, is_read_num, 
      link_url, remark, create_time, 
      create_man, modify_time, modify_man, 
      alias)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{isTiming,jdbcType=INTEGER}, #{pushTime,jdbcType=TIMESTAMP}, 
      #{pushTotalNum,jdbcType=INTEGER}, #{pushSuccessNum,jdbcType=INTEGER}, #{isReadNum,jdbcType=INTEGER}, 
      #{linkUrl,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createMan,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyMan,jdbcType=VARCHAR}, 
      #{alias,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.honglu.quickcall.task.entity.PushLog" >
    insert into push_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isTiming != null" >
        is_timing,
      </if>
      <if test="pushTime != null" >
        push_time,
      </if>
      <if test="pushTotalNum != null" >
        push_total_num,
      </if>
      <if test="pushSuccessNum != null" >
        push_success_num,
      </if>
      <if test="isReadNum != null" >
        is_read_num,
      </if>
      <if test="linkUrl != null" >
        link_url,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createMan != null" >
        create_man,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyMan != null" >
        modify_man,
      </if>
      <if test="alias != null" >
        alias,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isTiming != null" >
        #{isTiming,jdbcType=INTEGER},
      </if>
      <if test="pushTime != null" >
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTotalNum != null" >
        #{pushTotalNum,jdbcType=INTEGER},
      </if>
      <if test="pushSuccessNum != null" >
        #{pushSuccessNum,jdbcType=INTEGER},
      </if>
      <if test="isReadNum != null" >
        #{isReadNum,jdbcType=INTEGER},
      </if>
      <if test="linkUrl != null" >
        #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyMan != null" >
        #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honglu.quickcall.task.entity.PushLogExample" resultType="java.lang.Integer" >
    select count(*) from push_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update push_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.isTiming != null" >
        is_timing = #{record.isTiming,jdbcType=INTEGER},
      </if>
      <if test="record.pushTime != null" >
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushTotalNum != null" >
        push_total_num = #{record.pushTotalNum,jdbcType=INTEGER},
      </if>
      <if test="record.pushSuccessNum != null" >
        push_success_num = #{record.pushSuccessNum,jdbcType=INTEGER},
      </if>
      <if test="record.isReadNum != null" >
        is_read_num = #{record.isReadNum,jdbcType=INTEGER},
      </if>
      <if test="record.linkUrl != null" >
        link_url = #{record.linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createMan != null" >
        create_man = #{record.createMan,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyMan != null" >
        modify_man = #{record.modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null" >
        alias = #{record.alias,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update push_log
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      is_timing = #{record.isTiming,jdbcType=INTEGER},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      push_total_num = #{record.pushTotalNum,jdbcType=INTEGER},
      push_success_num = #{record.pushSuccessNum,jdbcType=INTEGER},
      is_read_num = #{record.isReadNum,jdbcType=INTEGER},
      link_url = #{record.linkUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_man = #{record.createMan,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_man = #{record.modifyMan,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update push_log
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      is_timing = #{record.isTiming,jdbcType=INTEGER},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      push_total_num = #{record.pushTotalNum,jdbcType=INTEGER},
      push_success_num = #{record.pushSuccessNum,jdbcType=INTEGER},
      is_read_num = #{record.isReadNum,jdbcType=INTEGER},
      link_url = #{record.linkUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_man = #{record.createMan,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_man = #{record.modifyMan,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.honglu.quickcall.task.entity.PushLog" >
    update push_log
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isTiming != null" >
        is_timing = #{isTiming,jdbcType=INTEGER},
      </if>
      <if test="pushTime != null" >
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTotalNum != null" >
        push_total_num = #{pushTotalNum,jdbcType=INTEGER},
      </if>
      <if test="pushSuccessNum != null" >
        push_success_num = #{pushSuccessNum,jdbcType=INTEGER},
      </if>
      <if test="isReadNum != null" >
        is_read_num = #{isReadNum,jdbcType=INTEGER},
      </if>
      <if test="linkUrl != null" >
        link_url = #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        create_man = #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyMan != null" >
        modify_man = #{modifyMan,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.honglu.quickcall.task.entity.PushLog" >
    update push_log
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      is_timing = #{isTiming,jdbcType=INTEGER},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      push_total_num = #{pushTotalNum,jdbcType=INTEGER},
      push_success_num = #{pushSuccessNum,jdbcType=INTEGER},
      is_read_num = #{isReadNum,jdbcType=INTEGER},
      link_url = #{linkUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_man = #{createMan,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_man = #{modifyMan,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honglu.quickcall.task.entity.PushLog" >
    update push_log
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      is_timing = #{isTiming,jdbcType=INTEGER},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      push_total_num = #{pushTotalNum,jdbcType=INTEGER},
      push_success_num = #{pushSuccessNum,jdbcType=INTEGER},
      is_read_num = #{isReadNum,jdbcType=INTEGER},
      link_url = #{linkUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_man = #{createMan,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_man = #{modifyMan,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>