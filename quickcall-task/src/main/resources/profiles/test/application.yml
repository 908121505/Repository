##########################################################
##################  所有profile共有的配置    ###################
##########################################################

server:
  port: 8078

mybatis:
    type-aliases-package: com.xiaoniu.quickcall.task.entity
    mapper-locations: classpath:/mapper/*Mapper.xml
    config-location: classpath:mybatis/mybatis-config.xml


##########################################################
###################  开发环境的profile  ####################
##########################################################

spring:
#  profiles:
#    active: dev
  data:
    datasource:
      druid:
        url: jdbc:mysql://172.16.11.199:3306/voice?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&noAccessToProcedureBodies=true
        username: voice
        password: voice123
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 1
        minIdle: 3
        maxActive: 14
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true


  #Redis settings
  redis:
    host: 127.0.0.1
    port: 6379
    password: sudai@3210
    timeout: 10000
    database: 0
    # pool config
    pool:
      min-idle: 5
      max-idle: 10
      max-active: 10
      max-wait: 3000
